<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[晓峰的博客 | Beyond Compare]]></title>
  <subtitle><![CDATA[Learning programming, i enjoy it.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://xiaofeng.site/"/>
  <updated>2016-03-02T06:21:51.746Z</updated>
  <id>http://xiaofeng.site/</id>
  
  <author>
    <name><![CDATA[xiaofeng]]></name>
    <email><![CDATA[xiaofeng355@gmail.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Http协议简介]]></title>
    <link href="http://xiaofeng.site/2016/03/02/Http%E5%8D%8F%E8%AE%AE%E7%AE%80%E4%BB%8B/undefined/"/>
    <id>http://xiaofeng.site/2016/03/02/Http协议简介/undefined/</id>
    <published>2016-03-02T06:20:33.000Z</published>
    <updated>2016-03-02T06:21:51.746Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原作者：吾爱<br>源地址：<a href="http://my.oschina.net/cxz001/blog/331671" target="_blank" rel="external">点击跳转</a></p>
</blockquote>
<h2 id="序言">序言</h2><p><img src="http://www.qixing318.com/uploads/blog/image/20150120/d0177c725e5b3660d9984b0f70e431f0.jpg" alt="request-response"><br>我们平时在浏览网页的时候都是使用浏览器，输入你要的网址后回车，就会显示出我们所想要的内容，看似这个简单的用户操作行为的背后，Web的工作原理是怎样的呢？到底隐藏了些什么呢？</p>
<p>对于传统的上网流程，系统它是这么做的：浏览器本身它是一个客户端，当输入URL地址的时候，浏览器首先会去请求DNS服务器，通过DNS查询获取相应的域名所对应的IP地址，然后通过这个映射的IP地址找到IP对应的服务器，并建立连接，等浏览器发送完HTTP Request（请求）包后，服务器接收到请求包之后才开始处理，返回HTTP Response（响应）包，客户端浏览器收到来自服务器的响应后就开始渲染这个Response包里的主体（body）部分，等收到全部的内容后断开与该服务器之间的连接。</p>
<p><img src="http://www.qixing318.com/uploads/blog/image/20150120/9f039f15b643c9cea8bab75b92f3e26b.png" alt="web-request-process"></p>
<p>一个Web服务器也被称为HTTP服务器，它通过HTTP协议与客户端通信。这个客户端通常指的是Web浏览器(其实手机端客户端内部也是浏览器实现的)。</p>
<h2 id="Web服务器的工作原理可以简单地定义为：">Web服务器的工作原理可以简单地定义为：</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>客户机通过TCP/IP协议建立到服务器的TCP连接</td>
</tr>
<tr>
<td>2</td>
<td>客户端向服务器发送HTTP协议请求包，请求服务器里的资源文档</td>
</tr>
<tr>
<td>3</td>
<td>服务器向客户机发送HTTP协议应答包，如果请求的资源包含有动态语言的内容，那么服务器会调用动态语言的解释引擎负责处理“动态内容”，并将处理得到的数据返回给客户端</td>
</tr>
<tr>
<td>4</td>
<td>客户机与服务器断开。由客户端解释HTML文档，在客户端屏幕上渲染图形结果</td>
</tr>
</tbody>
</table>
<p>一个简单的HTTP事务就是这样实现的，看起来很复杂，原理其实是挺简单的。需要注意的是客户机与服务器之间的通信是非持久连接的，也就是当服务器发送了应答后就与客户机断开连接，等待下一次请求。</p>
<h2 id="URL和DNS解析">URL和DNS解析</h2><p>我们浏览网页都是通过URL访问的，那么URL到底是怎么样的呢？<br>URL(Uniform Resource Locator)是“统一资源定位符”的英文缩写，用于描述一个网络上的资源, 基本格式如下：</p>
<p><code>html
scheme://host[:port#]/path/.../[?query-string][#anchor]</code></p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>scheme</td>
<td>指定低层使用的协议(例如：http, https, ftp)</td>
</tr>
<tr>
<td>host</td>
<td>HTTP服务器的IP地址或者域名</td>
</tr>
<tr>
<td>port</td>
<td>HTTP服务器的默认端口是80，这种情况下端口号可以省略。如果使用了别的端口，必须指明，例如 <a href="http://www.qixing318.com:80/" target="_blank" rel="external">http://www.qixing318.com:80/</a></td>
</tr>
<tr>
<td>path</td>
<td>访问资源的路径</td>
</tr>
<tr>
<td>query-string</td>
<td>发送给http服务器的数据</td>
</tr>
<tr>
<td>anchor</td>
<td>锚</td>
</tr>
</tbody>
</table>
<p>DNS(Domain Name System)是“域名系统”的英文缩写，是一种组织成域层次结构的计算机和网络服务命名系统，它用于TCP/IP网络，它从事将主机名或域名转换为实际IP地址的工作。DNS就是这样的一位“翻译官”，它的基本工作原理可用下图来表示。</p>
<p><img src="http://www.qixing318.com/uploads/blog/image/20150120/97fc06248d4bc542a355ddfce1549044.png" alt="dns-core"></p>
<h2 id="DNS工作原理">DNS工作原理</h2><p>更详细的DNS解析的过程如下，这个过程有助于我们理解DNS的工作模式</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>在浏览器中输入www.qq.com域名，操作系统会先检查自己本地的hosts文件是否有这个网址映射关系，如果有，就先调用这个IP地址映射，完成域名解析。</td>
</tr>
<tr>
<td>2</td>
<td>如果hosts里没有这个域名的映射，则查找本地DNS解析器缓存，是否有这个网址映射关系，如果有，直接返回，完成域名解析。</td>
</tr>
<tr>
<td>3</td>
<td>如果hosts与本地DNS解析器缓存都没有相应的网址映射关系，首先会找TCP/IP参数中设置的首选DNS服务器，在此我们叫它本地DNS服务器，此服务器收到查询时，如果要查询的域名，包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析，此解析具有权威性。</td>
</tr>
<tr>
<td>4</td>
<td>如果要查询的域名，不由本地DNS服务器区域解析，但该服务器已缓存了此网址映射关系，则调用这个IP地址映射，完成域名解析，此解析不具有权威性。</td>
</tr>
<tr>
<td>5</td>
<td>如果本地DNS服务器本地区域文件与缓存解析都失效，则根据本地DNS服务器的设置（是否设置转发器）进行查询，如果未用转发模式，本地DNS就把请求发至 “根DNS服务器”，“根DNS服务器”收到请求后会判断这个域名(.com)是谁来授权管理，并会返回一个负责该顶级域名服务器的一个IP。本地DNS服务器收到IP信息后，将会联系负责.com域的这台服务器。这台负责.com域的服务器收到请求后，如果自己无法解析，它就会找一个管理.com域的下一级DNS服务器地址(qixing318.com)给本地DNS服务器。当本地DNS服务器收到这个地址后，就会找qixing318.com域服务器，重复上面的动作，进行查询，直至找到www.qixing318.com主机。</td>
</tr>
<tr>
<td>6</td>
<td>如果用的是转发模式，此DNS服务器就会把请求转发至上一级DNS服务器，由上一级服务器进行解析，上一级服务器如果不能解析，或找根DNS或把转请求转至上上级，以此循环。不管是本地DNS服务器用是是转发，还是根提示，最后都是把结果返回给本地DNS服务器，由此DNS服务器再返回给客户机。</td>
</tr>
</tbody>
</table>
<p><img src="http://www.qixing318.com/uploads/blog/image/20150120/639c39cf315ddbd717d3d2d78ff74228.png" alt="dns-process"></p>
<h2 id="DNS解析的整个流程">DNS解析的整个流程</h2><p>所谓 递归查询过程 就是 “查询的递交者” 更替, 而 迭代查询过程 则是 “查询的递交者”不变。</p>
<blockquote>
<p>举个例子来说，你想知道某个一起上法律课的女孩的电话，并且你偷偷拍了她的照片，回到寝室告诉一个很仗义的哥们儿，这个哥们儿二话没说，拍着胸脯告诉你，甭急，我替你查(此处完成了一次递归查询，即，问询者的角色更替)。然后他拿着照片问了学院大四学长，学长告诉他，这姑娘是xx系的；然后这哥们儿马不停蹄又问了xx系的办公室主任助理同学，助理同学说是xx系yy班的，然后很仗义的哥们儿去xx系yy班的班长那里取到了该女孩儿电话。(此处完成若干次迭代查询，即，问询者角色不变，但反复更替问询对象)最后，他把号码交到了你手里。完成整个查询过程。<br>通过上面的步骤，我们最后获取的是IP地址，也就是浏览器最后发起请求的时候是基于IP来和服务器做信息交互的。</p>
</blockquote>
<h2 id="HTTP协议详解">HTTP协议详解</h2><p>HTTP协议是Web工作的核心，所以要了解清楚Web的工作方式就需要详细的了解清楚HTTP是怎么样工作的。</p>
<p>HTTP是一种让Web服务器与浏览器(客户端)通过Internet发送与接收数据的协议,它建立在TCP协议之上，一般采用TCP的80端口。它是一个请求、响应协议–客户端发出一个请求，服务器响应这个请求。</p>
<p>在HTTP中，客户端总是通过建立一个连接与发送一个HTTP请求来发起一个事务。服务器不能主动去与客户端联系，也不能给客户端发出一个回调连接。客户端与服务器端都可以提前中断一个连接。例如，当浏览器下载一个文件时，你可以通过点击“停止”键来中断文件的下载，关闭与服务器的HTTP连接。</p>
<p>HTTP协议是无状态的，同一个客户端的这次请求和上次请求是没有对应关系，对HTTP服务器来说，它并不知道这两个请求是否来自同一个客户端。为了解决这个问题， Web程序引入了Cookie机制来维护连接的可持续状态。</p>
<blockquote>
<p>HTTP协议是建立在TCP协议之上的，因此TCP攻击一样会影响HTTP的通讯，例如比较常见的一些攻击：SYN Flood是当前最流行的DoS（拒绝服务攻击）与DdoS（分布式拒绝服务攻击）的方式之一，这是一种利用TCP协议缺陷，发送大量伪造的TCP连接请求，从而使得被攻击方资源耗尽（CPU满负荷或内存不足）的攻击方式。</p>
</blockquote>
<h2 id="HTTP请求包（浏览器信息）">HTTP请求包（浏览器信息）</h2><p>我们先来看看Request包的结构, Request包分为3部分，第一部分叫Request line（请求行）, 第二部分叫Request header（请求头）,第三部分是body（主体）。</p>
<p>header和body之间有个空行，请求包的例子所示:</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>GET /domains/example/ HTTP/1.1</td>
<td>请求行: 请求方法 请求URI HTTP协议/协议版本</td>
</tr>
<tr>
<td>Host：www.qixing318.com.</td>
<td>服务端的主机名</td>
</tr>
<tr>
<td>User-Agent：Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4</td>
<td>客户端浏览器信息</td>
</tr>
<tr>
<td>Accept：text/html,application/xhtml+xml,application/xml;q=0.9,<em>/</em>;q=0.8</td>
<td>客户端能接收的mine类型</td>
</tr>
<tr>
<td>Accept-Encoding：gzip,deflate,sdcn</td>
<td>是否支持流压缩</td>
</tr>
<tr>
<td>Accept-Charset：UTF-8,*;q=0.5</td>
<td>客户端字符编码集</td>
</tr>
<tr>
<td>“\r\n\r\n”</td>
<td>空行,用于分割请求头和消息体</td>
</tr>
<tr>
<td>“\r\n\r\n”</td>
<td>空行,消息体,请求资源参数,例如POST传递的参数</td>
</tr>
</tbody>
</table>
<p>HTTP协议定义了很多与服务器交互的请求方法，最基本的有4种，分别是GET,POST,PUT,DELETE。一个URL地址用于描述一个网络上的资源，而HTTP中的GET, POST, PUT, DELETE就对应着对这个资源的查，改，增，删4个操作。我们最常见的就是GET和POST了。GET一般用于获取/查询资源信息，而POST一般用于更新资源信息。</p>
<h2 id="通过fiddler抓包可以看到如下请求信息:">通过fiddler抓包可以看到如下请求信息:</h2><p><img src="http://www.qixing318.com/uploads/blog/image/20150120/1b655d5bc2e339010d3857fb50c841a2.png" alt="fiddler-get"><br>上图为：fiddler抓取的GET信息</p>
<p><img src="http://www.qixing318.com/uploads/blog/image/20150120/125b42ec4dcfb1e5601c8e2695076fb9.png" alt="fiddler-post"><br>上图为：fiddler抓取的POST信息</p>
<h2 id="GET和POST的区别:">GET和POST的区别:</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>我们可以看到GET请求消息体为空，POST请求带有消息体。</td>
</tr>
<tr>
<td>2</td>
<td>GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&amp;相连，如EditPosts.aspx?name=test1&amp;id=123456。POST方法是把提交的数据放在HTTP包的body中。</td>
</tr>
<tr>
<td>3</td>
<td>GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制。</td>
</tr>
<tr>
<td>4</td>
<td>GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码。</td>
</tr>
</tbody>
</table>
<h2 id="HTTP响应包（服务器信息）">HTTP响应包（服务器信息）</h2><p>我们再来看看HTTP的response包，他的结构如下：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>HTTP/1.1 200 OK</td>
<td>状态行</td>
</tr>
<tr>
<td>Server: nginx/1.0.8</td>
<td>服务器使用的WEB软件名及版本</td>
</tr>
<tr>
<td>Date:Date: Tue, 30 Oct 2012 04:14:25 GMT</td>
<td>发送时间</td>
</tr>
<tr>
<td>Content-Type: text/html</td>
<td>服务器发送信息的类型</td>
</tr>
<tr>
<td>Transfer-Encoding: chunked</td>
<td>表示发送HTTP包是分段发的</td>
</tr>
<tr>
<td>Connection: keep-alive</td>
<td>保持连接状态</td>
</tr>
<tr>
<td>Content-Length: 90</td>
<td>消息主体内容长度</td>
</tr>
<tr>
<td>\r\n</td>
<td>空行，用来分割消息头和主体</td>
</tr>
<tr>
<td>&lt;!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Transitional//EN”…</td>
<td>消息体部分</td>
</tr>
</tbody>
</table>
<p>Response包中的第一行叫做状态行，由HTTP协议版本号， 状态码， 状态消息 三部分组成。<br>状态码用来告诉HTTP客户端,HTTP服务器是否产生了预期的Response。<br>HTTP/1.1协议中定义了5类状态码， 状态码由三位数字组成，第一个数字定义了响应的类别</p>
<blockquote>
<p><a href="https://httpstatuses.com/" target="_blank" rel="external">状态码详细查询</a></p>
</blockquote>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>1XX</td>
<td>提示信息 - 表示请求已被成功接收，继续处理</td>
</tr>
<tr>
<td>2XX</td>
<td>成功 - 表示请求已被成功接收，理解，接受</td>
</tr>
<tr>
<td>3XX</td>
<td>重定向 - 要完成请求必须进行更进一步的处理</td>
</tr>
<tr>
<td>4XX</td>
<td>客户端错误 - 请求有语法错误或请求无法实现</td>
</tr>
<tr>
<td>5XX</td>
<td>服务器端错误 - 服务器未能实现合法的请求</td>
</tr>
</tbody>
</table>
<p>我们看下面这个图展示了详细的返回信息，左边可以看到有很多的资源返回码，200是常用的，表示正常信息，302表示跳转。response header里面展示了详细的信息。<br><img src="http://www.qixing318.com/uploads/blog/image/20150120/c9e285dfb362101c4d258534ccfa5401.png" alt="request-allinfo"><br>【上图：访问一次网站的全部请求信息】</p>
<h2 id="HTTP协议是无状态的和Connection:_keep-alive的区别">HTTP协议是无状态的和Connection: keep-alive的区别</h2><p>无状态是指协议对于事务处理没有记忆能力，服务器不知道客户端是什么状态。从另一方面讲，打开一个服务器上的网页和你之前打开这个服务器上的网页之间没有任何联系。<br>HTTP是一个无状态的面向连接的协议，无状态不代表HTTP不能保持TCP连接，更不能代表HTTP使用的是UDP协议（面对无连接）。<br>从HTTP/1.1起，默认都开启了Keep-Alive保持连接特性，简单地说，当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的TCP连接。<br>Keep-Alive不会永久保持连接，它有一个保持时间，可以在不同服务器软件（如Apache）中设置这个时间。</p>
<h2 id="请求实例">请求实例</h2><p><img src="http://www.qixing318.com/uploads/blog/image/20150120/919ca19ef2176dacecdd2824083e9baa.png" alt="request-entity"></p>
<p>【上图为：一次请求的request和response】</p>
<p>上面这张图我们可以了解到整个的通讯过程，同时细心的读者是否注意到了一点，一个URL请求但是左边栏里面为什么会有那么多的资源请求(这些都是静态文件，go对于静态文件有专门的处理方式)。</p>
<p>这个就是浏览器的一个功能，第一次请求url，服务器端返回的是html页面，然后浏览器开始渲染HTML：当解析到HTML DOM里面的图片连接，css脚本和js脚本的链接，浏览器就会自动发起一个请求静态资源的HTTP请求，获取相对应的静态资源，然后浏览器就会渲染出来，最终将所有资源整合、渲染，完整展现在我们面前的屏幕上。</p>
<blockquote>
<p>网页优化方面有一项措施是减少HTTP请求次数，就是把尽量多的css和js资源合并在一起，目的是尽量减少网页请求静态资源的次数，提高网页加载速度，同时减缓服务器的压力。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>原作者：吾爱<br>源地址：<a href="http://my.oschina.net/cxz001/blog/331671" target="_blank" rel="external">点击跳转</a></p>
</blockquote>
<]]>
    </summary>
    
      <category term="http协议" scheme="http://xiaofeng.site/tags/http%E5%8D%8F%E8%AE%AE/"/>
    
      <category term="Java" scheme="http://xiaofeng.site/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[实用bat脚本[笔记]]]></title>
    <link href="http://xiaofeng.site/2016/03/01/%E5%AE%9E%E7%94%A8bat%E8%84%9A%E6%9C%AC-%E7%AC%94%E8%AE%B0/undefined/"/>
    <id>http://xiaofeng.site/2016/03/01/实用bat脚本-笔记/undefined/</id>
    <published>2016-03-01T03:41:36.000Z</published>
    <updated>2016-03-01T06:02:58.480Z</updated>
    <content type="html"><![CDATA[<h3 id="垃圾清理">垃圾清理</h3><hr>
<p>一个自定义的pc端系统垃圾清理批处理文件，可以配合各大电脑管家使用：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@<span class="built_in">echo</span> off </span><br><span class="line">color <span class="number">0</span>a</span><br><span class="line">title ********系统垃圾清理******** </span><br><span class="line"><span class="built_in">echo</span> 正在清除系统垃圾文件，请稍后...... </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除补丁备份目录 </span><br><span class="line">RD %windir%\<span class="variable">$hf_mig</span>$ /Q /S </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 把补丁卸载文件夹的名字保存成patchs.txt </span><br><span class="line">dir %windir%\<span class="variable">$NtUninstall</span>* /a:d /b &gt;%windir%\patchs.txt </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 从patchs.txt中读取文件夹列表并且删除文件夹 </span><br><span class="line"><span class="keyword">for</span> /f %%i <span class="keyword">in</span> (%windir%\patchs.txt) <span class="keyword">do</span> rd %windir%\%%i /s /q </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除patchs.txt </span><br><span class="line">del %windir%\patchs.txt /f /q </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除补丁安装记录内容（下面的del /f /s /q %systemdrive%\*.log已经包含删除此类文件） </span><br><span class="line">del %windir%\KB*.log /f /q </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除系统盘目录下临时文件 </span><br><span class="line">del /f /s /q %systemdrive%\*.tmp </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除系统盘目录下临时文件 </span><br><span class="line">del /f /s /q %systemdrive%\*._mp </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除系统盘目录下日志文件 </span><br><span class="line">del /f /s /q %systemdrive%\*.log </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除系统盘目录下GID文件(属于临时文件，具体作用不详) </span><br><span class="line">del /f /s /q %systemdrive%\*.gid </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除系统目录下scandisk（磁盘扫描）留下的无用文件 </span><br><span class="line">del /f /s /q %systemdrive%\*.chk </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除系统目录下old文件 </span><br><span class="line">del /f /s /q %systemdrive%\*.old</span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> 删除回收站的无用文件 </span><br><span class="line">del /f /s /q %systemdrive%\recycled\*.* </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除系统目录下备份文件 </span><br><span class="line">del /f /s /q %windir%\*.bak </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除应用程序临时文件 </span><br><span class="line">del /f /s /q %windir%\prefetch\*.* </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除系统维护等操作产生的临时文件 </span><br><span class="line">rd /s /q %windir%\temp &amp; md %windir%\temp </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除当前用户的COOKIE（IE） </span><br><span class="line">del /f /q %userprofile%\cookies\*.* </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除internet临时文件 </span><br><span class="line">del /f /s /q <span class="string">"%userprofile%\local settings\temporary internet files\*.*"</span> </span><br><span class="line">del /f /s /q <span class="string">"%userprofile%\Local Settings\Temporary Internet Files\*.*"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除当前用户日常操作临时文件 </span><br><span class="line">del /f /s /q <span class="string">"%userprofile%\local settings\temp\*.*"</span> </span><br><span class="line">del /f /s /q <span class="string">"%userprofile%\Local Settings\Temp\*.*"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 删除访问记录（开始菜单中的文档里面的东西） </span><br><span class="line">del /f /s /q <span class="string">"%userprofile%\recent\*.*"</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">echo</span> 恭喜您！清理全部完成！</span><br><span class="line">echo. &amp; pause</span><br></pre></td></tr></table></figure>
<p>右键 -&gt; 已管理员身份运行 即可，不会存在任何风险，当然你也可以自己添加路径或者相关的处理，可以说是绿色安全</p>
<h3 id="启动应用">启动应用</h3><hr>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">color <span class="number">0</span>a</span><br><span class="line">title ********快速启动******** </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="number">1</span>、QQ</span><br><span class="line"><span class="built_in">echo</span> <span class="number">2</span>、Exit</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> /p s=请输入应用的编号，按Enter启动应用：</span><br><span class="line"><span class="keyword">if</span> %s% equ <span class="number">1</span> goto a</span><br><span class="line"><span class="keyword">if</span> %s% equ <span class="number">2</span> goto b</span><br><span class="line"></span><br><span class="line">:a</span><br><span class="line">start <span class="string">""</span> <span class="string">"E:\Program Files (x86)\Tencent\QQ\Bin\QQ.exe"</span></span><br><span class="line"><span class="built_in">echo</span> QQ启动完成！</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">:b</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<p>这个就非常简单了，一个if判断，指定对应应用的绝对路径，启动指定的应用，还可以打开指定的路径的，因为我比较喜欢简洁的桌面，有了这个脚本，桌面上就不用放置很多快捷方式了</p>
<h3 id="adb_shell">adb shell</h3><hr>
<p>这个适用于Win系统下对手机执行一些操作，原因是命令行执行了adb shell之后，无法继续使用shell的相关命令，那么我们可以先将命令输出到一个文件里，在读取出来就可以了,以删除文件为例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">adb root</span><br><span class="line"></span><br><span class="line">adb remount</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">cd</span> /sdcard/ &gt;&gt; temp.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> rm -r <span class="number">1</span>.txt &gt;&gt; temp.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">exit</span> &gt;&gt; temp.txt</span><br><span class="line"></span><br><span class="line">adb shell &lt; temp.txt</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="垃圾清理">垃圾清理</h3><hr>
<p>一个自定义的pc端系统垃圾清理批处理文件，可以配合各大电脑管家使用：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><spa]]>
    </summary>
    
      <category term="bat" scheme="http://xiaofeng.site/tags/bat/"/>
    
      <category term="批处理文件" scheme="http://xiaofeng.site/tags/%E6%89%B9%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6/"/>
    
      <category term="PC" scheme="http://xiaofeng.site/categories/PC/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android之自定义actionbar[笔记]]]></title>
    <link href="http://xiaofeng.site/2016/03/01/Android%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89actionbar%5B%E7%AC%94%E8%AE%B0%5D/undefined/"/>
    <id>http://xiaofeng.site/2016/03/01/Android之自定义actionbar[笔记]/undefined/</id>
    <published>2016-03-01T03:06:22.000Z</published>
    <updated>2016-03-01T03:22:33.145Z</updated>
    <content type="html"><![CDATA[<p>自定义actionbar或toolbar的属性样式：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"detail_actionbar_style"</span> <span class="attribute">parent</span>=<span class="value">"AppBaseTheme"</span>&gt;</span><span class="css"></span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">android</span><span class="pseudo">:windowAnimationStyle"</span>&gt;<span class="at_rule">@<span class="keyword">null&lt;/item&gt;</span></span><br><span class="line">        &lt;item name=<span class="string">"android:windowBackground"</span>&gt;@android:color/transparent&lt;/item&gt;</span><br><span class="line">        &lt;!--&lt;item name=<span class="string">"android:colorBackgroundCacheHint"</span>&gt;@null&lt;/item&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;item name=<span class="string">"android:windowFrame"</span>&gt;@null&lt;/item&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;item name=<span class="string">"android:windowIsFloating"</span>&gt;false&lt;/item&gt;--&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:windowIsTranslucent"</span>&gt;true&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:windowTranslucentNavigation"</span>&gt;true&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:windowNoTitle"</span>&gt;true&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:windowActionBar"</span>&gt;false&lt;/item&gt;</span><br><span class="line">        &lt;!-- actionbar --&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:windowActionBarOverlay"</span>&gt;true&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:windowContentOverlay"</span>&gt;@null&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:actionBarStyle"</span>&gt;@style/ActionBar.Style.Transparent&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:actionOverflowButtonStyle"</span>&gt;@style/OverFlow&lt;/item&gt;</span><br><span class="line">    </span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- actionbar --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"ActionBar.Transparent"</span> <span class="attribute">parent</span>=<span class="value">"@android:style/Theme.Holo.Light"</span>&gt;</span><span class="css"><span class="at_rule"></span><br><span class="line">        &lt;item name=<span class="string">"android:windowActionBarOverlay"</span>&gt;true&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:windowContentOverlay"</span>&gt;@null&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:actionBarStyle"</span>&gt;@style/ActionBar.Style.Transparent&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:actionOverflowButtonStyle"</span>&gt;@style/OverFlow&lt;/item&gt;</span><br><span class="line">    </span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 实现Actionbar的透明度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"ActionBar.Style.Transparent"</span> <span class="attribute">parent</span>=<span class="value">"@android:style/Widget.Holo.ActionBar"</span>&gt;</span><span class="css"><span class="at_rule"></span><br><span class="line">        &lt;item name=<span class="string">"android:background"</span>&gt;@android:color/transparent&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:titleTextStyle"</span>&gt;@style/ActionBarText&lt;/item&gt;</span><br><span class="line">    </span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 标题文字 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"ActionBarText"</span>&gt;</span><span class="css"><span class="at_rule"></span><br><span class="line">        &lt;item name=<span class="string">"android:textSize"</span>&gt;<span class="number">19s</span>p&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"android:textColor"</span>&gt;@android:color/white&lt;/item&gt;</span><br><span class="line">    </span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 重写actionbar中 OverFlow的属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"OverFlow"</span> <span class="attribute">parent</span>=<span class="value">"@android:style/Widget.Holo.ActionButton.Overflow"</span>&gt;</span><span class="css"><span class="at_rule"></span><br><span class="line">        &lt;item name=<span class="string">"android:src"</span>&gt;@drawable/custom_actionbar_overflow&lt;/item&gt;</span><br><span class="line">    </span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>自定义actionbar或toolbar的属性样式：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span clas]]>
    </summary>
    
      <category term="沉浸式状态栏" scheme="http://xiaofeng.site/tags/%E6%B2%89%E6%B5%B8%E5%BC%8F%E7%8A%B6%E6%80%81%E6%A0%8F/"/>
    
      <category term="Android" scheme="http://xiaofeng.site/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java之HashMap和HashTable的不同]]></title>
    <link href="http://xiaofeng.site/2016/02/19/Java%E4%B9%8BHashMap%E5%92%8CHashTable%E7%9A%84%E4%B8%8D%E5%90%8C/undefined/"/>
    <id>http://xiaofeng.site/2016/02/19/Java之HashMap和HashTable的不同/undefined/</id>
    <published>2016-02-19T07:13:32.000Z</published>
    <updated>2016-02-19T07:23:58.564Z</updated>
    <content type="html"><![CDATA[<p>HashTable和HashMap的6个不同点：Java热门面试题例子</p>
<p>HashTable和HashMa的区别是面试题中经常被问到的问题。还有其他比较热门的问题，像ArrayList和Vector、Comparator和Comparable。这些问题经常在面试中被问题，以检查我们是否正确理解集合类的使用和拥有的替代解决方案的知识。这两者之间的不同，包括6个点，分别是<em>Synchronization</em>、<em>Null keys and values</em>、<em>Iterating values</em>、<em>Fail fast iterator</em>、<em>Performance</em>、<em>Superclass</em></p>
<h2 id="HashTable和HashMap的不同">HashTable和HashMap的不同</h2><p><strong>1.Synchronization or Thread Safe :</strong></p>
<p>这是它们最重要的不同点。HashMap不是同步的，并且不是是线程安全的。相反，HashTable是线程安全和同步的。</p>
<p>什么时候使用HashMap？答案是如果你的应用不需要任何多线程任务，就是说HashMap适用于没有线程的应用。HashTable应该在多线程应用中使用。</p>
<p>扩展：<br>Java提供了ConcurrentHashMap，它是HashTable的替代品，比HashTable的扩展性更好。HashMap可以通过下面的语句进行同步：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Map m = Collections.synchronizeMap(hashMap);</span><br></pre></td></tr></table></figure></p>
<p><strong>2. Null keys and null values :</strong></p>
<p>HashMap允许一个空的key和多个空的value， 然而HashTable不允许空的键值。</p>
<p><strong>3. Iterating the values:</strong></p>
<p>HashMap对象的值是通过Iterator迭代的。HashTable是除vector之外惟一的一个使用了enumerator迭代器来迭代其对象值的类。</p>
<p><strong>4.  Fail-fast iterator :</strong></p>
<p>在HashMap中是<strong>fail-fast</strong>迭代器，而HashTable的emumerator不是。根据<a href="http://docs.oracle.com/javase/7/docs/api/java/util/Hashtable.html" target="_blank" rel="external">Oracle Docs</a>,如果HashTable对象的iterator以任何方式被创建之后它在“结构上”被修改，那么除了迭代器自己的remove方法，否则迭代器将抛出ConcurrentModificationException异常。</p>
<p>结构上的更改指的是删除或者插入一个元素（hashtable和hashmap），因此，由Hashtable的键和元素方法返回的enumerations不是Fail-fast。关于<a href="http://javahungry.blogspot.com/2013/08/hashing-how-hash-map-works-in-java-or.html" target="_blank" rel="external">iterator and enumeration的不同</a>.</p>
<p>扩展：<br>如果某个集合对象创建了Iterator或者ListIterator，然后其它的线程试图“结构上”更改集合对象，将会抛出ConcurrentModificationException异常。但其它线程可以通过set()方法更改集合对象是允许的，因为这并没有从“结构上”更改集合。但是假如已经从结构上进行了更改，再调用set()方法，将会抛出IllegalArgumentException异常。</p>
<p><strong>5. Performance :</strong><br>HashMap是比较快的，并且使用了很少的内存。在单个的线程环境中，不同步的对象通常在性能上是比同步的对象要好的。</p>
<p><strong>6.Superclass and Legacy :</strong><br>HashTable是Dictionary的子类，在jdk 1.7中已经过时了，因此它不再被使用。它是最好的外部实现同步的方法，或者使用一个ConcurrentMap实现（如ConcurrentHashMap）HashMap是AbstractMap的子类，尽管HashMap和HashTable有不同的父类，但是他们都继承了抽象类“Map”。</p>
<h2 id="HashMap和HashTable的例子">HashMap和HashTable的例子</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashMapHashtableExample</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123; </span><br><span class="line"> </span><br><span class="line">           </span><br><span class="line">  </span><br><span class="line">        Hashtable&lt;String,String&gt; hashtableobj = <span class="keyword">new</span> Hashtable&lt;String, String&gt;();</span><br><span class="line">        hashtableobj.put(<span class="string">"Alive is "</span>, <span class="string">"awesome"</span>);</span><br><span class="line">        hashtableobj.put(<span class="string">"Love"</span>, <span class="string">"yourself"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Hashtable object output :"</span>+ hashtableobj);</span><br><span class="line"> </span><br><span class="line">         </span><br><span class="line"> </span><br><span class="line">        HashMap hashmapobj = <span class="keyword">new</span> HashMap();</span><br><span class="line">        hashmapobj.put(<span class="string">"Alive is "</span>, <span class="string">"awesome"</span>);  </span><br><span class="line">        hashmapobj.put(<span class="string">"Love"</span>, <span class="string">"yourself"</span>); </span><br><span class="line">        System.out.println(<span class="string">"HashMap object output :"</span>+hashmapobj);   </span><br><span class="line"> </span><br><span class="line"> 	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hashtable <span class="keyword">object</span> output :&#123;Love=yourself, Alive <span class="keyword">is</span> =awesome&#125;</span><br><span class="line">HashMap <span class="keyword">object</span> output :&#123;Alive <span class="keyword">is</span> =awesome, Love=yourself&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="HashMap和Hashtable的相似之处">HashMap和Hashtable的相似之处</h2><ul>
<li><p><strong>1.插入顺序：</strong> 随着时间的推移，HashMap和HashTable都不能保证集合的顺序，相反的，使用LinkedHashMap不会因为时间的推移而改变顺序。</p>
</li>
<li><p><strong>2.Map接口：</strong> HashMap和HashTable都是实现了Map接口。</p>
</li>
<li><p><strong>3.存和取的方法：</strong> HashMap和HashTable为存取提供了稳定的时间性能</p>
</li>
<li><p><strong>4.内部原理：</strong> HashMap和HashTable遵顼的是散列的原则：[HashMap是如何工作的？][3]</p>
</li>
</ul>
<h2 id="HashMap和HashTable什么时候使用？">HashMap和HashTable什么时候使用？</h2><ul>
<li><p><strong>1. 单线程应用</strong><br>在非线程应用中，HashMap要优于HashTable的，简单来说，使用HashMap在非同步或者单线程的应用中。</p>
</li>
<li><p><strong>2. 多线程应用</strong><br>我们应该避免使用Hashtable，因为这个类在最近的jdk1.8中过时了。Oracle已经提供了很好的替代的类：<strong>ConcurrentHashMap</strong>，对于多线程应用，使用ConcurrentHashMap而不是Hashtable。</p>
</li>
</ul>
<h2 id="总结">总结</h2><table>
<thead>
<tr>
<th>区别</th>
<th>HashMap</th>
<th>HashTable</th>
</tr>
</thead>
<tbody>
<tr>
<td>同步</td>
<td>NO</td>
<td>Yes</td>
</tr>
<tr>
<td>线程安全</td>
<td>NO</td>
<td>Yes</td>
</tr>
<tr>
<td>空键值</td>
<td>一个空键，任意空值</td>
<td>不允许空键值</td>
</tr>
<tr>
<td>迭代类型</td>
<td>Fail fast迭代器</td>
<td>Fail safe迭代器</td>
</tr>
<tr>
<td>性能</td>
<td>快</td>
<td>作比较慢</td>
</tr>
<tr>
<td>父类和遗弃</td>
<td>AbstractMap，NO</td>
<td>Dictionary , Yes</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<p>HashTable和HashMap的6个不同点：Java热门面试题例子</p>
<p>HashTable和HashMa的区别是面试题中经常被问到的问题。还有其他比较热门的问题，像ArrayList和Vector、Comparator和Comparable。这些问题经常在面试]]>
    </summary>
    
      <category term="HashMap" scheme="http://xiaofeng.site/tags/HashMap/"/>
    
      <category term="HashTable" scheme="http://xiaofeng.site/tags/HashTable/"/>
    
      <category term="Java" scheme="http://xiaofeng.site/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android之Matrix]]></title>
    <link href="http://xiaofeng.site/2016/02/19/Android%E4%B9%8BMatrix/undefined/"/>
    <id>http://xiaofeng.site/2016/02/19/Android之Matrix/undefined/</id>
    <published>2016-02-19T07:11:37.000Z</published>
    <updated>2016-02-19T07:30:47.582Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原作者： Qiengo<br>源地址： <a href="http://www.cnblogs.com/qiengo/archive/2012/06/30/2570874.html" target="_blank" rel="external">点击跳转</a></p>
</blockquote>
<h2 id="Matrix的数学原理">Matrix的数学原理</h2><p>在Android中，如果你用Matrix进行过图像处理，那么一定知道Matrix这个类。Android中的Matrix是一个3 x 3的矩阵，其内容如下：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217092330d9Q.gif" alt="matrix_iamge_description"></p>
<p>Matrix的对图像的处理可分为四类基本变换：</p>
<ul>
<li>Translate - 平移变换</li>
<li>Rotate - 旋转变换</li>
<li>Scale - 缩放变换</li>
<li>Skew - 错切变换</li>
</ul>
<p>从字面上理解，矩阵中的MSCALE用于处理缩放变换，MSKEW用于处理错切变换，MTRANS用于处理平移变换，MPERSP用于处理透视变换。实际中当然不能完全按照字面上的说法去理解Matrix。同时，在Android的文档中，未见到用Matrix进行透视变换的相关说明，所以本文也不讨论这方面的问题。</p>
<p>针对每种变换，Android提供了pre、set和post三种操作方式。其中：</p>
<ul>
<li>set - 用于设置Matrix中的值。</li>
<li>pre - 是先乘，因为矩阵的乘法不满足交换律，因此先乘、后乘必须要严格区分。先乘相当于矩阵运算中的右乘。</li>
<li>post - 是后乘，因为矩阵的乘法不满足交换律，因此先乘、后乘必须要严格区分。后乘相当于矩阵运算中的左乘。</li>
</ul>
<p>除平移变换(Translate)外，旋转变换(Rotate)、缩放变换(Scale)和错切变换(Skew)都可以围绕一个中心点来进行，如果不指定，在默认情况下是围绕(0, 0)来进行相应的变换的。</p>
<p>下面我们来看看四种变换的具体情形。由于所有的图形都是有点组成，因此我们只需要考察一个点相关变换即可。</p>
<h3 id="一、_平移变换">一、 平移变换</h3><hr>
<p>假定有一个点的坐标是 ，将其移动到 ，再假定在x轴和y轴方向移动的大小分别为：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321709352RQ75.gif" alt="translate"></p>
<p>如下图所示：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321709520MmsS.gif" alt="translate_sample"></p>
<p>不难知道：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321709527kmK6.gif" alt="translate_result"></p>
<p>如果用矩阵来表示的话，就可以写成：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321709536Otg4.gif" alt="translate_tips"></p>
<h3 id="二、_旋转变换">二、 旋转变换</h3><hr>
<h4 id="2-1_围绕坐标原点旋转：">2.1    围绕坐标原点旋转：</h4><p>假定有一个点 ，相对坐标原点顺时针旋转后的情形，同时假定P点离坐标原点的距离为r，如下图：<br><img src="http://hi.csdn.net/attachment/201111/19/0_132170975189NC.gif" alt="translate_tips"></p>
<p>那么，<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321709797SBJW.gif" alt="translate_tips"></p>
<p>如果用矩阵，就可以表示为：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321709849ZLVc.gif" alt="translate_tips"></p>
<h4 id="2-2_围绕某个点旋转">2.2    围绕某个点旋转</h4><p>如果是围绕某个点顺时针旋转，那么可以用矩阵表示为：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217100380220.gif" alt="translate_tips"></p>
<p>可以化为：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217100952Vqv.gif" alt="translate_tips"></p>
<p>很显然，</p>
<p><strong>1.</strong><br><img src="http://hi.csdn.net/attachment/201111/19/0_1321710153kurQ.gif" alt="translate_tips"> 是将坐标原点移动到点后， 的新坐标。</p>
<p><strong>2.</strong>     </p>
<p><img src="http://hi.csdn.net/attachment/201111/19/0_1321710301T9nf.gif" alt="translate_tips"> 是将上一步变换后的，围绕新的坐标原点顺时针旋转 。</p>
<p><strong>3.</strong><br><img src="http://hi.csdn.net/attachment/201111/19/0_1321710398Z3Je.gif" alt="translate_tips"> 经过上一步旋转变换后，再将坐标原点移回到原来的坐标原点。</p>
<p>所以，围绕某一点进行旋转变换，可以分成3个步骤，即首先将坐标原点移至该点，然后围绕新的坐标原点进行旋转变换，再然后将坐标原点移回到原先的坐标原点。</p>
<h3 id="三、_缩放变换">三、 缩放变换</h3><hr>
<p>理论上而言，一个点是不存在什么缩放变换的，但考虑到所有图像都是由点组成，因此，如果图像在x轴和y轴方向分别放大k1和k2倍的话，那么图像中的所有点的x坐标和y坐标均会分别放大k1和k2倍，即</p>
<p>用矩阵表示就是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321710517pb9W.gif" alt="translate_tips"></p>
<p>缩放变换比较好理解，就不多说了。<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321710615riwr.gif" alt="translate_tips"></p>
<h3 id="四、_错切变换">四、 错切变换</h3><hr>
<p>错切变换(skew)在数学上又称为Shear mapping(可译为“剪切变换”)或者Transvection(缩并)，它是一种比较特殊的线性变换。错切变换的效果就是让所有点的x坐标(或者y坐标)保持不变，而对应的y坐标(或者x坐标)则按比例发生平移，且平移的大小和该点到x轴(或y轴)的垂直距离成正比。错切变换，属于等面积变换，即一个形状在错切变换的前后，其面积是相等的。</p>
<p>比如下图，各点的y坐标保持不变，但其x坐标则按比例发生了平移。这种情况将水平错切。<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321710625smm5.gif" alt="translate_tips"></p>
<p>下图各点的x坐标保持不变，但其y坐标则按比例发生了平移。这种情况叫垂直错切。<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321710790633H.gif" alt="translate_tips"></p>
<p>假定一个点经过错切变换后得到，对于水平错切而言，应该有如下关系：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321710798y5L6.gif" alt="translate_tips"></p>
<p>用矩阵表示就是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217108084B3T.gif" alt="translate_tips"></p>
<p>扩展到3 x 3的矩阵就是下面这样的形式：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217108954sms.gif" alt="translate_tips"></p>
<p>同理，对于垂直错切，可以有：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217109074Nv2.gif" alt="translate_tips"></p>
<p>在数学上严格的错切变换就是上面这样的。在Android中除了有上面说到的情况外，还可以同时进行水平、垂直错切，那么形式上就是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711018S31a.gif" alt="translate_tips"></p>
<h3 id="五、_对称变换">五、 对称变换</h3><hr>
<p>除了上面讲到的4中基本变换外，事实上，我们还可以利用Matrix，进行对称变换。所谓对称变换，就是经过变化后的图像和原图像是关于某个对称轴是对称的。比如，某点 经过对称变换后得到，</p>
<p>如果对称轴是x轴，难么，<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711026LZ03.gif" alt="translate_tips"></p>
<p>用矩阵表示就是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711090fhGd.gif" alt="translate_tips"></p>
<p>如果对称轴是y轴，那么，<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711099Xhak.gif" alt="translate_tips"></p>
<p>用矩阵表示就是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711217oHNz.gif" alt="translate_tips"></p>
<p>如果对称轴是y = x，如图：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711240gEeT.gif" alt="translate_tips"></p>
<p>那么，<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711240gEeT.gif" alt="translate_tips"></p>
<p>很容易可以解得：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711261E6xG.gif" alt="translate_tips"></p>
<p>用矩阵表示就是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_132171128473YK.gif" alt="translate_tips"></p>
<p>同样的道理，如果对称轴是y = -x，那么用矩阵表示就是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711292jO01.gif" alt="translate_tips"></p>
<p>特殊地，如果对称轴是y = kx，如下图：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217113506Hb8.gif" alt="translate_tips"></p>
<p>那么，<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711502QQ7A.gif" alt="translate_tips"></p>
<p>很容易可解得：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711521GZlt.gif" alt="translate_tips"></p>
<p>用矩阵表示就是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711541FJA1.gif" alt="translate_tips"></p>
<p>当k = 0时，即y = 0，也就是对称轴为x轴的情况；当k趋于无穷大时，即x = 0，也就是对称轴为y轴的情况；当k =1时，即y = x，也就是对称轴为y = x的情况；当k = -1时，即y = -x，也就是对称轴为y = -x的情况。不难验证，这和我们前面说到的4中具体情况是相吻合的。</p>
<p>如果对称轴是y = kx + b这样的情况，只需要在上面的基础上增加两次平移变换即可，即先将坐标原点移动到(0, b)，然后做上面的关于y = kx的对称变换，再然后将坐标原点移回到原来的坐标原点即可。用矩阵表示大致是这样的：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711616I9SJ.gif" alt="translate_tips"></p>
<p>需要特别注意：在实际编程中，我们知道屏幕的y坐标的正向和数学中y坐标的正向刚好是相反的，所以在数学上y = x和屏幕上的y = -x才是真正的同一个东西，反之亦然。也就是说，如果要使图片在屏幕上看起来像按照数学意义上y = x对称，那么需使用这种转换：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321711292jO01.gif" alt="translate_tips"></p>
<p>要使图片在屏幕上看起来像按照数学意义上y = -x对称，那么需使用这种转换：<br><img src="http://hi.csdn.net/attachment/201111/19/0_132171128473YK.gif" alt="translate_tips"></p>
<p>关于对称轴为y = kx 或y = kx + b的情况，同样需要考虑这方面的问题。</p>
<h2 id="第二部分_代码验证">第二部分 代码验证</h2><p>在第一部分中讲到的各种图像变换的验证代码如下，一共列出了10种情况。如果要验证其中的某一种情况，只需将相应的代码反注释即可。试验中用到的图片：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217122673338.gif" alt=""><br>其尺寸为162 x 251。</p>
<p>每种变换的结果，请见代码之后的说明。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pat.testtransformmatrix;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> android.app.Activity;  </span><br><span class="line"><span class="keyword">import</span> android.content.Context;  </span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;  </span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;  </span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;  </span><br><span class="line"><span class="keyword">import</span> android.graphics.Matrix;  </span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;  </span><br><span class="line"><span class="keyword">import</span> android.util.Log;  </span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent;  </span><br><span class="line"><span class="keyword">import</span> android.view.View;  </span><br><span class="line"><span class="keyword">import</span> android.view.Window;  </span><br><span class="line"><span class="keyword">import</span> android.view.WindowManager;  </span><br><span class="line"><span class="keyword">import</span> android.view.View.OnTouchListener;  </span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestTransformMatrixActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span>  </span><br><span class="line"><span class="keyword">implements</span>  </span><br><span class="line"><span class="title">OnTouchListener</span>  </span><br><span class="line"></span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> TransformMatrixView view;  </span><br><span class="line">    <span class="annotation">@Override</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span>  </span><br><span class="line">    </span>&#123;  </span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);  </span><br><span class="line">        requestWindowFeature(Window.FEATURE_NO_TITLE);  </span><br><span class="line">        <span class="keyword">this</span>.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);  </span><br><span class="line">  </span><br><span class="line">        view = <span class="keyword">new</span> TransformMatrixView(<span class="keyword">this</span>);  </span><br><span class="line">        view.setScaleType(ImageView.ScaleType.MATRIX);  </span><br><span class="line">        view.setOnTouchListener(<span class="keyword">this</span>);  </span><br><span class="line">          </span><br><span class="line">        setContentView(view);  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TransformMatrixView</span> <span class="keyword">extends</span> <span class="title">ImageView</span>  </span><br><span class="line">    </span>&#123;  </span><br><span class="line">        <span class="keyword">private</span> Bitmap bitmap;  </span><br><span class="line">        <span class="keyword">private</span> Matrix matrix;  </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TransformMatrixView</span><span class="params">(Context context)</span>  </span><br><span class="line">        </span>&#123;  </span><br><span class="line">            <span class="keyword">super</span>(context);  </span><br><span class="line">            bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.sophie);  </span><br><span class="line">            matrix = <span class="keyword">new</span> Matrix();  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="annotation">@Override</span>  </span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span>  </span><br><span class="line">        </span>&#123;  </span><br><span class="line">            <span class="comment">// 画出原图像  </span></span><br><span class="line">            canvas.drawBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>);  </span><br><span class="line">            <span class="comment">// 画出变换后的图像  </span></span><br><span class="line">            canvas.drawBitmap(bitmap, matrix, <span class="keyword">null</span>);  </span><br><span class="line">            <span class="keyword">super</span>.onDraw(canvas);  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="annotation">@Override</span>  </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setImageMatrix</span><span class="params">(Matrix matrix)</span>  </span><br><span class="line">        </span>&#123;  </span><br><span class="line">            <span class="keyword">this</span>.matrix.set(matrix);  </span><br><span class="line">            <span class="keyword">super</span>.setImageMatrix(matrix);  </span><br><span class="line">        &#125;  </span><br><span class="line">          </span><br><span class="line">        <span class="function"><span class="keyword">public</span> Bitmap <span class="title">getImageBitmap</span><span class="params">()</span>  </span><br><span class="line">        </span>&#123;  </span><br><span class="line">            <span class="keyword">return</span> bitmap;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent e)</span>  </span><br><span class="line">    </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(e.getAction() == MotionEvent.ACTION_UP)  </span><br><span class="line">        &#123;  </span><br><span class="line">            Matrix matrix = <span class="keyword">new</span> Matrix();  </span><br><span class="line">            <span class="comment">// 输出图像的宽度和高度(162 x 251)  </span></span><br><span class="line">            Log.e(<span class="string">"TestTransformMatrixActivity"</span>, <span class="string">"image size: width x height = "</span> +  view.getImageBitmap().getWidth() + <span class="string">" x "</span> + view.getImageBitmap().getHeight());  </span><br><span class="line">            <span class="comment">// 1. 平移  </span></span><br><span class="line">            matrix.postTranslate(view.getImageBitmap().getWidth(), view.getImageBitmap().getHeight());  </span><br><span class="line">            <span class="comment">// 在x方向平移view.getImageBitmap().getWidth()，在y轴方向view.getImageBitmap().getHeight()  </span></span><br><span class="line">            view.setImageMatrix(matrix);  </span><br><span class="line">              </span><br><span class="line">            <span class="comment">// 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line">            <span class="keyword">float</span>[] matrixValues = <span class="keyword">new</span> <span class="keyword">float</span>[<span class="number">9</span>];  </span><br><span class="line">            matrix.getValues(matrixValues);  </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i)  </span><br><span class="line">            &#123;  </span><br><span class="line">                String temp = <span class="keyword">new</span> String();  </span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; ++j)  </span><br><span class="line">                &#123;  </span><br><span class="line">                    temp += matrixValues[<span class="number">3</span> * i + j ] + <span class="string">"\t"</span>;  </span><br><span class="line">                &#125;  </span><br><span class="line">                Log.e(<span class="string">"TestTransformMatrixActivity"</span>, temp);  </span><br><span class="line">            &#125;  </span><br><span class="line">              </span><br><span class="line">  </span><br><span class="line"><span class="comment">//          // 2. 旋转(围绕图像的中心点)  </span></span><br><span class="line"><span class="comment">//          matrix.setRotate(45f, view.getImageBitmap().getWidth() / 2f, view.getImageBitmap().getHeight() / 2f);  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 做下面的平移变换，纯粹是为了让变换后的图像和原图像不重叠  </span></span><br><span class="line"><span class="comment">//          matrix.postTranslate(view.getImageBitmap().getWidth() * 1.5f, 0f);  </span></span><br><span class="line"><span class="comment">//          view.setImageMatrix(matrix);  </span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          float[] matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;  </span></span><br><span class="line">              </span><br><span class="line">              </span><br><span class="line"><span class="comment">//          // 3. 旋转(围绕坐标原点) + 平移(效果同2)  </span></span><br><span class="line"><span class="comment">//          matrix.setRotate(45f);  </span></span><br><span class="line"><span class="comment">//          matrix.preTranslate(-1f * view.getImageBitmap().getWidth() / 2f, -1f * view.getImageBitmap().getHeight() / 2f);  </span></span><br><span class="line"><span class="comment">//          matrix.postTranslate((float)view.getImageBitmap().getWidth() / 2f, (float)view.getImageBitmap().getHeight() / 2f);  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 做下面的平移变换，纯粹是为了让变换后的图像和原图像不重叠  </span></span><br><span class="line"><span class="comment">//          matrix.postTranslate((float)view.getImageBitmap().getWidth() * 1.5f, 0f);  </span></span><br><span class="line"><span class="comment">//          view.setImageMatrix(matrix);  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          float[] matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;             </span></span><br><span class="line">              </span><br><span class="line"><span class="comment">//          // 4. 缩放  </span></span><br><span class="line"><span class="comment">//          matrix.setScale(2f, 2f);  </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          float[] matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 做下面的平移变换，纯粹是为了让变换后的图像和原图像不重叠  </span></span><br><span class="line"><span class="comment">//          matrix.postTranslate(view.getImageBitmap().getWidth(), view.getImageBitmap().getHeight());  </span></span><br><span class="line"><span class="comment">//          view.setImageMatrix(matrix);  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;  </span></span><br><span class="line">  </span><br><span class="line">              </span><br><span class="line"><span class="comment">//          // 5. 错切 - 水平  </span></span><br><span class="line"><span class="comment">//          matrix.setSkew(0.5f, 0f);  </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          float[] matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 做下面的平移变换，纯粹是为了让变换后的图像和原图像不重叠           </span></span><br><span class="line"><span class="comment">//          matrix.postTranslate(view.getImageBitmap().getWidth(), 0f);  </span></span><br><span class="line"><span class="comment">//          view.setImageMatrix(matrix);  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;  </span></span><br><span class="line">              </span><br><span class="line"><span class="comment">//          // 6. 错切 - 垂直  </span></span><br><span class="line"><span class="comment">//          matrix.setSkew(0f, 0.5f);  </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          float[] matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 做下面的平移变换，纯粹是为了让变换后的图像和原图像不重叠               </span></span><br><span class="line"><span class="comment">//          matrix.postTranslate(0f, view.getImageBitmap().getHeight());  </span></span><br><span class="line"><span class="comment">//          view.setImageMatrix(matrix);  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;             </span></span><br><span class="line">              </span><br><span class="line"><span class="comment">//          7. 错切 - 水平 + 垂直  </span></span><br><span class="line"><span class="comment">//          matrix.setSkew(0.5f, 0.5f);  </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          float[] matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 做下面的平移变换，纯粹是为了让变换后的图像和原图像不重叠               </span></span><br><span class="line"><span class="comment">//          matrix.postTranslate(0f, view.getImageBitmap().getHeight());  </span></span><br><span class="line"><span class="comment">//          view.setImageMatrix(matrix);  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;  </span></span><br><span class="line">              </span><br><span class="line"><span class="comment">//          // 8. 对称 (水平对称)  </span></span><br><span class="line"><span class="comment">//          float matrix_values[] = &#123;1f, 0f, 0f, 0f, -1f, 0f, 0f, 0f, 1f&#125;;  </span></span><br><span class="line"><span class="comment">//          matrix.setValues(matrix_values);  </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          float[] matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 做下面的平移变换，纯粹是为了让变换后的图像和原图像不重叠   </span></span><br><span class="line"><span class="comment">//          matrix.postTranslate(0f, view.getImageBitmap().getHeight() * 2f);  </span></span><br><span class="line"><span class="comment">//          view.setImageMatrix(matrix);  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;             </span></span><br><span class="line">              </span><br><span class="line"><span class="comment">//          // 9. 对称 - 垂直  </span></span><br><span class="line"><span class="comment">//          float matrix_values[] = &#123;-1f, 0f, 0f, 0f, 1f, 0f, 0f, 0f, 1f&#125;;  </span></span><br><span class="line"><span class="comment">//          matrix.setValues(matrix_values);  </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          float[] matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;     </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 做下面的平移变换，纯粹是为了让变换后的图像和原图像不重叠   </span></span><br><span class="line"><span class="comment">//          matrix.postTranslate(view.getImageBitmap().getWidth() * 2f, 0f);  </span></span><br><span class="line"><span class="comment">//          view.setImageMatrix(matrix);  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;  </span></span><br><span class="line">  </span><br><span class="line">              </span><br><span class="line"><span class="comment">//          // 10. 对称(对称轴为直线y = x)  </span></span><br><span class="line"><span class="comment">//          float matrix_values[] = &#123;0f, -1f, 0f, -1f, 0f, 0f, 0f, 0f, 1f&#125;;  </span></span><br><span class="line"><span class="comment">//          matrix.setValues(matrix_values);  </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          float[] matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 做下面的平移变换，纯粹是为了让变换后的图像和原图像不重叠               </span></span><br><span class="line"><span class="comment">//          matrix.postTranslate(view.getImageBitmap().getHeight() + view.getImageBitmap().getWidth(),   </span></span><br><span class="line"><span class="comment">//                  view.getImageBitmap().getHeight() + view.getImageBitmap().getWidth());  </span></span><br><span class="line"><span class="comment">//          view.setImageMatrix(matrix);  </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//          // 下面的代码是为了查看matrix中的元素  </span></span><br><span class="line"><span class="comment">//          matrixValues = new float[9];  </span></span><br><span class="line"><span class="comment">//          matrix.getValues(matrixValues);  </span></span><br><span class="line"><span class="comment">//          for(int i = 0; i &lt; 3; ++i)  </span></span><br><span class="line"><span class="comment">//          &#123;  </span></span><br><span class="line"><span class="comment">//              String temp = new String();  </span></span><br><span class="line"><span class="comment">//              for(int j = 0; j &lt; 3; ++j)  </span></span><br><span class="line"><span class="comment">//              &#123;  </span></span><br><span class="line"><span class="comment">//                  temp += matrixValues[3 * i + j ] + "\t";  </span></span><br><span class="line"><span class="comment">//              &#125;  </span></span><br><span class="line"><span class="comment">//              Log.e("TestTransformMatrixActivity", temp);  </span></span><br><span class="line"><span class="comment">//          &#125;  </span></span><br><span class="line">              </span><br><span class="line">            view.invalidate();  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>下面给出上述代码中，各种变换的具体结果及其对应的相关变换矩阵</p>
<h3 id="1-平移">1.平移</h3><p><img src="http://hi.csdn.net/attachment/201111/19/0_1321712352qQRu.gif" alt=""></p>
<p>输出的结果：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217123565Wwz.gif" alt=""></p>
<p>请对照第一部分中的“一、平移变换”所讲的情形，考察上述矩阵的正确性。</p>
<h3 id="2-旋转(围绕图像的中心点)">2.旋转(围绕图像的中心点)</h3><hr>
<p><img src="http://hi.csdn.net/attachment/201111/19/0_132171250556xp.gif" alt=""></p>
<p>输出的结果：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321712512Yj1i.gif" alt=""></p>
<p>它实际上是<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">matrix.setRotate(<span class="number">45f</span>,view.getImageBitmap().getWidth() / <span class="number">2f</span>, view.getImageBitmap().getHeight() / <span class="number">2f</span>);</span><br><span class="line">matrix.postTranslate(view.getImageBitmap().getWidth()* <span class="number">1.5f</span>, <span class="number">0f</span>);</span><br></pre></td></tr></table></figure></p>
<p>这两条语句综合作用的结果。根据第一部分中“二、旋转变换”里面关于围绕某点旋转的公式，<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">matrix.setRotate(<span class="number">45f</span>,view.getImageBitmap().getWidth() / <span class="number">2f</span>, view.getImageBitmap().getHeight() / <span class="number">2f</span>);</span><br></pre></td></tr></table></figure></p>
<p>所产生的转换矩阵就是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321712644I54M.gif" alt=""></p>
<p>而<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">matrix.postTranslate(view.getImageBitmap().getWidth()* 1.5f, 0f);</span><br><span class="line">``` </span><br><span class="line">的意思就是在上述矩阵的左边再乘以下面的矩阵：</span><br><span class="line">![][204]</span><br><span class="line"></span><br><span class="line">关于post是左乘这一点，我们在前面的理论部分曾经提及过，后面我们还会专门讨论这个问题。</span><br><span class="line">所以它实际上就是：</span><br><span class="line">![][205]</span><br><span class="line"></span><br><span class="line">出去计算上的精度误差，我们可以看到我们计算出来的结果，和程序直接输出的结果是一致的。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">### 3.旋转(围绕坐标原点旋转，在加上两次平移，效果同2)</span><br><span class="line">---</span><br><span class="line">![][301]</span><br><span class="line"></span><br><span class="line">根据第一部分中“二、旋转变换”里面关于围绕某点旋转的解释，不难知道：</span><br><span class="line">``` java</span><br><span class="line">matrix.setRotate(45f,view.getImageBitmap().getWidth() / 2f, view.getImageBitmap().getHeight() / 2f);</span><br></pre></td></tr></table></figure></p>
<p>等价于<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">matrix.setRotate(<span class="number">45f</span>);</span><br><span class="line">matrix.preTranslate(-<span class="number">1f</span>* view.getImageBitmap().getWidth() / <span class="number">2f</span>, -<span class="number">1f</span> *view.getImageBitmap().getHeight() / <span class="number">2f</span>);</span><br><span class="line">matrix.postTranslate((<span class="keyword">float</span>)view.getImageBitmap().getWidth()/ <span class="number">2f</span>, (<span class="keyword">float</span>)view.getImageBitmap().getHeight() / <span class="number">2f</span>);</span><br></pre></td></tr></table></figure></p>
<p>其中<code>matrix.setRotate(45f)</code>对应的矩阵是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321712949GjN7.gif" alt=""></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">matrix.preTranslate(-<span class="number">1f</span>* view.getImageBitmap().getWidth() / <span class="number">2f</span>, -<span class="number">1f</span> * view.getImageBitmap().getHeight()/ <span class="number">2f</span>)</span><br></pre></td></tr></table></figure>
<p>对应的矩阵是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321712956BNj8.gif" alt=""></p>
<p>由于是preTranslate，是先乘，也就是右乘，即它应该出现在<code>matrix.setRotate(45f)</code>所对应矩阵的右侧。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">matrix.postTranslate((<span class="keyword">float</span>)view.getImageBitmap().getWidth()/ <span class="number">2f</span>, (<span class="keyword">float</span>)view.getImageBitmap().getHeight() / <span class="number">2f</span>)</span><br></pre></td></tr></table></figure>
<p>对应的矩阵是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321712963iNO1.gif" alt=""></p>
<p>这次由于是postTranslate，是后乘，也就是左乘，即它应该出现在<code>matrix.setRotate(45f)</code>所对应矩阵的左侧。</p>
<p>所以综合起来，<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">matrix.setRotate(<span class="number">45f</span>);</span><br><span class="line">matrix.preTranslate(-<span class="number">1f</span>* view.getImageBitmap().getWidth() / <span class="number">2f</span>, -<span class="number">1f</span> *view.getImageBitmap().getHeight() / <span class="number">2f</span>);</span><br><span class="line">matrix.postTranslate((<span class="keyword">float</span>)view.getImageBitmap().getWidth()/ <span class="number">2f</span>, (<span class="keyword">float</span>)view.getImageBitmap().getHeight() / <span class="number">2f</span>);</span><br></pre></td></tr></table></figure></p>
<p>对应的矩阵就是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321713055HOOt.gif" alt=""></p>
<p>这和下面这个矩阵(围绕图像中心顺时针旋转45度)其实是一样的：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321713100VIOz.gif" alt=""></p>
<p>因此，此处变换后的图像和2中变换后的图像时一样的。<br>![][307]</p>
<h3 id="4-缩放变换">4.缩放变换</h3><hr>
<p><img src="http://hi.csdn.net/attachment/201111/19/0_1321713185yKS7.gif" alt=""></p>
<p>程序所输出的两个矩阵分别是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217131941R24.gif" alt=""></p>
<p>其中第二个矩阵，其实是下面两个矩阵相乘的结果：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321713201VRxs.gif" alt=""></p>
<p>大家可以对照第一部分中的“三、缩放变换”和“一、平移变换”说法，自行验证结果。</p>
<h3 id="5-错切变换(水平错切)">5.错切变换(水平错切)</h3><hr>
<p><img src="http://hi.csdn.net/attachment/201111/19/0_132171330766G0.gif" alt=""></p>
<p>代码所输出的两个矩阵分别是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321713314Dk69.gif" alt=""></p>
<p>其中，第二个矩阵其实是下面两个矩阵相乘的结果：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321713322PeML.gif" alt=""></p>
<p>大家可以对照第一部分中的“四、错切变换”和“一、平移变换”的相关说法，自行验证结果。</p>
<h3 id="6-错切变换(垂直错切)">6.错切变换(垂直错切)</h3><hr>
<p><img src="http://hi.csdn.net/attachment/201111/19/0_1321713502Akg2.gif" alt=""></p>
<p>代码所输出的两个矩阵分别是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321713509Hz7p.gif" alt=""></p>
<p>其中，第二个矩阵其实是下面两个矩阵相乘的结果：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321713516TUvx.gif" alt=""></p>
<p>大家可以对照第一部分中的“四、错切变换”和“一、平移变换”的相关说法，自行验证结果。</p>
<h3 id="7-错切变换(水平+垂直错切)">7.错切变换(水平+垂直错切)</h3><hr>
<p><img src="http://hi.csdn.net/attachment/201111/19/0_1321713655Qsij.gif" alt=""></p>
<p>代码所输出的两个矩阵分别是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217136824kKR.gif" alt=""></p>
<p>其中，后者是下面两个矩阵相乘的结果：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217136931vl4.gif" alt=""></p>
<p>大家可以对照第一部分中的“四、错切变换”和“一、平移变换”的相关说法，自行验证结果。</p>
<h3 id="8-对称变换(水平对称)">8.对称变换(水平对称)</h3><hr>
<p><img src="http://hi.csdn.net/attachment/201111/19/0_13217141232rJI.gif" alt=""></p>
<p>代码所输出的两个各矩阵分别是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321714133P0ha.gif" alt=""></p>
<p>其中，后者是下面两个矩阵相乘的结果：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217141417Bi3.gif" alt=""></p>
<p>大家可以对照第一部分中的“五、对称变换”和“一、平移变换”的相关说法，自行验证结果。</p>
<h3 id="9-对称变换(垂直对称)">9.对称变换(垂直对称)</h3><hr>
<p><img src="http://hi.csdn.net/attachment/201111/19/0_1321714261NN3V.gif" alt=""></p>
<p>代码所输出的两个矩阵分别是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321714269Kqs4.gif" alt=""></p>
<p>其中，后者是下面两个矩阵相乘的结果：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321714276ai2f.gif" alt=""></p>
<p>大家可以对照第一部分中的“五、对称变换”和“一、平移变换”的相关说法，自行验证结果。</p>
<h3 id="10-对称变换(对称轴为直线y_=_x)">10.对称变换(对称轴为直线y = x)</h3><hr>
<p><img src="http://hi.csdn.net/attachment/201111/19/0_13217144950030.gif" alt=""></p>
<p>代码所输出的两个矩阵分别是：<br><img src="http://hi.csdn.net/attachment/201111/19/0_13217145038hN8.gif" alt=""></p>
<p>其中，后者是下面两个矩阵相乘的结果：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321714509sBN4.gif" alt=""></p>
<p>大家可以对照第一部分中的“五、对称变换”和“一、平移变换”的相关说法，自行验证结果。</p>
<h3 id="11-关于先乘和后乘的问题">11.关于先乘和后乘的问题</h3><hr>
<p>由于矩阵的乘法运算不满足交换律，我们在前面曾经多次提及先乘、后乘的问题，即先乘就是矩阵运算中右乘，后乘就是矩阵运算中的左乘。其实先乘、后乘的概念是针对变换操作的时间先后而言的，左乘、右乘是针对矩阵运算的左右位置而言的。以第一部分“二、旋转变换”中围绕某点旋转的情况为例：<br><img src="http://hi.csdn.net/attachment/201111/19/0_1321714645396z.gif" alt=""></p>
<p>越靠近原图像中像素的矩阵，越先乘，越远离原图像中像素的矩阵，越后乘。事实上，图像处理时，矩阵的运算是从右边往左边方向进行运算的。这就形成了越在右边的矩阵(右乘)，越先运算(先乘)，反之亦然。</p>
<p>当然，在实际中，如果首先指定了一个matrix，比如我们先setRotate()，即指定了上面变换矩阵中，中间的那个矩阵，那么后续的矩阵到底是pre还是post运算，都是相对这个中间矩阵而言的。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>原作者： Qiengo<br>源地址： <a href="http://www.cnblogs.com/qiengo/archive/2012/06/30/2570874.html" target="_blank" rel="external">点]]>
    </summary>
    
      <category term="Matrix" scheme="http://xiaofeng.site/tags/Matrix/"/>
    
      <category term="Android" scheme="http://xiaofeng.site/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Material Design入门]]></title>
    <link href="http://xiaofeng.site/2015/12/31/Android-Material-Design%E5%85%A5%E9%97%A8/undefined/"/>
    <id>http://xiaofeng.site/2015/12/31/Android-Material-Design入门/undefined/</id>
    <published>2015-12-31T01:41:32.000Z</published>
    <updated>2016-01-25T02:09:06.047Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原作者：Ravi Tamada<br>原文地址：<a href="http://www.androidhive.info/2015/04/android-getting-started-with-material-design/" target="_blank" rel="external">http://www.androidhive.info/…with-material-design/</a></p>
</blockquote>
<p>你可能听说了在Android Lollipop（棒棒糖）版本中有关Material Design的介绍。在Material Design中，介绍了许多新的东西，像Material主题、新的widget、自定义阴影、矢量图片和自定义动画。如果你还没有使用过Material Design，那么这篇文章会给你一个好的开始。</p>
<p>在这个教程中，我们将学习Material Design开发基础的步骤，比如编写自定义主题、使用RecyclerView实现导航抽屉。</p>
<p>通过下面的链接获取更多的关于Material Design的知识：</p>
<blockquote>
<p><a href="http://www.google.com/design/spec/material-design/introduction.html#" target="_blank" rel="external">Material Design Specifications</a><br><a href="http://developer.android.com/intl/zh-tw/training/material/index.html" target="_blank" rel="external">Creating Apps with Material Design</a></p>
</blockquote>
<p>本文资源链接：</p>
<blockquote>
<p>源码下载：<a href="http://download.androidhive.info/download?code=WPSkdrdZprHT0KLCZS3ClafgXBikGqM4r7FnNYdsdUTmlAkK6%2F2mkT0heOlNOq4U82rzqbod%2F14yU2uk5TWY4Zp%2FAYx6oiD7SKI%2FEgtUapzQUqkqcWEXX1bmw%3D%3DvqARiMEKqkqsXGbVf3vVUoffTqQcD2qfqZo" target="_blank" rel="external">点击获取</a><br>视频演示地址：<a href="https://youtu.be/jDXX_wDvarM" target="_blank" rel="external">Yutube</a></p>
</blockquote>
<h2 id="1-_下载Android_Studio">1. 下载Android Studio</h2><p>在进一步了解之前,下载Android Studio并且进行必须的设置，因为之后我将使用Android Studio做教程讲解。如果你是第一次尝试Android Studio，通过<a href="http://developer.android.com/intl/zh-tw/tools/studio/index.html" target="_blank" rel="external">概述文档</a>了一下Android Studio。</p>
<h2 id="2-_Material_Design颜色自定义">2. Material Design颜色自定义</h2><p>Material Design提供了一些其颜色主题的自定义属性，但是我们使用主要的五种，来自定义整个主题：</p>
<ul>
<li><p><code>colorPrimaryDark</code> – 应用于通知栏的背景色</p>
</li>
<li><p><code>colorPrimary</code> – 这是应用最主要的颜色，应用于toolbar的背景色</p>
</li>
<li><p><code>textColorPrimary</code> – 这是文字的颜色，应用于toolbar的标题</p>
</li>
<li><p><code>windowBackground</code> – 这是应用默认的背景色</p>
</li>
<li><p><code>navigationBarColor</code> – 这个颜色定义了底部导航按钮的背景色</p>
</li>
</ul>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/04/android-material-design-color-schema.png" alt="android-material-design-color-schema"></p>
<p>你可以通过Material Design颜色模型，去选择适合你应用的一套颜色</p>
<h2 id="3-_创建_Material_Design_主题">3. 创建 Material Design 主题</h2><p><strong>1.</strong> 在Android Studio中，通过<strong>File ⇒ New Project`</strong>并且填写其他需要的选项，来创建一个新的工程，当被提示选择默认的Activity时，选择<strong>Blank Activity</strong>即可</p>
<p><strong>2.</strong> 打开<strong>res ⇒ values ⇒ strings.xml</strong>并且添加以下文字：</p>
<p><code>strings.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"app_name"</span>&gt;</span>Material Design<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"action_settings"</span>&gt;</span>Settings<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"action_search"</span>&gt;</span>Search<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"drawer_open"</span>&gt;</span>Open<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"drawer_close"</span>&gt;</span>Close<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"nav_item_home"</span>&gt;</span>Home<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"nav_item_friends"</span>&gt;</span>Friends<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"nav_item_notifications"</span>&gt;</span>Messages<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- navigation drawer item labels  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string-array</span> <span class="attribute">name</span>=<span class="value">"nav_drawer_labels"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span>&gt;</span>@string/nav_item_home<span class="tag">&lt;/<span class="title">item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span>&gt;</span>@string/nav_item_friends<span class="tag">&lt;/<span class="title">item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span>&gt;</span>@string/nav_item_notifications<span class="tag">&lt;/<span class="title">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">string-array</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"title_messages"</span>&gt;</span>Messages<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"title_friends"</span>&gt;</span>Friends<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"title_home"</span>&gt;</span>Home<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>3.</strong> 打开<strong>res ⇒ values ⇒ colors.xml</strong>并且添加以下颜色值，如果你没有找到<code>colors.xml</code>，就新建一个文件即可</p>
<p><code>colors.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">color</span> <span class="attribute">name</span>=<span class="value">"colorPrimary"</span>&gt;</span>#F50057<span class="tag">&lt;/<span class="title">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">color</span> <span class="attribute">name</span>=<span class="value">"colorPrimaryDark"</span>&gt;</span>#C51162<span class="tag">&lt;/<span class="title">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">color</span> <span class="attribute">name</span>=<span class="value">"textColorPrimary"</span>&gt;</span>#FFFFFF<span class="tag">&lt;/<span class="title">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">color</span> <span class="attribute">name</span>=<span class="value">"windowBackground"</span>&gt;</span>#FFFFFF<span class="tag">&lt;/<span class="title">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">color</span> <span class="attribute">name</span>=<span class="value">"navigationBarColor"</span>&gt;</span>#000000<span class="tag">&lt;/<span class="title">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">color</span> <span class="attribute">name</span>=<span class="value">"colorAccent"</span>&gt;</span>#FF80AB<span class="tag">&lt;/<span class="title">color</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>4.</strong> 打开<strong>res ⇒ values ⇒ dimens.xml</strong>并添加以下尺寸值</p>
<p><code>dimens.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Default screen margins, per the Android Design guidelines. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dimen</span> <span class="attribute">name</span>=<span class="value">"activity_horizontal_margin"</span>&gt;</span>16dp<span class="tag">&lt;/<span class="title">dimen</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dimen</span> <span class="attribute">name</span>=<span class="value">"activity_vertical_margin"</span>&gt;</span>16dp<span class="tag">&lt;/<span class="title">dimen</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dimen</span> <span class="attribute">name</span>=<span class="value">"nav_drawer_width"</span>&gt;</span>260dp<span class="tag">&lt;/<span class="title">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>5.</strong> 打开<strong>res ⇒ values ⇒ styles.xml</strong>并添加以下样式。这些样式适用于所有的安卓版本，这里我定义主题的名字为：<strong>MyMaterialTheme</strong></p>
<p><code>styles.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"MyMaterialTheme"</span> <span class="attribute">parent</span>=<span class="value">"MyMaterialTheme.Base"</span>&gt;</span><span class="css"></span><br><span class="line"> </span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"MyMaterialTheme.Base"</span> <span class="attribute">parent</span>=<span class="value">"Theme.AppCompat.Light.DarkActionBar"</span>&gt;</span><span class="css"></span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">windowNoTitle</span>"&gt;<span class="tag">true</span>&lt;/<span class="tag">item</span>&gt;</span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">windowActionBar</span>"&gt;<span class="tag">false</span>&lt;/<span class="tag">item</span>&gt;</span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">colorPrimary</span>"&gt;<span class="at_rule">@<span class="keyword">color/colorPrimary&lt;/item&gt;</span></span><br><span class="line">        &lt;item name=<span class="string">"colorPrimaryDark"</span>&gt;@color/colorPrimaryDark&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"colorAccent"</span>&gt;@color/colorAccent&lt;/item&gt;</span><br><span class="line">    </span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>6.</strong> 在<strong>res</strong>下新建一个文件夹：<strong>values-v21</strong>，在这下面新建另外一个<strong>styles.xml</strong>天下一下样式，这些延时只适用于<strong>Android Lollipop</strong>版本</p>
<p><code>styles.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"MyMaterialTheme"</span> <span class="attribute">parent</span>=<span class="value">"MyMaterialTheme.Base"</span>&gt;</span><span class="css"></span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">android</span><span class="pseudo">:windowContentTransitions"</span>&gt;<span class="tag">true</span>&lt;/<span class="tag">item</span>&gt;</span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">android</span><span class="pseudo">:windowAllowEnterTransitionOverlap"</span>&gt;<span class="tag">true</span>&lt;/<span class="tag">item</span>&gt;</span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">android</span><span class="pseudo">:windowAllowReturnTransitionOverlap"</span>&gt;<span class="tag">true</span>&lt;/<span class="tag">item</span>&gt;</span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">android</span><span class="pseudo">:windowSharedElementEnterTransition"</span>&gt;<span class="at_rule">@<span class="keyword">android:transition/move&lt;/item&gt;</span></span><br><span class="line">        &lt;item name=<span class="string">"android:windowSharedElementExitTransition"</span>&gt;@android:transition/move&lt;/item&gt;</span><br><span class="line">    </span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>7.</strong> 现在我们已经准备好了基本的Material Design样式，为了应用这个主题，打开<strong>AndroidManifest.xml</strong>并通过<application>标签下的<strong>android:theme attribute of</strong>属性为应用设置该主题</application></p>
<p><code>android:theme=&quot;@style/MyMaterialTheme&quot;</code></p>
<p>在设置了该主题之后，你的<strong>AndroidManifest.xml</strong>应该是下面的样子：</p>
<p><code>AndroidManifest.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">manifest</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">package</span>=<span class="value">"info.androidhive.materialdesign"</span> &gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">application</span></span><br><span class="line">        <span class="attribute">android:allowBackup</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:icon</span>=<span class="value">"@mipmap/ic_launcher"</span></span><br><span class="line">        <span class="attribute">android:label</span>=<span class="value">"@string/app_name"</span></span><br><span class="line">        <span class="attribute">android:theme</span>=<span class="value">"@style/MyMaterialTheme"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">            <span class="attribute">android:name</span>=<span class="value">".activity.MainActivity"</span></span><br><span class="line">            <span class="attribute">android:label</span>=<span class="value">"@string/app_name"</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line">                <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>现在运行你的应用，你可以看到通知栏的颜色已经是我们设置的样式的颜色了。</p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/04/android-material-design-notification-bar.png" alt="android-material-design-notification-bar"></p>
<p><strong>3.1</strong> 添加Toolbar(Action Bar)</p>
<p>添加toolbar是非常容易的，你需要做的就是，为toolbar创建一个单独的layout，在其他layout中需要显示的地方使用。</p>
<p><strong>8.</strong> 新建一个xml文件<strong>res ⇒ layout ⇒ toolbar.xml</strong>并添加<code>android.support.v7.widget.Toolbar</code>控件，这个toolbar具有特定的宽度和主题</p>
<p><code>toolbar.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:local</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/toolbar"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:minHeight</span>=<span class="value">"?attr/actionBarSize"</span></span><br><span class="line">    <span class="attribute">android:background</span>=<span class="value">"?attr/colorPrimary"</span></span><br><span class="line">    <span class="attribute">local:theme</span>=<span class="value">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span><br><span class="line">    <span class="attribute">local:popupTheme</span>=<span class="value">"@style/ThemeOverlay.AppCompat.Light"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>9.</strong> 打开主Activity的布局文件(activity_main.xml)，并通过<code>&lt;include/&gt;</code>来添加对toolbar的使用</p>
<p><code>activity_main.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">tools:context</span>=<span class="value">".MainActivity"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_alignParentTop</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">include</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/toolbar"</span></span><br><span class="line">            <span class="attribute">layout</span>=<span class="value">"@layout/toolbar"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>运行这个应用，并且看看toolbar是不是显示在屏幕上</p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/04/android-material-design-toolbar1.png" alt="android-material-design-toolbar"></p>
<p>现在让我们试着给toolbar添加标题和交互</p>
<p><strong>10.</strong> 下载这个<a href="http://api.androidhive.info/images/ic_action_search.png" target="_blank" rel="external">搜索图标</a>，在Android Studio中通过Image Asset来引用它</p>
<p><strong>11.</strong> 右键<strong>res ⇒ New ⇒ Image Asset</strong>，会显示一个弹窗来引入资源，找到你下载的搜索图标，Asset Type选择<strong>Action Bar and Tab Icons</strong>，并命名为<strong>ic_search_action</strong></p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/04/android-studio-importing-image-asset.png" alt="android-studio-importing-image-asset"></p>
<p><strong>12.</strong> 图标导入完成之后，打开<strong>res ⇒ menu ⇒ menu_main.xml</strong>并且添加下面的搜索菜单：</p>
<p><code>menu_main.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">menu</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">tools:context</span>=<span class="value">".MainActivity"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/action_search"</span></span><br><span class="line">        <span class="attribute">android:title</span>=<span class="value">"@string/action_search"</span></span><br><span class="line">        <span class="attribute">android:orderInCategory</span>=<span class="value">"100"</span></span><br><span class="line">        <span class="attribute">android:icon</span>=<span class="value">"@drawable/ic_action_search"</span></span><br><span class="line">        <span class="attribute">app:showAsAction</span>=<span class="value">"ifRoom"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/action_settings"</span></span><br><span class="line">        <span class="attribute">android:title</span>=<span class="value">"@string/action_settings"</span></span><br><span class="line">        <span class="attribute">android:orderInCategory</span>=<span class="value">"100"</span></span><br><span class="line">        <span class="attribute">app:showAsAction</span>=<span class="value">"never"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">menu</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>13.</strong> 现在打开<strong>MainActivity.java</strong>并且做如下修改：</p>
<ul>
<li><p>1.继承的activity是<strong>AppCompatActivity</strong></p>
</li>
<li><p>2.调用<code>setSupportActionBar()</code>并传递toolbar对象，以设置toolbar为可用状态</p>
</li>
<li><ol>
<li>复写<strong>onCreateOptionsMenu()</strong>和<strong>onOptionsItemSelected()</strong>方法来设置toolbar的交互行为</li>
</ol>
</li>
</ul>
<p><code>MainActivity.java</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.Toolbar;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Toolbar mToolbar;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"> </span><br><span class="line">        mToolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line"> </span><br><span class="line">        setSupportActionBar(mToolbar);</span><br><span class="line">        getSupportActionBar().setDisplayShowHomeEnabled(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_main, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Handle action bar item clicks here. The action bar will</span></span><br><span class="line">        <span class="comment">// automatically handle clicks on the Home/Up button, so long</span></span><br><span class="line">        <span class="comment">// as you specify a parent activity in AndroidManifest.xml.</span></span><br><span class="line">        <span class="keyword">int</span> id = item.getItemId();</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">        <span class="keyword">if</span> (id == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在做了以上修改之后，如果你运行应用，你应该能够在toolbar中看到搜索图标和更多菜单选项了</p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/04/android-material-design-toolbar-action-items.png" alt="android-material-design-toolbar-action-items"></p>
<p><strong>3.2</strong> 添加导航抽屉</p>
<p>添加导航抽屉，同样是按照之前lollipop的方式，但是如果菜单项使用列表视图，在Material design中要使用<strong>RecyclerView</strong>。因此让我们看看怎样实现<strong>RecyclerView</strong>导航抽屉。</p>
<p><strong>14.</strong> 在你项目的java文件夹中，新建三个包：<em>activity</em>、<em>adapter</em>、<em>model</em>，并且把<em>MainActivity.java</em>移动到<em>activity</em>包下，这样来保证项目的条理性</p>
<p><strong>15.</strong> 打开model下的<strong>build.gradle</strong>，添加下面的依赖，然后执行<strong>Build ⇒ Rebuild Project</strong>来下载必须的库</p>
<p><code>build.gradle</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile fileTree(dir: 'libs', include: ['*.jar'])</span><br><span class="line">    compile 'com.android.support:appcompat-v7:22.2.0'</span><br><span class="line">    compile 'com.android.support:recyclerview-v7:22.2.+'</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>16.</strong> 在<em>model</em>包下，新建一个class文件，命名为<strong>NavDrawerItem.java</strong>，添加以下代码，这个class是一个实体类，它定义了导航抽屉里每一行的菜单项</p>
<p><code>NavDrawerItem.java</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> info.androidhive.materialdesign.model;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by Ravi on 29/07/15.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NavDrawerItem</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> showNotify;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NavDrawerItem</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NavDrawerItem</span><span class="params">(<span class="keyword">boolean</span> showNotify, String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.showNotify = showNotify;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isShowNotify</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> showNotify;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShowNotify</span><span class="params">(<span class="keyword">boolean</span> showNotify)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.showNotify = showNotify;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>17.</strong> 在<strong>res ⇒ layout</strong>之下，新建一个布局文件，叫做<strong>nav_draw_row.xml</strong>添加以下代码。这个layout渲染的导航抽屉每一行的视图，如果你想要自定义导航抽屉菜单项，你应该修改这个文件，现在只有一个TextView</p>
<p><code>nav_drawer_row.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:clickable</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/title"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:paddingLeft</span>=<span class="value">"30dp"</span></span><br><span class="line">        <span class="attribute">android:paddingTop</span>=<span class="value">"10dp"</span></span><br><span class="line">        <span class="attribute">android:paddingBottom</span>=<span class="value">"10dp"</span></span><br><span class="line">        <span class="attribute">android:textSize</span>=<span class="value">"15dp"</span></span><br><span class="line">        <span class="attribute">android:textStyle</span>=<span class="value">"bold"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>18.</strong> 下载这个<a href="http://api.androidhive.info/images/ic_profile.png" target="_blank" rel="external">个人信息</a>的图标，并把它粘贴到<em>drawable</em> 文件夹下，这一步是可选的，但是这个图标在导航抽屉的header中有使用到</p>
<p><strong>19.</strong> 新建一个layout命名<strong>fragment_navigation_drawer.xml</strong>，并且添加以下代码。这个layout呈现了整个导航抽屉的视图，它包含了头部部分，用于展示用户信息、RecyclerView来展示列表视图</p>
<p><code>fragment_navigation_drawer.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:background</span>=<span class="value">"@android:color/white"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">RelativeLayout</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/nav_header_container"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"140dp"</span></span><br><span class="line">        <span class="attribute">android:layout_alignParentTop</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:background</span>=<span class="value">"@color/colorPrimary"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"70dp"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"70dp"</span></span><br><span class="line">            <span class="attribute">android:src</span>=<span class="value">"@drawable/ic_profile"</span></span><br><span class="line">            <span class="attribute">android:scaleType</span>=<span class="value">"fitCenter"</span></span><br><span class="line">            <span class="attribute">android:layout_centerInParent</span>=<span class="value">"true"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.RecyclerView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/drawerList"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_below</span>=<span class="value">"@id/nav_header_container"</span></span><br><span class="line">        <span class="attribute">android:layout_marginTop</span>=<span class="value">"15dp"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>20.</strong> 因为<strong>RecyclerView</strong>是自定义的，我们需要一个adapter类去渲染自定义xml布局，因此，在adapter包下，创建一个适配器类<strong>NavigationDrawerAdapter.java</strong>，然后粘贴下面的代码。这个适配器类适配nav_drawer_row.xml布局并呈现RecycleView抽屉菜单</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by Ravi Tamada on 12-03-2015.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NavigationDrawerAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">NavigationDrawerAdapter</span>.<span class="title">MyViewHolder</span>&gt; </span>&#123;</span><br><span class="line">    List&lt;NavDrawerItem&gt; data = Collections.emptyList();</span><br><span class="line">    <span class="keyword">private</span> LayoutInflater inflater;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NavigationDrawerAdapter</span><span class="params">(Context context, List&lt;NavDrawerItem&gt; data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">        inflater = LayoutInflater.from(context);</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        data.remove(position);</span><br><span class="line">        notifyItemRemoved(position);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MyViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        View view = inflater.inflate(R.layout.nav_drawer_row, parent, <span class="keyword">false</span>);</span><br><span class="line">        MyViewHolder holder = <span class="keyword">new</span> MyViewHolder(view);</span><br><span class="line">        <span class="keyword">return</span> holder;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(MyViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        NavDrawerItem current = data.get(position);</span><br><span class="line">        holder.title.setText(current.getTitle());</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data.size();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        TextView title;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            title = (TextView) itemView.findViewById(R.id.title);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>21.</strong> 在activity包下，新建一个fragment叫做<strong>FragmentDrawer.java</strong>。在Android Studio中，新建fragment：<em>右键activity ⇒ New ⇒ Fragment ⇒ Fragment (Blank)</em>，并且给出你的fragment的名称</p>
<p><code>FragmentDrawer.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by Ravi on 29/07/15.</span><br><span class="line"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.widget.DrawerLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.ActionBarDrawerToggle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.LinearLayoutManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.Toolbar;</span><br><span class="line"><span class="keyword">import</span> android.view.GestureDetector;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> info.androidhive.materialdesign.R;</span><br><span class="line"><span class="keyword">import</span> info.androidhive.materialdesign.adapter.NavigationDrawerAdapter;</span><br><span class="line"><span class="keyword">import</span> info.androidhive.materialdesign.model.NavDrawerItem;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FragmentDrawer</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String TAG = FragmentDrawer.class.getSimpleName();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> RecyclerView recyclerView;</span><br><span class="line">    <span class="keyword">private</span> ActionBarDrawerToggle mDrawerToggle;</span><br><span class="line">    <span class="keyword">private</span> DrawerLayout mDrawerLayout;</span><br><span class="line">    <span class="keyword">private</span> NavigationDrawerAdapter adapter;</span><br><span class="line">    <span class="keyword">private</span> View containerView;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String[] titles = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> FragmentDrawerListener drawerListener;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FragmentDrawer</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDrawerListener</span><span class="params">(FragmentDrawerListener listener)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.drawerListener = listener;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;NavDrawerItem&gt; <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;NavDrawerItem&gt; data = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        <span class="comment">// preparing navigation drawer items</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; titles.length; i++) &#123;</span><br><span class="line">            NavDrawerItem navItem = <span class="keyword">new</span> NavDrawerItem();</span><br><span class="line">            navItem.setTitle(titles[i]);</span><br><span class="line">            data.add(navItem);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// drawer labels</span></span><br><span class="line">        titles = getActivity().getResources().getStringArray(R.array.nav_drawer_labels);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span><br><span class="line">                             Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Inflating view layout</span></span><br><span class="line">        View layout = inflater.inflate(R.layout.fragment_navigation_drawer, container, <span class="keyword">false</span>);</span><br><span class="line">        recyclerView = (RecyclerView) layout.findViewById(R.id.drawerList);</span><br><span class="line"> </span><br><span class="line">        adapter = <span class="keyword">new</span> NavigationDrawerAdapter(getActivity(), getData());</span><br><span class="line">        recyclerView.setAdapter(adapter);</span><br><span class="line">        recyclerView.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(getActivity()));</span><br><span class="line">        recyclerView.addOnItemTouchListener(<span class="keyword">new</span> RecyclerTouchListener(getActivity(), recyclerView, <span class="keyword">new</span> ClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">                drawerListener.onDrawerItemSelected(view, position);</span><br><span class="line">                mDrawerLayout.closeDrawer(containerView);</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLongClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;));</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> layout;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">(<span class="keyword">int</span> fragmentId, DrawerLayout drawerLayout, <span class="keyword">final</span> Toolbar toolbar)</span> </span>&#123;</span><br><span class="line">        containerView = getActivity().findViewById(fragmentId);</span><br><span class="line">        mDrawerLayout = drawerLayout;</span><br><span class="line">        mDrawerToggle = <span class="keyword">new</span> ActionBarDrawerToggle(getActivity(), drawerLayout, toolbar, R.string.drawer_open, R.string.drawer_close) &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDrawerOpened</span><span class="params">(View drawerView)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.onDrawerOpened(drawerView);</span><br><span class="line">                getActivity().invalidateOptionsMenu();</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDrawerClosed</span><span class="params">(View drawerView)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.onDrawerClosed(drawerView);</span><br><span class="line">                getActivity().invalidateOptionsMenu();</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDrawerSlide</span><span class="params">(View drawerView, <span class="keyword">float</span> slideOffset)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.onDrawerSlide(drawerView, slideOffset);</span><br><span class="line">                toolbar.setAlpha(<span class="number">1</span> - slideOffset / <span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"> </span><br><span class="line">        mDrawerLayout.setDrawerListener(mDrawerToggle);</span><br><span class="line">        mDrawerLayout.post(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                mDrawerToggle.syncState();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">interface</span> <span class="title">ClickListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span></span>;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLongClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">RecyclerTouchListener</span> <span class="keyword">implements</span> <span class="title">RecyclerView</span>.<span class="title">OnItemTouchListener</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">private</span> GestureDetector gestureDetector;</span><br><span class="line">        <span class="keyword">private</span> ClickListener clickListener;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">RecyclerTouchListener</span><span class="params">(Context context, <span class="keyword">final</span> RecyclerView recyclerView, <span class="keyword">final</span> ClickListener clickListener)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.clickListener = clickListener;</span><br><span class="line">            gestureDetector = <span class="keyword">new</span> GestureDetector(context, <span class="keyword">new</span> GestureDetector.SimpleOnGestureListener() &#123;</span><br><span class="line">                <span class="annotation">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onSingleTapUp</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">                <span class="annotation">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLongPress</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">                    View child = recyclerView.findChildViewUnder(e.getX(), e.getY());</span><br><span class="line">                    <span class="keyword">if</span> (child != <span class="keyword">null</span> &amp;&amp; clickListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        clickListener.onLongClick(child, recyclerView.getChildPosition(child));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onInterceptTouchEvent</span><span class="params">(RecyclerView rv, MotionEvent e)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">            View child = rv.findChildViewUnder(e.getX(), e.getY());</span><br><span class="line">            <span class="keyword">if</span> (child != <span class="keyword">null</span> &amp;&amp; clickListener != <span class="keyword">null</span> &amp;&amp; gestureDetector.onTouchEvent(e)) &#123;</span><br><span class="line">                clickListener.onClick(child, rv.getChildPosition(child));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTouchEvent</span><span class="params">(RecyclerView rv, MotionEvent e)</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestDisallowInterceptTouchEvent</span><span class="params">(<span class="keyword">boolean</span> disallowIntercept)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">FragmentDrawerListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDrawerItemSelected</span><span class="params">(View view, <span class="keyword">int</span> position)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>22.</strong> 最后，打开首页activity的布局文件<strong>activity_main.xml</strong>，按照下面这样修改。在这个布局中，我们添加了<strong>android.support.v4.widget.DrawerLayout</strong>，来显示导航抽屉菜单</p>
<p>你也必须写出你的fragment下<strong>FragmentDrawer</strong>的正确路径</p>
<p><code>actiivty_main.xml</code><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"</span><br><span class="line">    xmlns:app="http://schemas.android.com/apk/res-auto"</span><br><span class="line">    xmlns:tools="http://schemas.android.com/tools"</span><br><span class="line">    android:id="@+id/drawer_layout"</span><br><span class="line">    android:layout_width="match_parent"</span><br><span class="line">    android:layout_height="match_parent"&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width="match_parent"</span><br><span class="line">        android:layout_height="match_parent"</span><br><span class="line">        android:orientation="vertical"&gt;</span><br><span class="line"> </span><br><span class="line">        &lt;LinearLayout</span><br><span class="line">            android:id="@+id/container_toolbar"</span><br><span class="line">            android:layout_width="match_parent"</span><br><span class="line">            android:layout_height="wrap_content"</span><br><span class="line">            android:orientation="vertical"&gt;</span><br><span class="line"> </span><br><span class="line">            &lt;include</span><br><span class="line">                android:id="@+id/toolbar"</span><br><span class="line">                layout="@layout/toolbar" /&gt;</span><br><span class="line">        &lt;/LinearLayout&gt;</span><br><span class="line"> </span><br><span class="line">        &lt;FrameLayout</span><br><span class="line">            android:id="@+id/container_body"</span><br><span class="line">            android:layout_width="fill_parent"</span><br><span class="line">            android:layout_height="0dp"</span><br><span class="line">            android:layout_weight="1" /&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &lt;fragment</span><br><span class="line">        android:id="@+id/fragment_navigation_drawer"</span><br><span class="line">        android:name="info.androidhive.materialdesign.activity.FragmentDrawer"</span><br><span class="line">        android:layout_width="@dimen/nav_drawer_width"</span><br><span class="line">        android:layout_height="match_parent"</span><br><span class="line">        android:layout_gravity="start"</span><br><span class="line">        app:layout="@layout/fragment_navigation_drawer"</span><br><span class="line">        tools:layout="@layout/fragment_navigation_drawer" /&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/android.support.v4.widget.DrawerLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>现在，我们已经准备好所有的layout和class，让我们在<strong>MainActivity</strong>中做一些必要的修改，使得导航抽屉可以正常运行</p>
<p><strong>23.</strong> 打开<strong>MainActivity.java</strong>并且做如下修改</p>
<ul>
<li><p>activity需要实现FragmentDrawer.FragmentDrawerListener<strong>并且复写</strong>onDrawerItemSelected()**方法</p>
</li>
<li><p>创建一个**FragmentDrawer的实例，并设置这个菜单选择的监听器</p>
</li>
</ul>
<p><code>MainActivity.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.support.v4.widget.DrawerLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.Toolbar;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">FragmentDrawer</span>.<span class="title">FragmentDrawerListener</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Toolbar mToolbar;</span><br><span class="line">    <span class="keyword">private</span> FragmentDrawer drawerFragment;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"> </span><br><span class="line">        mToolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line"> </span><br><span class="line">        setSupportActionBar(mToolbar);</span><br><span class="line">        getSupportActionBar().setDisplayShowHomeEnabled(<span class="keyword">true</span>);</span><br><span class="line"> </span><br><span class="line">        drawerFragment = (FragmentDrawer)</span><br><span class="line">                getSupportFragmentManager().findFragmentById(R.id.fragment_navigation_drawer);</span><br><span class="line">        drawerFragment.setUp(R.id.fragment_navigation_drawer, (DrawerLayout) findViewById(R.id.drawer_layout), mToolbar);</span><br><span class="line">        drawerFragment.setDrawerListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_main, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Handle action bar item clicks here. The action bar will</span></span><br><span class="line">        <span class="comment">// automatically handle clicks on the Home/Up button, so long</span></span><br><span class="line">        <span class="comment">// as you specify a parent activity in AndroidManifest.xml.</span></span><br><span class="line">        <span class="keyword">int</span> id = item.getItemId();</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">        <span class="keyword">if</span> (id == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDrawerItemSelected</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>现在，如果你运行这个应用，你能够看到这个导航抽屉，包含一个header和列表</p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/04/androd-material-design-navigation-drawer.png" alt="androd-material-design-navigation-drawer"></p>
<p>androd-material-design-navigation-drawer</p>
<p><strong>3.3</strong> 实现导航抽屉的选择事件<br>尽管导航抽屉成功运行了，但是你看到菜单的点击事件没有正常运行，这是因为我们也需要实现RecyclerView的click监听事件</p>
<p>因为我们有三个菜单项（Home, Friends &amp; Messages）在导航抽屉中，因此我们需要创建三个独立的fragment类为每一个菜单</p>
<p><strong>24.</strong> 在res下面，新建一个xml文件叫做<strong>fragment_home.xml</strong>并添加以下代码</p>
<p><code>fragment_home.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">    <span class="attribute">tools:context</span>=<span class="value">"info.androidhive.materialdesign.activity.HomeFragment"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/label"</span></span><br><span class="line">        <span class="attribute">android:layout_alignParentTop</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:layout_marginTop</span>=<span class="value">"100dp"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:gravity</span>=<span class="value">"center_horizontal"</span></span><br><span class="line">        <span class="attribute">android:textSize</span>=<span class="value">"45dp"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"HOME"</span></span><br><span class="line">        <span class="attribute">android:textStyle</span>=<span class="value">"bold"</span>/&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:layout_below</span>=<span class="value">"@id/label"</span></span><br><span class="line">        <span class="attribute">android:layout_centerInParent</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:textSize</span>=<span class="value">"12dp"</span></span><br><span class="line">        <span class="attribute">android:layout_marginTop</span>=<span class="value">"10dp"</span></span><br><span class="line">        <span class="attribute">android:gravity</span>=<span class="value">"center_horizontal"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"Edit fragment_home.xml to change the appearance"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>25.</strong> 在activity包下，新建一个fragment类，叫做<strong>HomeFragment.java</strong>并且添加以下代码</p>
<p><code>HomeFragment.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HomeFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HomeFragment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Required empty public constructor</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span><br><span class="line">                             Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        View rootView = inflater.inflate(R.layout.fragment_home, container, <span class="keyword">false</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        <span class="comment">// Inflate the layout for this fragment</span></span><br><span class="line">        <span class="keyword">return</span> rootView;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAttach</span><span class="params">(Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onAttach(activity);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDetach</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDetach();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>26.</strong> 新建两个fragment类分别叫做：<strong>FriendsFragment.java</strong>、<strong>MessagesFragment.java</strong>，同样新建两个xml：<strong>fragment_friends.xml</strong>、<strong>fragment_messages.xml</strong>，按照上面步骤添加代码</p>
<p><strong>27.</strong> 现在打开<strong>MainActivity.java</strong>，做以下修改</p>
<ul>
<li><em>displayView()</em>方法显示fragment，这个方法在<strong>onDrawerItemSelected()</strong>中被调用，当菜单被选择的时候，来渲染对应的布局</li>
</ul>
<p><code>MainActivity.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentTransaction;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.widget.DrawerLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.ActionBarActivity;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.Toolbar;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">ActionBarActivity</span> <span class="keyword">implements</span> <span class="title">FragmentDrawer</span>.<span class="title">FragmentDrawerListener</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String TAG = MainActivity.class.getSimpleName();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Toolbar mToolbar;</span><br><span class="line">    <span class="keyword">private</span> FragmentDrawer drawerFragment;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"> </span><br><span class="line">        mToolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line"> </span><br><span class="line">        setSupportActionBar(mToolbar);</span><br><span class="line">        getSupportActionBar().setDisplayShowHomeEnabled(<span class="keyword">true</span>);</span><br><span class="line"> </span><br><span class="line">        drawerFragment = (FragmentDrawer)</span><br><span class="line">                getSupportFragmentManager().findFragmentById(R.id.fragment_navigation_drawer);</span><br><span class="line">        drawerFragment.setUp(R.id.fragment_navigation_drawer, (DrawerLayout) findViewById(R.id.drawer_layout), mToolbar);</span><br><span class="line">        drawerFragment.setDrawerListener(<span class="keyword">this</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// display the first navigation drawer view on app launch</span></span><br><span class="line">        displayView(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_main, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Handle action bar item clicks here. The action bar will</span></span><br><span class="line">        <span class="comment">// automatically handle clicks on the Home/Up button, so long</span></span><br><span class="line">        <span class="comment">// as you specify a parent activity in AndroidManifest.xml.</span></span><br><span class="line">        <span class="keyword">int</span> id = item.getItemId();</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">        <span class="keyword">if</span> (id == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span>(id == R.id.action_search)&#123;</span><br><span class="line">            Toast.makeText(getApplicationContext(), <span class="string">"Search action is selected!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDrawerItemSelected</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            displayView(position);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">displayView</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        Fragment fragment = <span class="keyword">null</span>;</span><br><span class="line">        String title = getString(R.string.app_name);</span><br><span class="line">        <span class="keyword">switch</span> (position) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                fragment = <span class="keyword">new</span> HomeFragment();</span><br><span class="line">                title = getString(R.string.title_home);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                fragment = <span class="keyword">new</span> FriendsFragment();</span><br><span class="line">                title = getString(R.string.title_friends);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                fragment = <span class="keyword">new</span> MessagesFragment();</span><br><span class="line">                title = getString(R.string.title_messages);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (fragment != <span class="keyword">null</span>) &#123;</span><br><span class="line">            FragmentManager fragmentManager = getSupportFragmentManager();</span><br><span class="line">            FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();</span><br><span class="line">            fragmentTransaction.replace(R.id.container_body, fragment);</span><br><span class="line">            fragmentTransaction.commit();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// set the toolbar title</span></span><br><span class="line">            getSupportActionBar().setTitle(title);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>现在再来运行你的应用，你能够看到导航抽屉菜单的选择事件可以正常实现，并且对应的布局显示在toolbar下面</p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/04/android-material-design-navigation-drawer-1.png" alt="android-material-design-navigation-drawer-1"></p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/04/android-material-design-navigation-drawer-2.png" alt="android-material-design-navigation-drawer-2"></p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/04/android-material-design-navigation-drawer-3.png" alt="android-material-design-navigation-drawer-3"></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>原作者：Ravi Tamada<br>原文地址：<a href="http://www.androidhive.info/2015/04/android-getting-started-with-material-design/" target="]]>
    </summary>
    
      <category term="Material Design" scheme="http://xiaofeng.site/tags/Material-Design/"/>
    
      <category term="Android" scheme="http://xiaofeng.site/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Material Design - Floating Labels for EditText]]></title>
    <link href="http://xiaofeng.site/2015/12/30/Android-Material-Design-Floating-Labels-for-EditText/undefined/"/>
    <id>http://xiaofeng.site/2015/12/30/Android-Material-Design-Floating-Labels-for-EditText/undefined/</id>
    <published>2015-12-30T02:42:59.000Z</published>
    <updated>2015-12-30T07:42:07.926Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原文作者：Ravi Tamada<br>原文地址：<a href="http://www.androidhive.info/2015/04/android-getting-started-with-material-design/" target="_blank" rel="external">http://www.androidhive.info/…aterial-design/</a></p>
</blockquote>
<p>Android浮动标签在android设计支持库有介绍，在EditText上显示一个悬浮的标签。最初它在EditText中作为字段为空时的一个提示。当用户开始输入文本，它通过一个动画的形式，移动到悬浮标签的位置。</p>
<p>这篇文章通过一个简单的表单验证的例子，演示了Floating Lables的用法。</p>
<p>源码下载地址：<a href="http://download.androidhive.info/download?code=J5TnQr8DLL52kPlAxeIk9Z3H21tlAtFcD74lW1gWZwyM6aEBkra49p%2FxpDDZz5ZfPieGEGoAopEZQOxyUGNRKuXhmSxB%2FW6QlimXGOiu8gWcH1pqtQKfO5AfA%3D%3DV7JclQNddfyJJ0xyaJTvXugo0HTV0LBnG9w" target="_blank" rel="external">http://download.androidhive.info/…dfyJJ0xyaJTvXugo0HTV0LBnG9w</a><br>视频演示地址：<a href="https://youtu.be/TYhpFJ58g6Y" target="_blank" rel="external">yutube-display</a></p>
<h3 id="TextInputLayout">TextInputLayout</h3><p>在Material Design支持库中一个新的元素，叫作<a href="https://developer.android.com/intl/zh-tw/reference/android/support/design/widget/TextInputLayout.html" target="_blank" rel="external">TextInputLayout</a>，用于在EditText上展示悬浮标签。为了显示悬浮标签，EditText被TextInputLayout<br>所包裹。你也可以给EditText设置一个错误的信息，通过使用<code>setErrorEnabled()</code>和<code>setError()</code>方法。</p>
<p>TextInputLayout采用了EditText<strong>android:hint</strong>属性的值来作为悬浮标签显示。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.TextInputLayout</span></span><br><span class="line"><span class="attribute">android:id</span>=<span class="value">"@+id/input_layout_password"</span></span><br><span class="line"><span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line"><span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">EditText</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/input_password"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:hint</span>=<span class="value">"@string/hint_email"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.design.widget.TextInputLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-design-support-library-floating-labels.png" alt="android-design-support-library-floating-labels"></p>
<h3 id="简单的表单验证示例">简单的表单验证示例</h3><p>现在让我们来创建一个简单的android应用，去真正的了解TextInputLayout的用法。这个应用包含了一个带有悬浮标签的简答表单，输入验证和错误信息启用。</p>
<p><strong>1.</strong> 在Android Studio中，通过<strong>File ⇒ New Project</strong>并填好其它信息来新建一个项目。</p>
<p><strong>2.</strong> 打开<strong>build.gradle</strong>并且添加Material Design支持库的依赖。</p>
<p><code>com.android.support:design:23.0.1</code></p>
<p><code>build.gradle</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile fileTree(dir: 'libs', include: ['*.jar'])</span><br><span class="line">    compile 'com.android.support:appcompat-v7:23.0.1'</span><br><span class="line">    compile 'com.android.support:design:23.0.1'</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>3.</strong> 通过<a href="http://tips.androidhive.info/2015/09/android-how-to-apply-material-design-theme/" target="_blank" rel="external">这里</a>提到的步骤，应用Material Design主题，但这不是必须的。</p>
<p><strong>4.</strong> 添加下面字符串到<strong>res ⇒ values =&gt; strings.xml</strong>下面。</p>
<p><code>strings.xml</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"app_name"</span>&gt;</span>Floating Labels<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"action_settings"</span>&gt;</span>Settings<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"hint_name"</span>&gt;</span>Full Name<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"hint_email"</span>&gt;</span>Email<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"hint_password"</span>&gt;</span>Password<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"btn_sign_up"</span>&gt;</span>Sign Up<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"err_msg_name"</span>&gt;</span>Enter your full name<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"err_msg_email"</span>&gt;</span>Enter valid email address<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"err_msg_password"</span>&gt;</span>Enter the password<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>5.</strong> 打开主activity的<strong>activity_main.xml</strong>布局文件，然后添加如下代码。这些代码创建了一个简单的表单，有三个输入框。这里你可以看到EditText被TextInputLayout所包裹。</p>
<p><code>activity_main.xml</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.CoordinatorLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.AppBarLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:theme</span>=<span class="value">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/toolbar"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"?attr/actionBarSize"</span></span><br><span class="line">            <span class="attribute">android:background</span>=<span class="value">"?attr/colorPrimary"</span></span><br><span class="line">            <span class="attribute">app:layout_scrollFlags</span>=<span class="value">"scroll|enterAlways"</span></span><br><span class="line">            <span class="attribute">app:popupTheme</span>=<span class="value">"@style/ThemeOverlay.AppCompat.Light"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_marginTop</span>=<span class="value">"?attr/actionBarSize"</span></span><br><span class="line">        <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">        <span class="attribute">android:paddingLeft</span>=<span class="value">"20dp"</span></span><br><span class="line">        <span class="attribute">android:paddingRight</span>=<span class="value">"20dp"</span></span><br><span class="line">        <span class="attribute">android:paddingTop</span>=<span class="value">"60dp"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.design.widget.TextInputLayout</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/input_layout_name"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="title">EditText</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/input_name"</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:singleLine</span>=<span class="value">"true"</span></span><br><span class="line">                <span class="attribute">android:hint</span>=<span class="value">"@string/hint_name"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">android.support.design.widget.TextInputLayout</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.design.widget.TextInputLayout</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/input_layout_email"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="title">EditText</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/input_email"</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:inputType</span>=<span class="value">"textEmailAddress"</span></span><br><span class="line">                <span class="attribute">android:hint</span>=<span class="value">"@string/hint_email"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">android.support.design.widget.TextInputLayout</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.design.widget.TextInputLayout</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/input_layout_password"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="title">EditText</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/input_password"</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:inputType</span>=<span class="value">"textPassword"</span></span><br><span class="line">                <span class="attribute">android:hint</span>=<span class="value">"@string/hint_password"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">android.support.design.widget.TextInputLayout</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">Button</span> <span class="attribute">android:id</span>=<span class="value">"@+id/btn_signup"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:text</span>=<span class="value">"@string/btn_sign_up"</span></span><br><span class="line">            <span class="attribute">android:background</span>=<span class="value">"@color/colorPrimary"</span></span><br><span class="line">            <span class="attribute">android:layout_marginTop</span>=<span class="value">"40dp"</span></span><br><span class="line">            <span class="attribute">android:textColor</span>=<span class="value">"@android:color/white"</span>/&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>6.</strong> 打开<strong>MainActivity.java</strong>并且按照以下代码修改，这里我已经添加了一些方法去验证用户的输入数据比如名字、email、密码。我也. 我也指定了TextWatcher给所有的edittext来验证用户正在输入的内容，当输入无效或者为空时，setError()方法就会被调用来显示错误信息。</p>
<p><code>MainActivity.java</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> info.androidhive.floatinglabels;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.TextInputLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.Toolbar;</span><br><span class="line"><span class="keyword">import</span> android.text.Editable;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.text.TextWatcher;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.WindowManager;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Toolbar toolbar;</span><br><span class="line">    <span class="keyword">private</span> EditText inputName, inputEmail, inputPassword;</span><br><span class="line">    <span class="keyword">private</span> TextInputLayout inputLayoutName, inputLayoutEmail, inputLayoutPassword;</span><br><span class="line">    <span class="keyword">private</span> Button btnSignUp;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"> </span><br><span class="line">        toolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line"> </span><br><span class="line">        inputLayoutName = (TextInputLayout) findViewById(R.id.input_layout_name);</span><br><span class="line">        inputLayoutEmail = (TextInputLayout) findViewById(R.id.input_layout_email);</span><br><span class="line">        inputLayoutPassword = (TextInputLayout) findViewById(R.id.input_layout_password);</span><br><span class="line">        inputName = (EditText) findViewById(R.id.input_name);</span><br><span class="line">        inputEmail = (EditText) findViewById(R.id.input_email);</span><br><span class="line">        inputPassword = (EditText) findViewById(R.id.input_password);</span><br><span class="line">        btnSignUp = (Button) findViewById(R.id.btn_signup);</span><br><span class="line"> </span><br><span class="line">        inputName.addTextChangedListener(<span class="keyword">new</span> MyTextWatcher(inputName));</span><br><span class="line">        inputEmail.addTextChangedListener(<span class="keyword">new</span> MyTextWatcher(inputEmail));</span><br><span class="line">        inputPassword.addTextChangedListener(<span class="keyword">new</span> MyTextWatcher(inputPassword));</span><br><span class="line"> </span><br><span class="line">        btnSignUp.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                submitForm();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Validating form</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">submitForm</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!validateName()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (!validateEmail()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (!validatePassword()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        Toast.makeText(getApplicationContext(), <span class="string">"Thank You!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">validateName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (inputName.getText().toString().trim().isEmpty()) &#123;</span><br><span class="line">            inputLayoutName.setError(getString(R.string.err_msg_name));</span><br><span class="line">            requestFocus(inputName);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            inputLayoutName.setErrorEnabled(<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">validateEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String email = inputEmail.getText().toString().trim();</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (email.isEmpty() || !isValidEmail(email)) &#123;</span><br><span class="line">            inputLayoutEmail.setError(getString(R.string.err_msg_email));</span><br><span class="line">            requestFocus(inputEmail);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            inputLayoutEmail.setErrorEnabled(<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">validatePassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (inputPassword.getText().toString().trim().isEmpty()) &#123;</span><br><span class="line">            inputLayoutPassword.setError(getString(R.string.err_msg_password));</span><br><span class="line">            requestFocus(inputPassword);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            inputLayoutPassword.setErrorEnabled(<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isValidEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> !TextUtils.isEmpty(email) &amp;&amp; android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">requestFocus</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (view.requestFocus()) &#123;</span><br><span class="line">            getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTextWatcher</span> <span class="keyword">implements</span> <span class="title">TextWatcher</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">private</span> View view;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">MyTextWatcher</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.view = view;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence charSequence, <span class="keyword">int</span> i, <span class="keyword">int</span> i1, <span class="keyword">int</span> i2)</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence charSequence, <span class="keyword">int</span> i, <span class="keyword">int</span> i1, <span class="keyword">int</span> i2)</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable editable)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span> (view.getId()) &#123;</span><br><span class="line">                <span class="keyword">case</span> R.id.input_name:</span><br><span class="line">                    validateName();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> R.id.input_email:</span><br><span class="line">                    validateEmail();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> R.id.input_password:</span><br><span class="line">                    validatePassword();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-material-design-floating-labels.png" alt="android-material-design-floating-labels"></p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-material-design-floating-labels-error-messages.png" alt="android-material-design-floating-labels-error-messages"></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>原文作者：Ravi Tamada<br>原文地址：<a href="http://www.androidhive.info/2015/04/android-getting-started-with-material-design/" target=]]>
    </summary>
    
      <category term="EditText" scheme="http://xiaofeng.site/tags/EditText/"/>
    
      <category term="Floating Lables" scheme="http://xiaofeng.site/tags/Floating-Lables/"/>
    
      <category term="Material Design" scheme="http://xiaofeng.site/tags/Material-Design/"/>
    
      <category term="Android" scheme="http://xiaofeng.site/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Material Design - Tabs]]></title>
    <link href="http://xiaofeng.site/2015/12/28/Android-Material-Design-Tabs/undefined/"/>
    <id>http://xiaofeng.site/2015/12/28/Android-Material-Design-Tabs/undefined/</id>
    <published>2015-12-28T03:51:06.000Z</published>
    <updated>2015-12-30T02:09:31.406Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原作者：Ravi Tamada<br>原文地址：<a href="http://www.androidhive.info/2015/09/android-material-design-working-with-tabs/" target="_blank" rel="external">http://www.androidhive.info/2015/09/android-material-design-working-with-tabs/</a></p>
</blockquote>
<p><a href="http://android-developers.blogspot.in/2015/05/android-design-support-library.html" target="_blank" rel="external">Android Design支持库</a> 提供了很好的向后兼容性，在Material Design支持库中的组件中，像Navigation Drawer, FloatingAction Button, Snackbar, Tabs, Floating labels ， animation frameworks。在这里我们将学习怎样实现tabs。</p>
<p>在进一步深入了解之前，我建议先看一下<a href="https://www.google.co.in/design/spec/components/tabs.html#" target="_blank" rel="external">tabs的文档</a>，它可以告诉你在实现tabs的时候，什么该做什么不该做。</p>
<p>这里还有yutube的视频：<a href="https://youtu.be/6sGhDYYUoBM" target="_blank" rel="external">到墙外看一看</a></p>
<h3 id="使用Material">使用Material</h3><p>首先我们创建一个新的项目并且应用Material主题，如果你不知道Material Design，那么可以看看文章<a href="http://www.androidhive.info/2015/04/android-getting-started-with-material-design/" target="_blank" rel="external">Material Design入门</a></p>
<p><strong>1</strong>.在Android Studio中，<strong>File =&gt; New Project</strong>并且填好其它信息去创建一个新项目。</p>
<p><strong>2</strong>.打开<strong>build.gradle</strong>然后添加支持库<strong>com.android.support:design:23.0.1</strong></p>
<p><code>build.gradle</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile fileTree(dir: 'libs', include: ['*.jar'])</span><br><span class="line">    compile 'com.android.support:appcompat-v7:23.0.1'</span><br><span class="line">    compile 'com.android.support:design:23.0.1'</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>3</strong>.打开位于<strong>res =&gt; values</strong>下的<strong>colors.xml</strong>，并且添加以下颜色值：</p>
<p><code>colors.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">color</span> <span class="attribute">name</span>=<span class="value">"colorPrimary"</span>&gt;</span>#125688<span class="tag">&lt;/<span class="title">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">color</span> <span class="attribute">name</span>=<span class="value">"colorPrimaryDark"</span>&gt;</span>#125688<span class="tag">&lt;/<span class="title">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">color</span> <span class="attribute">name</span>=<span class="value">"textColorPrimary"</span>&gt;</span>#FFFFFF<span class="tag">&lt;/<span class="title">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">color</span> <span class="attribute">name</span>=<span class="value">"windowBackground"</span>&gt;</span>#FFFFFF<span class="tag">&lt;/<span class="title">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">color</span> <span class="attribute">name</span>=<span class="value">"navigationBarColor"</span>&gt;</span>#000000<span class="tag">&lt;/<span class="title">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">color</span> <span class="attribute">name</span>=<span class="value">"colorAccent"</span>&gt;</span>#c8e8ff<span class="tag">&lt;/<span class="title">color</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>4</strong>.在<strong>res =&gt; values</strong>下的<strong>dimens.xml</strong>添加以下代码：</p>
<p><code>dimens.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Default screen margins, per the Android Design guidelines. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dimen</span> <span class="attribute">name</span>=<span class="value">"activity_horizontal_margin"</span>&gt;</span>16dp<span class="tag">&lt;/<span class="title">dimen</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dimen</span> <span class="attribute">name</span>=<span class="value">"activity_vertical_margin"</span>&gt;</span>16dp<span class="tag">&lt;/<span class="title">dimen</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dimen</span> <span class="attribute">name</span>=<span class="value">"tab_max_width"</span>&gt;</span>264dp<span class="tag">&lt;/<span class="title">dimen</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dimen</span> <span class="attribute">name</span>=<span class="value">"tab_padding_bottom"</span>&gt;</span>16dp<span class="tag">&lt;/<span class="title">dimen</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dimen</span> <span class="attribute">name</span>=<span class="value">"tab_label"</span>&gt;</span>14sp<span class="tag">&lt;/<span class="title">dimen</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dimen</span> <span class="attribute">name</span>=<span class="value">"custom_tab_layout_height"</span>&gt;</span>72dp<span class="tag">&lt;/<span class="title">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>5</strong>. 打开<strong>res ⇒ values</strong>下的<strong>styles.xml</strong>，并添加以下主题。在<strong>styles.xml</strong>中这个主题是通用于所有安卓版本的。</p>
<p><code>styles.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"MyMaterialTheme"</span> <span class="attribute">parent</span>=<span class="value">"MyMaterialTheme.Base"</span>&gt;</span><span class="css"></span><br><span class="line"> </span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"MyMaterialTheme.Base"</span> <span class="attribute">parent</span>=<span class="value">"Theme.AppCompat.Light.DarkActionBar"</span>&gt;</span><span class="css"></span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">windowNoTitle</span>"&gt;<span class="tag">true</span>&lt;/<span class="tag">item</span>&gt;</span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">windowActionBar</span>"&gt;<span class="tag">false</span>&lt;/<span class="tag">item</span>&gt;</span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">colorPrimary</span>"&gt;<span class="at_rule">@<span class="keyword">color/colorPrimary&lt;/item&gt;</span></span><br><span class="line">        &lt;item name=<span class="string">"colorPrimaryDark"</span>&gt;@color/colorPrimaryDark&lt;/item&gt;</span><br><span class="line">        &lt;item name=<span class="string">"colorAccent"</span>&gt;@color/colorAccent&lt;/item&gt;</span><br><span class="line">    </span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>6.</strong> 在<strong>res</strong>下面创建<strong>values-v21</strong>文件夹，然后创建另外一个<strong>styles.xml</strong>，写入以下主题，这个主题是适用于Android 5.0的。</p>
<p><code>styles.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"MyMaterialTheme"</span> <span class="attribute">parent</span>=<span class="value">"MyMaterialTheme.Base"</span>&gt;</span><span class="css"></span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">android</span><span class="pseudo">:windowContentTransitions"</span>&gt;<span class="tag">true</span>&lt;/<span class="tag">item</span>&gt;</span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">android</span><span class="pseudo">:windowAllowEnterTransitionOverlap"</span>&gt;<span class="tag">true</span>&lt;/<span class="tag">item</span>&gt;</span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">android</span><span class="pseudo">:windowAllowReturnTransitionOverlap"</span>&gt;<span class="tag">true</span>&lt;/<span class="tag">item</span>&gt;</span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">android</span><span class="pseudo">:windowSharedElementEnterTransition"</span>&gt;<span class="at_rule">@<span class="keyword">android:transition/move&lt;/item&gt;</span></span><br><span class="line">        &lt;item name=<span class="string">"android:windowSharedElementExitTransition"</span>&gt;@android:transition/move&lt;/item&gt;</span><br><span class="line">    </span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>7.</strong> 最后打开<strong>AndroidManifest.xml</strong>并且修改<strong>android:theme</strong>属性为我们自定义的主题。</p>
<p><code>AndroidManifest.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">manifest</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">package</span>=<span class="value">"info.androidhive.materialtabs"</span> &gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">application</span></span><br><span class="line">        <span class="attribute">android:allowBackup</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:icon</span>=<span class="value">"@mipmap/ic_launcher"</span></span><br><span class="line">        <span class="attribute">android:label</span>=<span class="value">"@string/app_name"</span></span><br><span class="line">        <span class="attribute">android:theme</span>=<span class="value">"@style/MyMaterialTheme"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">            <span class="attribute">android:name</span>=<span class="value">".activity.MainActivity"</span></span><br><span class="line">            <span class="attribute">android:label</span>=<span class="value">"@string/app_name"</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line">                <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>运行这个应用，通过通知栏的颜色来验证一下Material Design主题。如果你看到通知栏颜色改变了，这就意味着Material Design主题已经被成功使用。</p>
<p>图例</p>
<p>现在我们已经有了Material Design主题的应用，接下来让我们开始添加tabs。但是在这之前。我们需要创建一些fragment来协助测试，所有这些fragment只有非常简单的UI，一个TextView而已。</p>
<p><strong>8.</strong> 在你的包目录下，创建一个fragment，命名为<strong>OneFragment.java</strong>并添加以下代码：</p>
<p><code>OneFragment.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> info.androidhive.materialtabs.fragments;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> info.androidhive.materialtabs.R;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">OneFragment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Required empty public constructor</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span><br><span class="line">                             Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Inflate the layout for this fragment</span></span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_one, container, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>9.</strong> 在<strong>res ⇒ layout</strong>下添加<strong>fragment_one.xml</strong>，写入以下代码：</p>
<p><code>fragment_one.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">tools:context</span>=<span class="value">"info.androidhive.materialtabs.fragments.OneFragment"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"@string/one"</span></span><br><span class="line">        <span class="attribute">android:textSize</span>=<span class="value">"40dp"</span></span><br><span class="line">        <span class="attribute">android:textStyle</span>=<span class="value">"bold"</span></span><br><span class="line">        <span class="attribute">android:layout_centerInParent</span>=<span class="value">"true"</span>/&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>10.</strong> 同样的，创建一些其它的fragment，并且写入像<strong>OneFragment.java</strong>一样的代码，我已经创建好了<strong>TwoFragment.java</strong>, <strong>ThreeFragment.java</strong>, <strong>FourFragemnt.java</strong>一直到<strong>TenFragment.java</strong></p>
<h3 id="固定标签">固定标签</h3><p>当tabs是固定数目的时候，你可以使用这个方式。这些tabs固定在适当的位置。在design支持库中，一些新的元素像<strong>CoordinatorLayout</strong>、<strong>AppBarLayout</strong>、<strong>TabLayout</strong>等介绍了很多。我覆盖不到所有的情况，因为这不是本文的目的。</p>
<p><strong>11</strong>. 打开布局文件<strong>activity_main.xml</strong>并修改为一下代码：</p>
<p><code>app:tabMode</code> – 定义tab的形式，在这我们定义为<strong>fixed</strong></p>
<p><code>activity_main.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.CoordinatorLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.AppBarLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:theme</span>=<span class="value">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/toolbar"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"?attr/actionBarSize"</span></span><br><span class="line">            <span class="attribute">android:background</span>=<span class="value">"?attr/colorPrimary"</span></span><br><span class="line">            <span class="attribute">app:layout_scrollFlags</span>=<span class="value">"scroll|enterAlways"</span></span><br><span class="line">            <span class="attribute">app:popupTheme</span>=<span class="value">"@style/ThemeOverlay.AppCompat.Light"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.design.widget.TabLayout</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/tabs"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">app:tabMode</span>=<span class="value">"fixed"</span></span><br><span class="line">            <span class="attribute">app:tabGravity</span>=<span class="value">"fill"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v4.view.ViewPager</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/viewpager"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">app:layout_behavior</span>=<span class="value">"@string/appbar_scrolling_view_behavior"</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>12.</strong> 打开<strong>MainActivity.java</strong> 并作以下修改：</p>
<p><code>tabLayout.setupWithViewPager()</code> – 适配ViewPager给TabLayout</p>
<p><code>setupViewPager()</code> – 通过添加适当的fragment来设置tabs的数量和tab的名字</p>
<p><code>ViewPagerAdapter</code> – 自定义适配器类提供了ViewPager需要的额fragment</p>
<p><code>MainActivity.java</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> info.androidhive.materialtabs.activity;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.TabLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentPagerAdapter;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.view.ViewPager;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.Toolbar;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> info.androidhive.materialtabs.R;</span><br><span class="line"><span class="keyword">import</span> info.androidhive.materialtabs.fragments.OneFragment;</span><br><span class="line"><span class="keyword">import</span> info.androidhive.materialtabs.fragments.ThreeFragment;</span><br><span class="line"><span class="keyword">import</span> info.androidhive.materialtabs.fragments.TwoFragment;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Toolbar toolbar;</span><br><span class="line">    <span class="keyword">private</span> TabLayout tabLayout;</span><br><span class="line">    <span class="keyword">private</span> ViewPager viewPager;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"> </span><br><span class="line">        toolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line"> </span><br><span class="line">        getSupportActionBar().setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line"> </span><br><span class="line">        viewPager = (ViewPager) findViewById(R.id.viewpager);</span><br><span class="line">        setupViewPager(viewPager);</span><br><span class="line"> </span><br><span class="line">        tabLayout = (TabLayout) findViewById(R.id.tabs);</span><br><span class="line">        tabLayout.setupWithViewPager(viewPager);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setupViewPager</span><span class="params">(ViewPager viewPager)</span> </span>&#123;</span><br><span class="line">        ViewPagerAdapter adapter = <span class="keyword">new</span> ViewPagerAdapter(getSupportFragmentManager());</span><br><span class="line">        adapter.addFragment(<span class="keyword">new</span> OneFragment(), <span class="string">"ONE"</span>);</span><br><span class="line">        adapter.addFragment(<span class="keyword">new</span> TwoFragment(), <span class="string">"TWO"</span>);</span><br><span class="line">        adapter.addFragment(<span class="keyword">new</span> ThreeFragment(), <span class="string">"THREE"</span>);</span><br><span class="line">        viewPager.setAdapter(adapter);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title">FragmentPagerAdapter</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> List&lt;Fragment&gt; mFragmentList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> List&lt;String&gt; mFragmentTitleList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewPagerAdapter</span><span class="params">(FragmentManager manager)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(manager);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Fragment <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mFragmentList.get(position);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mFragmentList.size();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFragment</span><span class="params">(Fragment fragment, String title)</span> </span>&#123;</span><br><span class="line">            mFragmentList.add(fragment);</span><br><span class="line">            mFragmentTitleList.add(title);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> CharSequence <span class="title">getPageTitle</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mFragmentTitleList.get(position);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>现在运行这个应用，你应该能看到tabs已经显示，并且能够通过滑动在他们之间切换。</p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-material-design-tab-layout.png" alt="swipe"></p>
<p><strong>2.1</strong> 屏幕宽度的标签<br>如果你想要标签栏占据整个屏幕的宽度，你需要给TabLayout设置 <strong>app:tabGravity=”fill”</strong>属性。</p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-tab-layout-landscape-view.png" alt="full"></p>
<p><strong>2.2</strong> 中心对齐的标签<br>如果你想要你的标签按照水平居中的形式来显示，你需要给TabLayout设置<strong>app:tabGravity=”center”</strong>的属性。</p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-tab-layout-gravity-center.png" alt="full"></p>
<h3 id="滚动标签">滚动标签</h3><p>当你有很多标签时，并且一个屏幕的空间放不下的时候，你可以使用滑动标签。标签可以滚动，给TabLayout设置<strong>app:tabMode=”scrollable”</strong>即可。</p>
<p><strong>13.</strong> 打开<strong>activity_main.xml</strong>并且修改<strong>app:tabMode</strong>为<strong>scrollable</strong>。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.TabLayout</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/tabs"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">app:tabMode</span>=<span class="value">"scrollable"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>14.</strong> 编辑<strong>MainActivity.java</strong>并且添加一些fragment到ViewPager通过<strong>setupViewPager()</strong>方法。我已经添加了10个fragment，这样做之后，你的MainActivity应该像下面这样。</p>
<p><code>MainActivity.java</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> info.androidhive.materialtabs.activity;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.TabLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentPagerAdapter;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.view.ViewPager;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.Toolbar;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Toolbar toolbar;</span><br><span class="line">    <span class="keyword">private</span> TabLayout tabLayout;</span><br><span class="line">    <span class="keyword">private</span> ViewPager viewPager;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"> </span><br><span class="line">        toolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line">        getSupportActionBar().setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line"> </span><br><span class="line">        viewPager = (ViewPager) findViewById(R.id.viewpager);</span><br><span class="line">        setupViewPager(viewPager);</span><br><span class="line"> </span><br><span class="line">        tabLayout = (TabLayout) findViewById(R.id.tabs);</span><br><span class="line">        tabLayout.setupWithViewPager(viewPager);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setupViewPager</span><span class="params">(ViewPager viewPager)</span> </span>&#123;</span><br><span class="line">        ViewPagerAdapter adapter = <span class="keyword">new</span> ViewPagerAdapter(getSupportFragmentManager());</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> OneFragment(), <span class="string">"ONE"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> TwoFragment(), <span class="string">"TWO"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> ThreeFragment(), <span class="string">"THREE"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> FourFragment(), <span class="string">"FOUR"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> FiveFragment(), <span class="string">"FIVE"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> SixFragment(), <span class="string">"SIX"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> SevenFragment(), <span class="string">"SEVEN"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> EightFragment(), <span class="string">"EIGHT"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> NineFragment(), <span class="string">"NINE"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> TenFragment(), <span class="string">"TEN"</span>);</span><br><span class="line">        viewPager.setAdapter(adapter);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title">FragmentPagerAdapter</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> List&lt;Fragment&gt; mFragmentList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> List&lt;String&gt; mFragmentTitleList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewPagerAdapter</span><span class="params">(FragmentManager manager)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(manager);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Fragment <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mFragmentList.get(position);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mFragmentList.size();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFrag</span><span class="params">(Fragment fragment, String title)</span> </span>&#123;</span><br><span class="line">            mFragmentList.add(fragment);</span><br><span class="line">            mFragmentTitleList.add(title);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> CharSequence <span class="title">getPageTitle</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mFragmentTitleList.get(position);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>现在如果你再运行你的应用，你就可以看到很多tabs，而且具有欢动功能。 </p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-scrollable-tab-layout.png" alt="layout"><br><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-scrollable-tab-layout-horizontal.png" alt="horizontal"></p>
<h3 id="图文标签">图文标签</h3><p>有时候你可能想要给标签添加图标。此前给标签添加图标是非常繁琐的过程，但是现在有了Material Design支持库，这就变得很容易了。所以你必须要做的就是调用<strong>setIcon()</strong>方法来设置适当的图标，这个图标就可以显示在标签文字前面了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tabLayout.getTabAt(<span class="number">0</span>).setIcon(tabIcons[<span class="number">0</span>]);</span><br><span class="line">tabLayout.getTabAt(<span class="number">1</span>).setIcon(tabIcons[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure>
<p><strong>15.</strong> 打开<strong>MainActivity.java</strong>并且按照下面来修改代码。在这里我已经添加了一个新的方法<strong>setupTabIcons()</strong>来设置标签的图标。</p>
<p><code>MainActivity.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.TabLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentPagerAdapter;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.view.ViewPager;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.Toolbar;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Toolbar toolbar;</span><br><span class="line">    <span class="keyword">private</span> TabLayout tabLayout;</span><br><span class="line">    <span class="keyword">private</span> ViewPager viewPager;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] tabIcons = &#123;</span><br><span class="line">            R.drawable.ic_tab_favourite,</span><br><span class="line">            R.drawable.ic_tab_call,</span><br><span class="line">            R.drawable.ic_tab_contacts</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"> </span><br><span class="line">        toolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line">        getSupportActionBar().setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line"> </span><br><span class="line">        viewPager = (ViewPager) findViewById(R.id.viewpager);</span><br><span class="line">        setupViewPager(viewPager);</span><br><span class="line"> </span><br><span class="line">        tabLayout = (TabLayout) findViewById(R.id.tabs);</span><br><span class="line">        tabLayout.setupWithViewPager(viewPager);</span><br><span class="line">        setupTabIcons();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setupTabIcons</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tabLayout.getTabAt(<span class="number">0</span>).setIcon(tabIcons[<span class="number">0</span>]);</span><br><span class="line">        tabLayout.getTabAt(<span class="number">1</span>).setIcon(tabIcons[<span class="number">1</span>]);</span><br><span class="line">        tabLayout.getTabAt(<span class="number">2</span>).setIcon(tabIcons[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setupViewPager</span><span class="params">(ViewPager viewPager)</span> </span>&#123;</span><br><span class="line">        ViewPagerAdapter adapter = <span class="keyword">new</span> ViewPagerAdapter(getSupportFragmentManager());</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> OneFragment(), <span class="string">"ONE"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> TwoFragment(), <span class="string">"TWO"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> ThreeFragment(), <span class="string">"THREE"</span>);</span><br><span class="line">        viewPager.setAdapter(adapter);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title">FragmentPagerAdapter</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> List&lt;Fragment&gt; mFragmentList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> List&lt;String&gt; mFragmentTitleList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewPagerAdapter</span><span class="params">(FragmentManager manager)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(manager);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Fragment <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mFragmentList.get(position);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mFragmentList.size();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFrag</span><span class="params">(Fragment fragment, String title)</span> </span>&#123;</span><br><span class="line">            mFragmentList.add(fragment);</span><br><span class="line">            mFragmentTitleList.add(title);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> CharSequence <span class="title">getPageTitle</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mFragmentTitleList.get(position);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-tab-layout-with-icon-and-text.png" alt="android-tab-layout-with-icon-and-text"></p>
<h3 id="图标标签">图标标签</h3><p>仅仅设置图标的选项卡是和图文的选项卡是一样的，只是ViewPagerAdapter类的<strong>getPageTitle()</strong>方法返回值为null即可。</p>
<p><strong>16.</strong> 打开<strong>MainActivity.java</strong>并按照下面的代码修改<strong>getPageTitle()</strong>方法，接着运行项目。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> CharSequence <span class="title">getPageTitle</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// return null to display only the icon</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-tab-layout-with-only-icons.png" alt="android-tab-layout-with-only-icons"></p>
<h3 id="自定义图文选项卡">自定义图文选项卡</h3><p>当默认的选项卡布局不能达到你预期的输出效果时，自定义选项卡就非常实用了。在你自定义选项卡试图的时候，请务必遵循Android选项卡的规范建议。</p>
<p>当我们设置了图文选项卡时，你能够看到图标和文字是水平居中的，但是如果你想要放置图标在选项卡标签之上，你就必须使用一个自定义的view来完成它。</p>
<p><strong>17.</strong> 在<strong>res ⇒ values</strong>下面,创建<strong>fonts.xml</strong>文件，并且添加以下字符串值。这个xml文件定义了选项卡中文字所使用的字体。</p>
<p><code>fonts.xml</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"font_fontFamily_medium"</span>&gt;</span>sans-serif<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>18.</strong> 在<strong>res ⇒ values-v21下面，创建另一个</strong>fonts.xml**文件。</p>
<p><code>fonts.xml</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"font_fontFamily_medium"</span>&gt;</span>sans-serif-medium<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>19.</strong> 打开<strong>activity_main.xml</strong>并且给TabLayout设置自定义的高度。设置这个高度显得非常重要，因为在选项卡标签上面放置图标需要更多的空间。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.TabLayout</span></span><br><span class="line">           <span class="attribute">android:id</span>=<span class="value">"@+id/tabs"</span></span><br><span class="line">           <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">           <span class="attribute">android:layout_height</span>=<span class="value">"@dimen/custom_tab_layout_height"</span></span><br><span class="line">           <span class="attribute">app:tabMode</span>=<span class="value">"fixed"</span></span><br><span class="line">           <span class="attribute">app:tabGravity</span>=<span class="value">"fill"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>20.</strong> 在<strong>res ⇒ layout</strong>下新建的一个xml文件<strong>custom_tab.xml</strong>，这个文件是用来自定义选项卡布局的。</p>
<p><code>custom_tab.xml</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/tab"</span></span><br><span class="line">    <span class="attribute">android:textColor</span>=<span class="value">"@color/colorAccent"</span></span><br><span class="line">    <span class="attribute">android:textSize</span>=<span class="value">"@dimen/tab_label"</span></span><br><span class="line">    <span class="attribute">android:fontFamily</span>=<span class="value">"@string/font_fontFamily_medium"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>21.</strong> 打开<strong>MainActivity.java</strong>并按照下面的代码做修改。这里你是否注意到setupTabIcon()方法。下面的代码中我已经给每一个选项卡使用了custom_tab.xml布局，。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TextView tabOne = (TextView) LayoutInflater.from(<span class="keyword">this</span>).inflate(R.layout.custom_tab, <span class="keyword">null</span>);</span><br><span class="line">tabOne.setText(<span class="string">"ONE"</span>);</span><br><span class="line">tabOne.setCompoundDrawablesWithIntrinsicBounds(<span class="number">0</span>, R.drawable.ic_tab_favourite, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">tabLayout.getTabAt(<span class="number">0</span>).setCustomView(tabOne);</span><br></pre></td></tr></table></figure>
<p><code>MainActivity.java</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.TabLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentPagerAdapter;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.view.ViewPager;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.Toolbar;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> info.androidhive.materialtabs.R;</span><br><span class="line"><span class="keyword">import</span> info.androidhive.materialtabs.fragments.OneFragment;</span><br><span class="line"><span class="keyword">import</span> info.androidhive.materialtabs.fragments.ThreeFragment;</span><br><span class="line"><span class="keyword">import</span> info.androidhive.materialtabs.fragments.TwoFragment;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Toolbar toolbar;</span><br><span class="line">    <span class="keyword">private</span> TabLayout tabLayout;</span><br><span class="line">    <span class="keyword">private</span> ViewPager viewPager;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] tabIcons = &#123;</span><br><span class="line">            R.drawable.ic_tab_favourite,</span><br><span class="line">            R.drawable.ic_tab_call,</span><br><span class="line">            R.drawable.ic_tab_contacts</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"> </span><br><span class="line">        toolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line">        getSupportActionBar().setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line"> </span><br><span class="line">        viewPager = (ViewPager) findViewById(R.id.viewpager);</span><br><span class="line">        setupViewPager(viewPager);</span><br><span class="line"> </span><br><span class="line">        tabLayout = (TabLayout) findViewById(R.id.tabs);</span><br><span class="line">        tabLayout.setupWithViewPager(viewPager);</span><br><span class="line">        setupTabIcons();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setupTabIcons</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">        TextView tabOne = (TextView) LayoutInflater.from(<span class="keyword">this</span>).inflate(R.layout.custom_tab, <span class="keyword">null</span>);</span><br><span class="line">        tabOne.setText(<span class="string">"ONE"</span>);</span><br><span class="line">        tabOne.setCompoundDrawablesWithIntrinsicBounds(<span class="number">0</span>, R.drawable.ic_tab_favourite, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        tabLayout.getTabAt(<span class="number">0</span>).setCustomView(tabOne);</span><br><span class="line"> </span><br><span class="line">        TextView tabTwo = (TextView) LayoutInflater.from(<span class="keyword">this</span>).inflate(R.layout.custom_tab, <span class="keyword">null</span>);</span><br><span class="line">        tabTwo.setText(<span class="string">"TWO"</span>);</span><br><span class="line">        tabTwo.setCompoundDrawablesWithIntrinsicBounds(<span class="number">0</span>, R.drawable.ic_tab_call, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        tabLayout.getTabAt(<span class="number">1</span>).setCustomView(tabTwo);</span><br><span class="line"> </span><br><span class="line">        TextView tabThree = (TextView) LayoutInflater.from(<span class="keyword">this</span>).inflate(R.layout.custom_tab, <span class="keyword">null</span>);</span><br><span class="line">        tabThree.setText(<span class="string">"THREE"</span>);</span><br><span class="line">        tabThree.setCompoundDrawablesWithIntrinsicBounds(<span class="number">0</span>, R.drawable.ic_tab_contacts, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        tabLayout.getTabAt(<span class="number">2</span>).setCustomView(tabThree);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setupViewPager</span><span class="params">(ViewPager viewPager)</span> </span>&#123;</span><br><span class="line">        ViewPagerAdapter adapter = <span class="keyword">new</span> ViewPagerAdapter(getSupportFragmentManager());</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> OneFragment(), <span class="string">"ONE"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> TwoFragment(), <span class="string">"TWO"</span>);</span><br><span class="line">        adapter.addFrag(<span class="keyword">new</span> ThreeFragment(), <span class="string">"THREE"</span>);</span><br><span class="line">        viewPager.setAdapter(adapter);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title">FragmentPagerAdapter</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> List&lt;Fragment&gt; mFragmentList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> List&lt;String&gt; mFragmentTitleList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewPagerAdapter</span><span class="params">(FragmentManager manager)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(manager);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Fragment <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mFragmentList.get(position);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mFragmentList.size();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFrag</span><span class="params">(Fragment fragment, String title)</span> </span>&#123;</span><br><span class="line">            mFragmentList.add(fragment);</span><br><span class="line">            mFragmentTitleList.add(title);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> CharSequence <span class="title">getPageTitle</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mFragmentTitleList.get(position);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>现在如果你运行这个程序，你就能看到图标被放置在选项卡标签的上面了。</p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-tab-layout-with-custom-view-icon-and-text.png" alt="android-tab-layout-with-custom-view-icon-and-text"></p>
<p>我希望这篇文章对于Material Design支持库的使用，提供了一些非常有用的信息，如果你有任何问题，请在下面回复。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>原作者：Ravi Tamada<br>原文地址：<a href="http://www.androidhive.info/2015/09/android-material-design-working-with-tabs/" target="_bl]]>
    </summary>
    
      <category term="Material Design" scheme="http://xiaofeng.site/tags/Material-Design/"/>
    
      <category term="TabLayout" scheme="http://xiaofeng.site/tags/TabLayout/"/>
    
      <category term="Android" scheme="http://xiaofeng.site/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Material Design - Snackbar]]></title>
    <link href="http://xiaofeng.site/2015/12/24/Android-Material-Design-Snackbar/undefined/"/>
    <id>http://xiaofeng.site/2015/12/24/Android-Material-Design-Snackbar/undefined/</id>
    <published>2015-12-24T08:49:57.000Z</published>
    <updated>2015-12-30T07:43:46.031Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原作者：Ravi Tamada<br>原文地址：<a href="http://www.androidhive.info/2015/09/android-material-design-snackbar-example/" target="_blank" rel="external">http://www.androidhive.info/…example/</a></p>
</blockquote>
<p>Material Design中一个有趣的组件介绍就是<strong><a href="https://www.google.co.in/design/spec/components/snackbars-toasts.html" target="_blank" rel="external">Snackbar</a></strong>。Snackbar就像<strong>Toast</strong>消息，只是它提供了动作交互。Snackbar在屏幕底部显示，并且可以滑动关闭。</p>
<p>这篇文章讲述的是关于Snackbar和一些不同场景下的例子。</p>
<h4 id="源码下载">源码下载</h4><p><a href="http://download.androidhive.info/" target="_blank" rel="external">戳我下载</a></p>
<h4 id="1-简单的Snackbar">1.简单的Snackbar</h4><p>下面是一个简单的Snackbar语法。<strong>make</strong>方法接收三个参数：View、显示的信息、消息显示的持续时间。</p>
<p>通常传递 <strong>CoordinatorLayout</strong> 作为view参数是最好的选择，因为它允许Snackbar一些特性，像滑动取消、像FloatingActionButton控件的自动移动。</p>
<p>并且显示的持续时间应该是<strong>LENGTH_SHORT</strong>, <strong>LENGTH_LONG</strong>或者<strong>LENGTH_INDEFINITE</strong>。当<strong>LENGTH_INDEFINITE</strong>被使用时，snackbar显示的时间将是不确定的，而且可以滑动删除。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Snackbar snackbar = Snackbar</span><br><span class="line">        .make(coordinatorLayout, <span class="string">"Welcome to AndroidHive"</span>, Snackbar.LENGTH_LONG);</span><br><span class="line"> </span><br><span class="line">snackbar.show();</span><br></pre></td></tr></table></figure>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-snackbar-example.png" alt="example"></p>
<h4 id="2-Snackbar与动作回调">2.Snackbar与动作回调</h4><p>你也可以使用一个回调方法<em>setAction()</em>，使得它可以和我们有一些动作交互。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Snackbar snackbar = Snackbar</span><br><span class="line">        .make(coordinatorLayout, <span class="string">"Message is deleted"</span>, Snackbar.LENGTH_LONG)</span><br><span class="line">        .setAction(<span class="string">"UNDO"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Snackbar snackbar1 = Snackbar.make(coordinatorLayout, <span class="string">"Message is restored!"</span>, Snackbar.LENGTH_SHORT);</span><br><span class="line">                snackbar1.show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">snackbar.show();</span><br></pre></td></tr></table></figure>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-snackbar-with-action-callback-undo.png" alt="example"></p>
<h4 id="3-自定义Snackbar">3.自定义Snackbar</h4><p>Snackbar默认文字颜色 <strong>white</strong>、默认背景是 <strong>#323232</strong>。你可以按照下面的方式修改：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Snackbar snackbar = Snackbar</span><br><span class="line">        .make(coordinatorLayout, <span class="string">"No internet connection!"</span>, Snackbar.LENGTH_LONG)</span><br><span class="line">        .setAction(<span class="string">"RETRY"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Changing message text color</span></span><br><span class="line">snackbar.setActionTextColor(Color.RED);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Changing action button text color</span></span><br><span class="line">View sbView = snackbar.getView();</span><br><span class="line">TextView textView = (TextView) sbView.findViewById(android.support.design.R.id.snackbar_text);</span><br><span class="line">textView.setTextColor(Color.YELLOW);</span><br><span class="line">snackbar.show();</span><br></pre></td></tr></table></figure></p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-snackbar-custom-color-view-text-color.png" alt="example"></p>
<h4 id="4-创建新项目">4.创建新项目</h4><p>现在我们创建一个demo来看看Snackbar动作，而且应用用<strong>CoordinatorLayout </strong>和<strong>FloatingActionButton</strong>。</p>
<p>1.在Android Studio中，执行<strong>File =&gt; New Project</strong>，然后填上所有的信息来创建一个新工程。</p>
<p>2.打开<strong>Build.gradle</strong>然后添加库的依赖<br><code>build.gradle</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="function">compile <span class="title">fileTree</span><span class="params">(dir: <span class="string">'libs'</span>, include: [<span class="string">'*.jar'</span>])</span></span><br><span class="line">    compile 'com.android.support:appcompat-v7:23.0.1'</span><br><span class="line">    compile 'com.android.support:design:23.0.1'</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>3.可选项，你可以应用<strong>material design</strong>的主题，通过<a href="http://tips.androidhive.info/2015/09/android-how-to-apply-material-design-theme/" target="_blank" rel="external">这里</a>的步骤。</p>
<p>4.打开布局文件，然后我添加了以下代码，是包含<strong>CoordinatorLayout</strong>、<strong>FloatingActionButton</strong>。</p>
<p><code>activity_main.xml</code><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"</span><br><span class="line">    xmlns:app="http://schemas.android.com/apk/res-auto"</span><br><span class="line">    xmlns:tools="http://schemas.android.com/tools"</span><br><span class="line">    android:id="@+id/coordinatorLayout"</span><br><span class="line">    android:layout_width="match_parent"</span><br><span class="line">    android:layout_height="match_parent"</span><br><span class="line">    tools:context=".MainActivity"&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;android.support.design.widget.AppBarLayout</span><br><span class="line">        android:layout_width="match_parent"</span><br><span class="line">        android:layout_height="wrap_content"</span><br><span class="line">        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"&gt;</span><br><span class="line"> </span><br><span class="line">        &lt;android.support.v7.widget.Toolbar</span><br><span class="line">            android:id="@+id/toolbar"</span><br><span class="line">            android:layout_width="match_parent"</span><br><span class="line">            android:layout_height="?attr/actionBarSize"</span><br><span class="line">            android:background="?attr/colorPrimary"</span><br><span class="line">            app:layout_scrollFlags="scroll|enterAlways"</span><br><span class="line">            app:popupTheme="@style/ThemeOverlay.AppCompat.Light" /&gt;</span><br><span class="line">    &lt;/android.support.design.widget.AppBarLayout&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width="fill_parent"</span><br><span class="line">        android:layout_height="wrap_content"</span><br><span class="line">        android:orientation="vertical"</span><br><span class="line">        android:paddingLeft="20dp"</span><br><span class="line">        android:paddingRight="20dp"</span><br><span class="line">        app:layout_behavior="@string/appbar_scrolling_view_behavior"&gt;</span><br><span class="line"> </span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id="@+id/btnSimpleSnackbar"</span><br><span class="line">            android:layout_width="fill_parent"</span><br><span class="line">            android:layout_height="wrap_content"</span><br><span class="line">            android:layout_marginTop="30dp"</span><br><span class="line">            android:text="Simple Snackbar" /&gt;</span><br><span class="line"> </span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id="@+id/btnActionCallback"</span><br><span class="line">            android:layout_width="fill_parent"</span><br><span class="line">            android:layout_height="wrap_content"</span><br><span class="line">            android:layout_marginTop="10dp"</span><br><span class="line">            android:text="With Action Callback" /&gt;</span><br><span class="line"> </span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id="@+id/btnCustomSnackbar"</span><br><span class="line">            android:layout_width="fill_parent"</span><br><span class="line">            android:layout_height="wrap_content"</span><br><span class="line">            android:layout_marginTop="10dp"</span><br><span class="line">            android:text="Custom Color" /&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;android.support.design.widget.FloatingActionButton</span><br><span class="line">        android:id="@+id/fab"</span><br><span class="line">        android:layout_width="wrap_content"</span><br><span class="line">        android:layout_height="wrap_content"</span><br><span class="line">        android:layout_gravity="end|bottom"</span><br><span class="line">        android:layout_margin="16dp"</span><br><span class="line">        android:src="@android:drawable/ic_dialog_email" /&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/android.support.design.widget.CoordinatorLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>5.现在打开<strong>MainActivity.java</strong>然后按照下面的修改，这个activity包含了三个按钮及点击事件，实现了上面提到的不同样式的Snackbar。</p>
<p><code>MainActivity.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.CoordinatorLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.FloatingActionButton;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.Snackbar;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.Toolbar;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Toolbar mToolbar;</span><br><span class="line">    <span class="keyword">private</span> CoordinatorLayout coordinatorLayout;</span><br><span class="line">    <span class="keyword">private</span> Button btnSimpleSnackbar, btnActionCallback, btnCustomView;</span><br><span class="line">    <span class="keyword">private</span> FloatingActionButton fab;</span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"> </span><br><span class="line">        coordinatorLayout = (CoordinatorLayout) findViewById(R.id</span><br><span class="line">                .coordinatorLayout);</span><br><span class="line"> </span><br><span class="line">        fab = (FloatingActionButton) findViewById(R.id.fab);</span><br><span class="line"> </span><br><span class="line">        mToolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line"> </span><br><span class="line">        setSupportActionBar(mToolbar);</span><br><span class="line"> </span><br><span class="line">        btnSimpleSnackbar = (Button) findViewById(R.id.btnSimpleSnackbar);</span><br><span class="line">        btnActionCallback = (Button) findViewById(R.id.btnActionCallback);</span><br><span class="line">        btnCustomView = (Button) findViewById(R.id.btnCustomSnackbar);</span><br><span class="line"> </span><br><span class="line">        btnSimpleSnackbar.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Snackbar snackbar = Snackbar</span><br><span class="line">                        .make(coordinatorLayout, <span class="string">"Welcome to AndroidHive"</span>, Snackbar.LENGTH_LONG);</span><br><span class="line"> </span><br><span class="line">                snackbar.show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">        btnActionCallback.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Snackbar snackbar = Snackbar</span><br><span class="line">                        .make(coordinatorLayout, <span class="string">"Message is deleted"</span>, Snackbar.LENGTH_LONG)</span><br><span class="line">                        .setAction(<span class="string">"UNDO"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">                            <span class="annotation">@Override</span></span><br><span class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                                Snackbar snackbar1 = Snackbar.make(coordinatorLayout, <span class="string">"Message is restored!"</span>, Snackbar.LENGTH_SHORT);</span><br><span class="line">                                snackbar1.show();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line"> </span><br><span class="line">                snackbar.show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">        btnCustomView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Snackbar snackbar = Snackbar</span><br><span class="line">                        .make(coordinatorLayout, <span class="string">"No internet connection!"</span>, Snackbar.LENGTH_LONG)</span><br><span class="line">                        .setAction(<span class="string">"RETRY"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">                            <span class="annotation">@Override</span></span><br><span class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line"> </span><br><span class="line">                <span class="comment">// Changing message text color</span></span><br><span class="line">                snackbar.setActionTextColor(Color.RED);</span><br><span class="line"> </span><br><span class="line">                <span class="comment">// Changing action button text color</span></span><br><span class="line">                View sbView = snackbar.getView();</span><br><span class="line">                TextView textView = (TextView) sbView.findViewById(android.support.design.R.id.snackbar_text);</span><br><span class="line">                textView.setTextColor(Color.YELLOW);</span><br><span class="line"> </span><br><span class="line">                snackbar.show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>6.运行这个项目，可以测试这几种效果。</p>
<p><img src="http://www.androidhive.info/wp-content/uploads/2015/09/android-material-design-snackbar-example.png" alt="example"></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>原作者：Ravi Tamada<br>原文地址：<a href="http://www.androidhive.info/2015/09/android-material-design-snackbar-example/" target="_bla]]>
    </summary>
    
      <category term="Material Design" scheme="http://xiaofeng.site/tags/Material-Design/"/>
    
      <category term="Snackbar" scheme="http://xiaofeng.site/tags/Snackbar/"/>
    
      <category term="Android" scheme="http://xiaofeng.site/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Parcelable vs Serializable]]></title>
    <link href="http://xiaofeng.site/2015/12/24/Parcelable-vs-Serializable/undefined/"/>
    <id>http://xiaofeng.site/2015/12/24/Parcelable-vs-Serializable/undefined/</id>
    <published>2015-12-24T07:49:15.000Z</published>
    <updated>2015-12-24T08:30:54.760Z</updated>
    <content type="html"><![CDATA[<h4 id="序论">序论</h4><p>在Android中，我们需要传递对象的引用在activity和fragment之间，因此我们不得不放在Intent/Bundle中。</p>
<p>通过api我们了解到有两种选择，可以使用对象的<strong><a href="http://developer.android.com/intl/zh-cn/reference/android/os/Parcelable.html" target="_blank" rel="external">Parcelable</a></strong>或者<strong><a href="https://developer.android.com/intl/zh-cn/reference/java/io/Serializable.html" target="_blank" rel="external">Serializable</a></strong>形式，作为Java的开发者，我们已经知道Serializable机制，那么为什么还有Parcelable？</p>
<p>要回答这个问题，先让我们看看这两个方法。</p>
<h4 id="Serializable，简单之主"><strong>Serializable</strong>，简单之主</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// access modifiers, accessors and constructors omitted for brevity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SerializableDeveloper</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span><br><span class="line">    <span class="title">String</span> <span class="title">name</span></span>;</span><br><span class="line">    <span class="keyword">int</span> yearsOfExperience;</span><br><span class="line">    List&lt;Skill&gt; skillSet;</span><br><span class="line">    <span class="keyword">float</span> favoriteFloat;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Skill</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">        String name;</span><br><span class="line">        <span class="keyword">boolean</span> programmingRelated;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Serializable的美在于你只需要将类和他的子类实现Serializable接口，这是一个标记接口，意味着没有方法来实现，Java可以简单有效的实现它的序列化。</p>
<p>这个方法的问题是，他使用到了反射，并且它是一个缓慢的进程。正是这个机制，创造了大量的临时对象，并且造成大量的gc。</p>
<h4 id="Parcelable,_速度之王"><strong>Parcelable</strong>, 速度之王</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// access modifiers, accessors and regular constructors ommited for brevity</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ParcelableDeveloper</span> <span class="keyword">implements</span> <span class="title">Parcelable</span> </span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> yearsOfExperience;</span><br><span class="line">    List&lt;Skill&gt; skillSet;</span><br><span class="line">    <span class="keyword">float</span> favoriteFloat;</span><br><span class="line"></span><br><span class="line">    ParcelableDeveloper(Parcel in) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = in.readString();</span><br><span class="line">        <span class="keyword">this</span>.yearsOfExperience = in.readInt();</span><br><span class="line">        <span class="keyword">this</span>.skillSet = <span class="keyword">new</span> ArrayList&lt;Skill&gt;();</span><br><span class="line">        in.readTypedList(skillSet, Skill.CREATOR);</span><br><span class="line">        <span class="keyword">this</span>.favoriteFloat = in.readFloat();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel dest, <span class="keyword">int</span> flags)</span> </span>&#123;</span><br><span class="line">        dest.writeString(name);</span><br><span class="line">        dest.writeInt(yearsOfExperience);</span><br><span class="line">        dest.writeTypedList(skillSet);</span><br><span class="line">        dest.writeFloat(favoriteFloat);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">describeContents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> Parcelable.Creator&lt;ParcelableDeveloper&gt; CREATOR</span><br><span class="line">            = <span class="keyword">new</span> Parcelable.Creator&lt;ParcelableDeveloper&gt;() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="function">ParcelableDeveloper <span class="title">createFromParcel</span><span class="params">(Parcel in)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ParcelableDeveloper(in);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ParcelableDeveloper[] newArray(<span class="keyword">int</span> size) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ParcelableDeveloper[size];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Skill</span> <span class="keyword">implements</span> <span class="title">Parcelable</span> </span>&#123;</span><br><span class="line">        String name;</span><br><span class="line">        <span class="keyword">boolean</span> programmingRelated;</span><br><span class="line"></span><br><span class="line">        Skill(Parcel in) &#123;</span><br><span class="line">            <span class="keyword">this</span>.name = in.readString();</span><br><span class="line">            <span class="keyword">this</span>.programmingRelated = (in.readInt() == <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel dest, <span class="keyword">int</span> flags)</span> </span>&#123;</span><br><span class="line">            dest.writeString(name);</span><br><span class="line">            dest.writeInt(programmingRelated ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> Parcelable.Creator&lt;Skill&gt; CREATOR</span><br><span class="line">            = <span class="keyword">new</span> Parcelable.Creator&lt;Skill&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="function">Skill <span class="title">createFromParcel</span><span class="params">(Parcel in)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Skill(in);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Skill[] newArray(<span class="keyword">int</span> size) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Skill[size];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">describeContents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>根据<strong><a href="http://stackoverflow.com/questions/3611843/is-using-serializable-in-android-bad/3612364#3612364" target="_blank" rel="external">google engineers</a></strong>，这段代码明显运行的很快。其中一个原因就是，我们明确实例化的进程，而不是使用反射来推断它。支撑他的另一个原因就是，它也为此目的做了大量的优化。</p>
<p>无论怎样，可以明显的看出实现Parcelable不是免费的，他会有大量的样板代码，并且是类很难阅读和维护。</p>
<h4 id="速度测试">速度测试</h4><p>当然，我们想要知道Parcelable有多快。</p>
<h4 id="方法论">方法论</h4><ul>
<li>1.模拟传递对象给activity的过程，通过将一个对象放入bundle并调用<strong><a href="https://developer.android.com/intl/zh-cn/reference/android/os/Bundle.html#writeToParcel(android.os.Parcel, int" target="_blank" rel="external">Bundle#writeToParcel(Parcel,int)</a></strong>，然后取出来。</li>
<li>2.循环执行1000次</li>
<li>3.取10次独立运行的内存占用平均值，其他应用使用这个cpu</li>
<li>4.被测试对象是上面展示的SerializableDeveloper和ParcelableDeveloper</li>
<li>5.在多个设备上测试 - android版本<ul>
<li>LG Nexus 4 - Android 4.2.2 </li>
<li>Samsung Nexus 10 - Android 4.2.2</li>
<li>HTC Desire Z - Android 2.3.3</li>
</ul>
</li>
</ul>
<h4 id="结果">结果</h4><p><img src="http://www.developerphil.com/assets/parcelable-vs-serializable-e1366334109758.png" alt="result"><br><strong>Nexus 10</strong></p>
<p>Serializable: 1.0004ms,  Parcelable: 0.0850ms - 10.16x improvement.</p>
<p><strong>Nexus 4</strong></p>
<p>Serializable: 1.8539ms - Parcelable: 0.1824ms - 11.80x improvement.</p>
<p><strong>Desire Z</strong></p>
<p>Serializable: 5.1224ms - Parcelable: 0.2938ms - 17.36x improvement.</p>
<p>想必你已经知道了，Parcelable比Serializable快了10倍。</p>
<h4 id="本质">本质</h4><p>如果你想要成为一个好公民，那就花费更多的时间来实现<strong><a href="http://developer.android.com/intl/zh-cn/reference/android/os/Parcelable.html" target="_blank" rel="external">Parcelable</a></strong>，因为这将快10倍的速度，而且占用更少的资源。</p>
<p>然而，在大部分情况下，<strong><a href="https://developer.android.com/intl/zh-cn/reference/java/io/Serializable.html" target="_blank" rel="external">Serializable</a></strong>的慢并不是很明显，你可以随意使用它，但是记住，序列化是一个昂贵的操作，它将保持在一个低速状态。</p>
<p>如果你正在传递上千的序列化对象队列，整个过程很有可能超过了一秒钟，它可以使转换或旋转从纵向到横向感到十分缓慢。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="序论">序论</h4><p>在Android中，我们需要传递对象的引用在activity和fragment之间，因此我们不得不放在Intent/Bundle中。</p>
<p>通过api我们了解到有两种选择，可以使用对象的<strong><a href="http]]>
    </summary>
    
      <category term="Parcelable" scheme="http://xiaofeng.site/tags/Parcelable/"/>
    
      <category term="Serializable" scheme="http://xiaofeng.site/tags/Serializable/"/>
    
      <category term="序列化" scheme="http://xiaofeng.site/tags/%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
      <category term="Complex" scheme="http://xiaofeng.site/categories/Complex/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio Tips of the Day(2)]]></title>
    <link href="http://xiaofeng.site/2015/12/23/Android-Studio-Tips-of-the-Day(2)/undefined/"/>
    <id>http://xiaofeng.site/2015/12/23/Android-Studio-Tips-of-the-Day(2)/undefined/</id>
    <published>2015-12-23T06:22:27.000Z</published>
    <updated>2016-03-01T03:25:55.330Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原作者：Philippe Breault<br>原文地址：<a href="http://www.developerphil.com/android-studio-tips-of-the-day-roundup-2/" target="_blank" rel="external">http://www.developerphil.com/…the-day-roundup-2/</a></p>
</blockquote>
<h4 id="关于快捷键">关于快捷键</h4><p>Android Studio 提供了不同的按键对应关系(在快捷键和动作之间的映射).你能看到你正在使用的案件映射，通过<em>Settings-&gt;KeyMap.</em></p>
<h4 id="1-重复的行">1.重复的行</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cmd+d</td>
<td style="text-align:left">ctrl+d</td>
</tr>
</tbody>
</table>
<p>它可以复制当前行并且粘贴它到下一行,不会影响剪切板的内容。</p>
<p><img src="http://www.developerphil.com/assets/11-duplicate_lines.gif" alt="dumplicate"></p>
<h4 id="2-扩大/缩小选择">2.扩大/缩小选择</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">alt+up/down</td>
<td style="text-align:left">ctrl+w / ctrl+shift+w</td>
</tr>
</tbody>
</table>
<p>以光标为基点,在上下文扩展选择的范围。例如:它将选择当前的变量,然后该语句,然后是这个方法等。<br><img src="http://www.developerphil.com/assets/12-expand_shrink_selection.gif" alt="dumplicate"></p>
<h4 id="3-环绕(包装)">3.环绕(包装)</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cmd+alt+t</td>
<td style="text-align:left">ctrl+alt+t</td>
</tr>
</tbody>
</table>
<p>这个操作可以包装一个结构的代码块。通常是一个 <em>if</em> 语句,一个循环、一个 <em>try-catch</em> 或者是一个 <em>runnable</em>。<br>如果你什么都没选, 那么它只会包裹当前行。</p>
<p><img src="http://www.developerphil.com/assets/13-surround_with.gif" alt="dumplicate"></p>
<h4 id="4-最近列表">4.最近列表</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cmd+e</td>
<td style="text-align:left">ctrl+e</td>
</tr>
</tbody>
</table>
<p>使用这个功能,你可以看到最近查看过的文件列表。</p>
<p><img src="http://www.developerphil.com/assets/14-recents.gif" alt="dumplicate"></p>
<h4 id="5-自动代码">5.自动代码</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cmd+j</td>
<td style="text-align:left">ctrl+j</td>
</tr>
</tbody>
</table>
<p>它可以快速插入代码片段。更有趣的是它带有合理的默认值,并通过参数引导你完成插入。</p>
<p>其他提示:</p>
<ul>
<li>如果你知道缩写,你也可以不用快捷方式。你仅仅需要如果缩写并且使用_Tab_key 完成即可。</li>
</ul>
<p><img src="http://www.developerphil.com/assets/15-live_templates.gif" alt="dumplicate"></p>
<h4 id="6-移动方法">6.移动方法</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cmd+alt+up/down</td>
<td style="text-align:left">ctrl+shift+up/down</td>
</tr>
</tbody>
</table>
<p>这是一个类似移动行的快捷方式,但是移动的是整个方法。没必要使用复制-粘贴,就可以上下移动方法。例如:你可以重新排序字段和内部类。</p>
<p><img src="http://www.developerphil.com/assets/15-movemethods.gif" alt="dumplicate"></p>
<h4 id="7-完成语句">7.完成语句</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cmd+shift+enter</td>
<td style="text-align:left">ctrl+shift+enter</td>
</tr>
</tbody>
</table>
<p>它会自动生成丢失的代码来完成一条语句,它通常的使用情景是:</p>
<ul>
<li>添加一个分号在行的末尾,即时光标不在行尾</li>
<li>在<em>if、while、for</em>的后面添加一个括号或者大括号</li>
<li>添加一个大括号在方法声明之后</li>
</ul>
<p>其他提示:</p>
<ul>
<li>如果一条语句已经完成,它会进入下一行,即时光标没有在当前行的最后一个字符.<br><img src="http://www.developerphil.com/assets/16-completestatement.gif" alt="dumplicate"></li>
</ul>
<h4 id="8-最后一次编辑的位置">8.最后一次编辑的位置</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cmd+shift+backspace</td>
<td style="text-align:left">ctrl+shift+backspace</td>
</tr>
</tbody>
</table>
<p>它会让你浏览你最后一次修改的位置,这个和点击工具栏的返回按钮是不一样的。它会带你在你修改的历史记录中浏览。</p>
<p><img src="http://www.developerphil.com/assets/17-navigate-previous-changes.gif" alt="dumplicate"></p>
<h4 id="9-整合行和文字">9.整合行和文字</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ctrl+shift+j</td>
<td style="text-align:left">ctrl+shift+j</td>
</tr>
</tbody>
</table>
<p>它能比你在行尾模拟删除键要做的更多,它可以保留当前的格式规则,并且它还可以:</p>
<ul>
<li>合并两个注释行,并且删除无用的<em>//</em></li>
<li>合并多行字符串,并且去除<em>+、””</em></li>
<li>整合字段和任务</li>
</ul>
<p>其他提示:</p>
<ul>
<li>如果你选择了一个字符串,跨越多行,那么它就可以将其整合成一行</li>
</ul>
<p><img src="http://www.developerphil.com/assets/18-joinlines.gif" alt="dumplicate"></p>
<h4 id="10-查找">10.查找</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">alt+f1</td>
<td style="text-align:left">alt+f1</td>
</tr>
</tbody>
</table>
<p>获取当前文件,并且询问你在哪选择它。他可以在<em>project、structure</em>或者文件管理器中打开它。每一个动作都有一个数字或字母前缀,这是调用它的快捷方式。</p>
<p>你可以从文件或者直接从<em>project</em>试图调用测方法。</p>
<p><img src="http://www.developerphil.com/assets/19-select-in.gif" alt="dumplicate"></p>
<h4 id="11-展开/删除">11.展开/删除</h4><p>这个操作将会移除包裹的代码,它可以移除一个<em>if</em>语句、<em>while</em> 循环、<em>try-catch</em> 或者<em>runnable</em> 。<br>这和包裹的快捷方式是完全相反的。</p>
<p><img src="http://www.developerphil.com/assets/20-unwrap.gif" alt="dumplicate"></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>原作者：Philippe Breault<br>原文地址：<a href="http://www.developerphil.com/android-studio-tips-of-the-day-roundup-2/" target="_blank]]>
    </summary>
    
      <category term="Android Studio" scheme="http://xiaofeng.site/tags/Android-Studio/"/>
    
      <category term="tips of the Day" scheme="http://xiaofeng.site/tags/tips-of-the-Day/"/>
    
      <category term="快捷键" scheme="http://xiaofeng.site/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
      <category term="Android Studio" scheme="http://xiaofeng.site/categories/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio Tips of the Day(1)]]></title>
    <link href="http://xiaofeng.site/2015/12/22/Android-Studio-Tips-of-the-Day(1)/undefined/"/>
    <id>http://xiaofeng.site/2015/12/22/Android-Studio-Tips-of-the-Day(1)/undefined/</id>
    <published>2015-12-22T09:19:51.000Z</published>
    <updated>2016-03-01T03:26:11.329Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原作者：Philippe Breault<br>原文地址：<a href="http://www.developerphil.com/android-studio-tips-of-the-day-roundup-1/" target="_blank" rel="external">http://www.developerphil.com/…day-roundup-1/</a></p>
</blockquote>
<h4 id="关于快捷键">关于快捷键</h4><p>Android Studio 提供了不同的按键对应关系(在快捷键和动作之间的映射).你能看到你正在使用的案件映射，通过<em>Settings-&gt;KeyMap.</em></p>
<h4 id="1-高亮显示">1.高亮显示</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cmd+shift+f7</td>
<td style="text-align:left">ctrl+shift+f7</td>
</tr>
</tbody>
</table>
<p>高亮显示光标所在的字符，这不仅仅是一个简单的匹配模式，它会了解当前的范围，并且高亮范围内同类的字符。你可以向上、向下浏览，通过：<em>Edit -&gt; Find -&gt; Find Next/Previous</em></p>
<p>其他提示：</p>
<ul>
<li>高亮一个方法中的“return”或者“throw”，其他方法也会同样高亮显示</li>
<li>高亮类声明中“extends”或者“implements”，同样会高亮 <strong>override/implemented</strong>的方法</li>
<li>高亮一个 import 会同样高亮使用它的地方</li>
<li>可以通过 <em>Escape</em> 取消高亮</li>
</ul>
<p><img src="http://www.developerphil.com/assets/01-highlight.gif" alt="ctrlshiftf7"></p>
<h4 id="2-在方法和内部类之间移动">2.在方法和内部类之间移动</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ctrl+up/down</td>
<td style="text-align:left">alt+up/down</td>
</tr>
</tbody>
</table>
<p>在当前文件中，移动光标到下一个方法或者类的名字开头。</p>
<p>如果你在方法内，向上就会将光标移动到该方法的名字开头。它非常有用，因为它让你在正确的地方重构或者发现方法的用法。</p>
<p><img src="http://www.developerphil.com/assets/02-move_between_methods.gif" alt="move"></p>
<h4 id="3-类结构弹窗">3.类结构弹窗</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cmd+f12</td>
<td style="text-align:left">ctrl+f12</td>
</tr>
</tbody>
</table>
<p>用来展示当前类的概要和内部的导航.最好的事情是你可以使用你的键盘过滤。这是一件非常高效的方法，去定位到一个你知道其名字的方法。</p>
<p>其他提示：</p>
<ul>
<li>输入过滤列表时，你可以使用驼峰匹配。例如：输入<strong>“oCr”</strong>将查找到<strong>“onCreate”</strong></li>
<li>你也可以切换复选框来显示匿名内部类。假如你想要查找<strong>onClickListener</strong>中的<strong>onClick</strong>方法，这个就非常好用。</li>
</ul>
<p><img src="http://www.developerphil.com/assets/04-callinghierarchy.gif" alt="hierarachy"></p>
<h4 id="4-调用层级结构弹窗">4.调用层级结构弹窗</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ctrl+alt+h</td>
<td style="text-align:left">ctrl+alt+h</td>
</tr>
</tbody>
</table>
<p>它可以显示一个方法的声明和调用之间可能的路径。<br><img src="http://www.developerphil.com/assets/03-filestructure.gif" alt="popup"></p>
<h4 id="5-定义快速查询">5.定义快速查询</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">alt+space</td>
<td style="text-align:left">ctrl+shift+i</td>
</tr>
</tbody>
</table>
<p>有没有想要查看一个方法或者类的实现，但是又不想离开当前的页面？使用这个快捷键就可以在当前页面通过窗口的形式展现。<br><img src="http://www.developerphil.com/assets/05-quickdefinition.gif" alt="quick"></p>
<h4 id="6-折叠展开代码块">6.折叠展开代码块</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">alt+plus/minus</td>
<td style="text-align:left">ctrl+shift+plus/minus</td>
</tr>
</tbody>
</table>
<p>这个功能的目的是让你隐藏你此刻不关心的东西。他将以最简单的形式隐藏整个代码块（例如：当你打开一个新的文件的时候忽略 <em>import</em>列表）。一个更有趣的用法是，它会隐藏周围简单的匿名内部类模块，并使它看起来像一个lambda表达式。</p>
<p>其他提示：</p>
<ul>
<li>你可以设置默认，通过 <em>Edit -&gt; Code Folding.</em><br><img src="http://www.developerphil.com/assets/06-codefolding.gif" alt="fold"></li>
</ul>
<h4 id="7-书签">7.书签</h4><ul>
<li>切换书签</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">f3</td>
<td style="text-align:left">f11</td>
</tr>
</tbody>
</table>
<ul>
<li>通过助记符切换书签</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">alt+f3</td>
<td style="text-align:left">ctrl+f11</td>
</tr>
</tbody>
</table>
<p>如果你分配了一个数据，你可以通过快捷方式 <em>ctrl+number</em> 回到书签</p>
<ul>
<li>显示书签</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cmd+f3</td>
<td style="text-align:left">shift+f11</td>
</tr>
</tbody>
</table>
<p><img src="http://www.developerphil.com/assets/08-findaction.gif" alt="find"></p>
<h4 id="8-符号查找">8.符号查找</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cmd+shift+a</td>
<td style="text-align:left">ctrl+shift+a</td>
</tr>
</tbody>
</table>
<p>对于Android Studio，你可以通过它的名字，调用任何你知道的菜单或者符号！这对于你曾经有一段时间使用过，但却没有快捷方式的命令是非常有用的。</p>
<p>其他提示：</p>
<ul>
<li>如果有相关联的快捷键，会一同显示<br><img src="http://www.developerphil.com/assets/07-bookmarks.gif" alt="move"></li>
</ul>
<h4 id="9-行上下移动">9.行上下移动</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">alt+shift+up/down</td>
<td style="text-align:left">alt+shift+up/down</td>
</tr>
</tbody>
</table>
<p><img src="http://www.developerphil.com/assets/09-movelines.gif" alt="bookmark"></p>
<h4 id="10-删除行">10.删除行</h4><table>
<thead>
<tr>
<th style="text-align:left">Mac</th>
<th style="text-align:left">Win&amp;Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cmd+backspace</td>
<td style="text-align:left">ctrl+y</td>
</tr>
</tbody>
</table>
<p><img src="http://www.developerphil.com/assets/10-deleteline.gif" alt="bookmark"></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>原作者：Philippe Breault<br>原文地址：<a href="http://www.developerphil.com/android-studio-tips-of-the-day-roundup-1/" target="_blank]]>
    </summary>
    
      <category term="Android Studio" scheme="http://xiaofeng.site/tags/Android-Studio/"/>
    
      <category term="tips of the Day" scheme="http://xiaofeng.site/tags/tips-of-the-Day/"/>
    
      <category term="快捷键" scheme="http://xiaofeng.site/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
      <category term="Android Studio" scheme="http://xiaofeng.site/categories/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java的连接与初始化]]></title>
    <link href="http://xiaofeng.site/2015/12/09/Java%E7%9A%84%E8%BF%9E%E6%8E%A5%E4%B8%8E%E5%88%9D%E5%A7%8B%E5%8C%96/undefined/"/>
    <id>http://xiaofeng.site/2015/12/09/Java的连接与初始化/undefined/</id>
    <published>2015-12-09T04:52:53.000Z</published>
    <updated>2015-12-09T05:49:30.617Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原文作者：iceAeterna<br>原文链接：<a href="http://www.cnblogs.com/iceAeterNa/p/4876747.html" target="_blank" rel="external">http://www.cnblogs.com/iceAeterNa/p/4876747.html</a></p>
</blockquote>
<h4 id="序言">序言</h4><p>Java虚拟机通过装载、连接、初始化来使得一个Java类型可以被Java程序所使用，如下图所示，其中连接过程又分为验证、准备、解析三个部分。其中部分类的解析过程可以推迟到程序真正使用其某个符号引用时再去解析。<br><img src="http://img.blog.csdn.net/20151010184504881" alt=""></p>
<h4 id="解析">解析</h4><p>解析过程可以推迟到类的初始化之后再进行，但这是有条件的，Java虚拟机必须在每个类或接口主动使用时进行初始化。<br>以下为主动使用的情况： </p>
<ul>
<li>创建某个类新的实例(无论直接通过new创建出来的，还是通过反射、克隆、序列化创建的)</li>
<li>使用某个类的静态方法 </li>
<li>访问某个类或接口的静态字段 </li>
<li>调用JavaAPI中的某些反射方法 </li>
<li>初始化某个类的子类(要求其祖先类都要被初始化，否则无法正确访问其继承的成员) </li>
<li>启动某个标明为启动类的类(含有main()方法)<br>主动使用会导致类的初始化，其超类均将在该类的初始化之前被初始化，但通过子类访问父类的静态字段或方法时，对于子类(或子接口、接口的实现类)来说，这种访问就是被动访问，或者说访问了该类(接口)中的不在该类(接口)中声明的静态成员。 </li>
</ul>
<p>Grandpa的定义如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ice.passiveaccess;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Grandpa</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Grandpa was initialized."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Parent的定义如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ice.passiveaccess;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> <span class="keyword">extends</span> <span class="title">Grandpa</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> String language = <span class="string">"Chinese"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Parent was initialized."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Cindy的定义如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ice.passiveaccess;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cindy</span> <span class="keyword">extends</span> <span class="title">Parent</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Child was initialized."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>现在通过Cindy访问父类的language成员:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ice.passiveaccess;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PassiveAccessTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">        System.out.println(Cindy.language);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>结果如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Grandpa was initialized.</span><br><span class="line">Parent was initialized.</span><br><span class="line">Chinese</span><br></pre></td></tr></table></figure></p>
<p>可见这是被动访问，Cindy自身并没有初始化</p>
<h4 id="装载">装载</h4><p>装载的过程：</p>
<ul>
<li>(1).找到该类型的class文件，产生一个该类型的class文件二进制数据流(ClassLoader需要实现的loadClassData()方法) </li>
<li>(2).解析该二进制数据流为方法区内的数据结构 </li>
<li>(3).创建一个该类型的java.lang.Class实例 </li>
</ul>
<p>在加载器的相关代码中可以看到，最终通过defineClass()创建一个Java类型对象(Class对象)。 </p>
<h4 id="验证">验证</h4><p>class文件校验器需要四趟独立的扫描来完成验证工作，其中： </p>
<ul>
<li>第一趟扫描在装载时进行，会对class文件进行结构检查，如 <ul>
<li>(1).对魔数进行检查，以判断该文件是否是一个正常的class文件 </li>
<li>(2).对主次版本号进行检查，以判断class文件是否与java虚拟机兼容 </li>
<li>(3).对class文件的长度和类型进行检查，避免class文件部分缺失或被附加内容。 　</li>
</ul>
</li>
<li>第二趟扫描在连接过程中进行，会对类型数据进行语义检查，主要检查各个类的二进制兼容性(主要是查看超类和子类的关系)和类本身是否符合特定的语义条件 <ul>
<li>(1).final类不能拥有子类 </li>
<li>(2).final方法不能被重写(覆盖) </li>
<li>(3).子类和超类之间没有不兼容的方法声明 </li>
<li>(4).检查常量池入口类型是否一致(如CONSTANT_Class常量池的内容是否指向一个CONSTANT_Utf8字符串常量池) </li>
<li>(5).检查常量池的所有特殊字符串，以确定它们是否是其所属类型的实例，以及是否符合特定的上下文无关语法、格式 </li>
</ul>
</li>
<li>第三趟扫描为字节码验证，其验证内容和实现较为复杂，主要检验字节码是否可以被java虚拟机安全地执行。 </li>
<li>第四趟扫描在解析过程中进行，为对符号引用的验证。在动态连接过程中，通过保存在常量池的符号引用查找被引用的类、接口、字段、方法时，在把符号引用替换成直接引用时，首先需要确认查找的元素真正存在，然后需要检查访问权限、查找的元素是否是静态类成员而非实例成员。 </li>
</ul>
<h4 id="准备">准备</h4><p>为类变量分配内存、设置默认初始值(内存设置初始值，而非对类变量真正地进行初始化，即类中声明int i = 5，但实际上这里是分配内存并设置初始值为0) </p>
<h4 id="解析-1">解析</h4><p>在类的常量池中寻找类、接口、字段、方法的符号引用，将这些符号引用替换成直接引用 </p>
<h4 id="初始化">初始化</h4><p>对类变量赋予指定的初始值(这个时候int i = 5就必须赋予i以初值5)。这个初始值的给定方式有两种，一种是通过类变量的初始化语句，一种是静态初始化语句。而这些初始化语句都将被Java编译器一起放在方法中。<br>如前面所述，一个类的初始化需要初始化其直接超类，并递归初始化其祖先类，初始化是通过调用类的初始化方法完成的。此外，对于接口，并不需要初始化其父接口，而只需要执行该接口的接口初始化方法就可以了。</p>
<p>注意：</p>
<ul>
<li>(1).在初始化阶段，只会为类变量(静态全局变量)进行初始化工作，并且当类变量声明为final类型切初始化语句采用了常量表达式方式进行初始化赋值，那么，也不会对其进行初始化，它将会直接被编译器计算并保存在常量池中，并且对这些变量的使用也将直接将其变量值嵌入到字节码中。<br>如UsefulParameter类如下： <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Class UsefulParameter&#123; </span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> height = <span class="number">2</span>; </span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> width = height * <span class="number">2</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>类Area的类变量初始化如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Class Area&#123; </span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> height = UsefulParameter.height * <span class="number">2</span> ; </span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> width = UsefulParameter.width * <span class="number">2</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在Area的&lt; clinit&gt;中，将直接把2、4嵌入到字节码中:<br><img src="http://images2015.cnblogs.com/blog/821477/201510/821477-20151014103108788-81357571.png" alt="clinit"></p>
<ul>
<li>(2).接口的初始化与类有所不同，在初始化阶段，会为在接口中声明的所有public、static和final类型的、无法被编译为常量的字段进行初始化 </li>
</ul>
<h4 id="类实例化">类实例化</h4><p>这里需要明白什么是类初始化，什么是类实例化，以及类的实例对象的初始化</p>
<p>如前面所述，类初始化时对类(静态)变量赋予指定的初始值，类初始化之后就可以访问类的静态字段和方法，而访问类的非静态(实例)字段和方法，就需要创建类的对象实例，故类的实例化是在类的初始化之后，是在堆上创建一个该类的对象。<br>类的静态方法和字段属于类，作为类型数据保存在方法区，其生命周期取决于类，而实例方法和字段位于Java堆，其生命周期取决于对象的生命周期。<br>　　<br><strong>类的初始化会从祖先类到子类、按出现顺序，对类变量的初始化语句、静态初始化语句块依次进行初始化。而对类实例的初始化也类似，会从祖先类到子类、按出现顺序，对类成员的初始化语句、实例初始化块、构造方法依次进行初始化。 </strong></p>
<p>比如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ice.init;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> i = print(<span class="string">"parent static:i"</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> ii = print(<span class="string">"parent:ii"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        print(<span class="string">"父类静态初始化"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        print(<span class="string">"父类实例初始化"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Parent</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"parent constructor:"</span> + str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">print</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"initial:"</span> + str);</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>子类Child如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ice.init;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> i = print(<span class="string">"child static:i"</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> ii = print(<span class="string">"child:ii"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        print(<span class="string">"子类静态初始化"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        print(<span class="string">"子类实例初始化"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Child</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(str);</span><br><span class="line">        System.out.println(<span class="string">"Child constructor:"</span> + str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">print</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"initial:"</span> + str);</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">        Child child = <span class="keyword">new</span> Child(<span class="string">"cindy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>其初始化顺序为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">initial:parent <span class="keyword">static</span>:i</span><br><span class="line">initial:父类静态初始化</span><br><span class="line">initial:child <span class="keyword">static</span>:i</span><br><span class="line">initial:子类静态初始化</span><br><span class="line">initial:parent:ii</span><br><span class="line">initial:父类实例初始化</span><br><span class="line">parent constructor:cindy</span><br><span class="line">initial:child:ii</span><br><span class="line">initial:子类实例初始化</span><br><span class="line">Child constructor:cindy</span><br></pre></td></tr></table></figure></p>
<p>Java编译器为每个类生成了至少一个实例初始化方法&lt; init &gt;，一个&lt; init &gt;方法分为三部分： 另一个初始化方法&lt; init &gt;()，对任意实例成员的初始化的字节码，构造方法的方法体的字节码</p>
<p>&lt; init &gt;方法的调用如下：<br>若&lt; init &gt;指明从this()方法明确调用另一个构造方法，那么将调用另一个构造方法，否则，若该类有直接超类，那么，若&lt; init &gt;指明从super()方法明确调用其超类的构造方法，那么将调用超类的构造方法，否则，将默认调用超类的无参构造方法。这样，将从其祖先类到该类，分别完成对应的实例成员的初始化(可能被子类覆盖) </p>
<p>接下来以一道题结束本节：<br>判断输出：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ice.init;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">T</span>  <span class="keyword">implements</span> <span class="title">Cloneable</span></span>&#123;</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> T t1 = <span class="keyword">new</span> T(<span class="string">"t1"</span>);</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> T t2 = <span class="keyword">new</span> T(<span class="string">"t2"</span>);</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> i = print(<span class="string">"i"</span>);</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> n = <span class="number">99</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">int</span> j = print(<span class="string">"j"</span>);</span><br><span class="line">      &#123;</span><br><span class="line">          print(<span class="string">"构造块"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">static</span> &#123;</span><br><span class="line">          print(<span class="string">"静态块"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">T</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">          System.out.println((++k) + <span class="string">":"</span> + str + <span class="string">"    i="</span> + i + <span class="string">"  n="</span> + n);</span><br><span class="line">          ++n; ++ i;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">print</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">          System.out.println((++k) +<span class="string">":"</span> + str + <span class="string">"   i="</span> + i + <span class="string">"   n="</span> + n);</span><br><span class="line">          ++n;</span><br><span class="line">          <span class="keyword">return</span> ++ i;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">          T t = <span class="keyword">new</span> T(<span class="string">"init"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>题解如下：</p>
<p>(1).首先T类被加载、连接后进行初始化，会先对字段k、t1、t2、i、n以及static块进行初始化。<br>(2).t1实例的初始化会初始化实例成员j，(实际上先进行父类实例内容的初始化)先调用静态方法print，并执行实例初始化块{}，        输出：<br> 1: j i=0 n= 0(i和n都还没有初始化)<br> 2:构造块 i=1 n=1<br>(3)随后调用t1实例的构造函数，输出：<br> 3:t1 i=2 n=2<br>(4).类似有t2实例的初始化：<br> 4: j i=3 n= 3<br> 5:构造块 i=4 n=4<br> 6:t2 i=5 n=5<br>(5).i的初始化：<br> 7.i i=6 n=6<br>(6).n的初始化和静态块的初始化：<br> 8.静态块 i=7 n=99(n已经被初始化)<br>(7).t实例的初始化：<br> 9.j i=8 n= 100<br> 10.构造块 i=9 n= 101<br> 11.init i=10 n= 102</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>原文作者：iceAeterna<br>原文链接：<a href="http://www.cnblogs.com/iceAeterNa/p/4876747.html" target="_blank" rel="external">http://www]]>
    </summary>
    
      <category term="Java" scheme="http://xiaofeng.site/tags/Java/"/>
    
      <category term="类初始化" scheme="http://xiaofeng.site/tags/%E7%B1%BB%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    
      <category term="虚拟机" scheme="http://xiaofeng.site/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
      <category term="Java" scheme="http://xiaofeng.site/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[通过Swiftype实现hexo站内搜索]]></title>
    <link href="http://xiaofeng.site/2015/11/25/%E9%80%9A%E8%BF%87Swiftype%E5%AE%9E%E7%8E%B0hexo%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/undefined/"/>
    <id>http://xiaofeng.site/2015/11/25/通过Swiftype实现hexo站内搜索/undefined/</id>
    <published>2015-11-25T09:30:54.000Z</published>
    <updated>2015-11-27T09:50:47.419Z</updated>
    <content type="html"><![CDATA[<p>hexo默认提供的是google的搜索，但是国内很蛋疼，无意中了解到swiftype效果不错，之前也看了一些方法不是很凑效，无奈自己研究了一下，可以正常使用了，这里就把方法share给大家，下面就直接进入正题吧。</p>
<h4 id="注册swiftype账号">注册swiftype账号</h4><p>官方地址：<a href="https://swiftype.com/" target="_blank" rel="external">https://swiftype.com/</a></p>
<h4 id="创建搜索引擎">创建搜索引擎</h4><p>注册完账号，接下来就是创建搜索引擎了，这里都是以图片引导，关键步骤都有;<br>1、CREATE AN ENGINE：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/swiftype/swiftfirst.jpg" alt="CREATEANENGINE"><br>2、继续点击创建：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/swiftype/swiftcreate.png" alt="create"><br>3、填写自己的域名，不带最后的反斜杠，点击VERIFY，4个验证项，通过之后会让你输入引擎的名字：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/swiftype/switysetname.png" alt="enginename"><br>4、接下来是让你配置sitemap（关于sitemap自行搜索教程），地址统一是：域名/sitemap.xml<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/swiftype/swiftaddsitemap.png" alt="sitemap"><br>5.1、点击COMPLETE SETUP，创建完成，会进入到如下界面，这里提供的代码就是需要在hexo配置的：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/swiftype/swiftinstallcode.png" alt="homepage"><br>5.2、向下滚动，可以点击content 查看自己的哪些数据被抓取出来了，跳转后页面右侧而且还可以测试搜索功能：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/swiftype/swifttextdata.png" alt="contentdata"><br>6、点击上面的INTEGRATE -&gt; INSTALL SEARCH ，进行一些关键的配置：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/swiftype/swiftinstallbutton.png" alt="install"><br>7、点击CHANGE CONFIGURATION：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/swiftype/swiftchangeconfig.png" alt="change"><br>8、进行一些更详细的配置，4个部分，样式默认就好，也可以自己选，这里就说下面两个部分（<strong>results container</strong> - 搜索结果页），我使用的是默认的，本页面底部有自定义搜索页的案例。<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/swiftype/swiftresultcontaner.png" alt="container"><br>9、配置<strong>Search field</strong>，这个就是搜索框-input的相关配置了，hexo主题默认就有，而且swiftype提供的SEARCH FIELD都是一样的input标签：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/swiftype/swiftsearchfield.png" alt="searchfield"></p>
<p> 如果都保持默认设置的话，完成到步骤5.1就可以看下面的教程了。</p>
<h4 id="hexo主题配置（pacman）">hexo主题配置（pacman）</h4><p>我的主题是Pacman的，这里就以pacman为例，其实没有本质的区别，大部分都是在主题目录的文件。</p>
<p><strong>1、</strong>首先打开<strong>pacman\_config.yml</strong>文件在末尾添加如下代码，提供对swiftype的支持：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swift_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<p><strong>2、</strong> 在<strong>hexo\source</strong>目录（注意不是pacman主题的source目录）下<strong>新建一个search文件夹</strong>（如果不存在的），在里面<strong>新建一个index.md</strong>，index.md中写入如下代码：</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: search</span><br><span class="line"><span class="header">title: search</span><br><span class="line">---</span></span><br></pre></td></tr></table></figure>
<p><strong>3、</strong> 切换的到<strong>pacman\layout\_partial</strong>目录下，大部分的代码配置都在这里完成的。先<strong>打开header.ejs</strong>，把<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">li</span>&gt;</span></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>之间的代码清空（我的默认是google的搜索，这里再添加上swftype的搜索，也就是第一个if部分），整合代码如下，直接<strong>copy</strong>过去就行：<br><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span>&lt;%<span class="ruby"> <span class="keyword">if</span>	(theme.swift_search&amp;&amp;theme.swift_search.enable)&#123; </span>%&gt;<span class="xml"></span><br><span class="line">	<span class="tag">&lt;<span class="title">form</span> <span class="attribute">class</span>=<span class="value">"search"</span> <span class="attribute">action</span>=<span class="value">"</span></span></span>&lt;%-<span class="ruby"> config.root </span>%&gt;<span class="xml"><span class="tag"><span class="value">search/index.html"</span> <span class="attribute">method</span>=<span class="value">"get"</span> <span class="attribute">accept-charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">label</span>&gt;</span>Search<span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">class</span>=<span class="value">"st-default-search-input"</span> <span class="attribute">maxlength</span>=<span class="value">"20"</span> <span class="attribute">placeholder</span>=<span class="value">"Search"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	</span>&lt;%<span class="ruby"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>	(theme.google_cse&amp;&amp;theme.google_cse.enable)&#123; </span>%&gt;<span class="xml"></span><br><span class="line">	<span class="tag">&lt;<span class="title">form</span> <span class="attribute">class</span>=<span class="value">"search"</span> <span class="attribute">action</span>=<span class="value">"</span></span></span>&lt;%-<span class="ruby"> config.root </span>%&gt;<span class="xml"><span class="tag"><span class="value">search/index.html"</span> <span class="attribute">method</span>=<span class="value">"get"</span> <span class="attribute">accept-charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">label</span>&gt;</span>Search<span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">id</span>=<span class="value">"search"</span> <span class="attribute">autocomplete</span>=<span class="value">"off"</span> <span class="attribute">name</span>=<span class="value">"q"</span> <span class="attribute">maxlength</span>=<span class="value">"20"</span> <span class="attribute">placeholder</span>=<span class="value">"</span></span></span>&lt;%=<span class="ruby"> _<span class="number">_</span>(<span class="string">'search'</span>) </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	</span>&lt;%<span class="ruby"> &#125; <span class="keyword">else</span> &#123; </span>%&gt;<span class="xml"></span><br><span class="line">	<span class="tag">&lt;<span class="title">form</span> <span class="attribute">class</span>=<span class="value">"search"</span> <span class="attribute">action</span>=<span class="value">"//google.com/search"</span> <span class="attribute">method</span>=<span class="value">"get"</span> <span class="attribute">accept-charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">label</span>&gt;</span>Search<span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">id</span>=<span class="value">"search"</span> <span class="attribute">name</span>=<span class="value">"q"</span> <span class="attribute">autocomplete</span>=<span class="value">"off"</span> <span class="attribute">maxlength</span>=<span class="value">"20"</span> <span class="attribute">placeholder</span>=<span class="value">"</span></span></span>&lt;%=<span class="ruby"> _<span class="number">_</span>(<span class="string">'search'</span>) </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">name</span>=<span class="value">"q"</span> <span class="attribute">value</span>=<span class="value">"site:</span></span></span>&lt;%-<span class="ruby"> config.url.replace(<span class="regexp">/^https?:\/\//</span>, <span class="string">''</span>) </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">	</span>&lt;%<span class="ruby"> &#125; </span>%&gt;<span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<p><strong>4、</strong>将原来的<strong>search.ejs</strong>中的代码<strong>清空</strong>，<strong>替换为以下的代码</strong>，其实主要就是为了控制结果的显示样式（后期可以自己调整），<strong>注意：将最下面的<code>&lt;script ...   &gt;  ...</code> 部分替换成swiftype给你的js代码</strong>。<br><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span>&lt;%<span class="ruby"> <span class="keyword">if</span>(theme.swift_search.enable) &#123; </span>%&gt;<span class="xml"></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span>  <span class="attribute">id</span>=<span class="value">"container"</span> <span class="attribute">class</span>=<span class="value">"page"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"st-results-container"</span> <span class="attribute">class</span>=<span class="value">"st-search-container"</span> <span class="attribute">style</span>=<span class="value">"width:80%"</span>&gt;</span>正在加载搜索结果，请稍等。<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"><span class="class">.st-result-text</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#fafafa</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">border-left</span>:<span class="value"> <span class="number">0.5em</span> solid <span class="hexcolor">#ccc</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-transition</span>:<span class="value"> border-left <span class="number">0.45s</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-moz-transition</span>:<span class="value"> border-left <span class="number">0.45s</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-o-transition</span>:<span class="value"> border-left <span class="number">0.45s</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-ms-transition</span>:<span class="value"> border-left <span class="number">0.45s</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">transition</span>:<span class="value"> border-left <span class="number">0.45s</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0.5em</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen and (min-width: <span class="number">768px</span>) </span>&#123;</span><br><span class="line">  <span class="class">.st-result-text</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">1em</span></span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class">.st-result-text</span><span class="pseudo">:hover</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">border-left</span>:<span class="value"> <span class="number">0.5em</span> solid <span class="hexcolor">#ea6753</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.st-result-text</span> <span class="tag">h3</span> <span class="tag">a</span><span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#2ca6cb</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">1.5</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">22px</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.st-snippet</span> <span class="tag">em</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">font-weight</span>:<span class="value"> bold</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#ea6753</span></span></span>;</span><br><span class="line">&#125;</span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params">w,d,t,u,n,s,e</span>)</span>&#123;w[<span class="string">'SwiftypeObject'</span>]=n;w[n]=w[n]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  (w[n].q=w[n].q||[]).push(<span class="built_in">arguments</span>);&#125;;s=d.createElement(t);</span><br><span class="line">  e=d.getElementsByTagName(t)[<span class="number">0</span>];s.async=<span class="number">1</span>;s.src=u;e.parentNode.insertBefore(s,e);</span><br><span class="line">  &#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">'script'</span>,<span class="string">'//s.swiftypecdn.com/install/v2/st.js'</span>,<span class="string">'_st'</span>);</span><br><span class="line"></span><br><span class="line">  _st(<span class="string">'install'</span>,<span class="string">'w7ca3xWstLkz2UvAeyAJ'</span>,<span class="string">'2.0.0'</span>);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span>&lt;%<span class="ruby"> &#125; </span>%&gt;<span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<p><strong>5、</strong>打开<strong>footer.ejs或header.ejs</strong>，在最后一个标签（<code>&lt;/div&gt;</code>）之前添加swiftype分配给你的js代码（同上），我的是：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">  <span class="list">(<span class="keyword">function</span><span class="list">(<span class="keyword">w</span>,d,<span class="literal">t</span>,u,n,s,e)</span>&#123;w[<span class="quoted">'SwiftypeObject</span>']=n<span class="comment">;w[n]=w[n]||function()&#123;</span></span><br><span class="line">  <span class="list">(<span class="keyword">w</span>[n].q=w[n].q||[])</span>.push<span class="list">(<span class="keyword">arguments</span>)</span><span class="comment">;&#125;;s=d.createElement(t);</span></span><br><span class="line">  e=d.getElementsByTagName<span class="list">(<span class="keyword">t</span>)</span>[<span class="number">0</span>]<span class="comment">;s.async=1;s.src=u;e.parentNode.insertBefore(s,e);</span></span><br><span class="line">  &#125;)</span><span class="list">(<span class="keyword">window</span>,document,<span class="quoted">'script</span>',<span class="quoted">'//s</span>.swiftypecdn.com/install/v2/st.js',<span class="quoted">'_st</span>')</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line">  _st<span class="list">(<span class="quoted">'install</span>',<span class="quoted">'w7ca3xWstLkz2UvAeyAJ</span>','<span class="number">2.0</span>.<span class="number">0</span>')</span><span class="comment">;</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<p>到这里所有的修改都已经完成了，如果没有问题的话，命令行执行：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="blockquote">&gt; hexo clean</span></span><br><span class="line"><span class="blockquote">&gt; hexo d -g</span></span><br></pre></td></tr></table></figure></p>
<p>等部署完成，你就可以打开你的Blog任性的搜索了</p>
<h4 id="推荐">推荐</h4><p>这里推荐一篇其他大神的Blog，可以自定义搜索结果页面，<a href="http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html" target="_blank" rel="external">点我跳转.</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>hexo默认提供的是google的搜索，但是国内很蛋疼，无意中了解到swiftype效果不错，之前也看了一些方法不是很凑效，无奈自己研究了一下，可以正常使用了，这里就把方法share给大家，下面就直接进入正题吧。</p>
<h4 id="注册swiftype账号">注册sw]]>
    </summary>
    
      <category term="hexo" scheme="http://xiaofeng.site/tags/hexo/"/>
    
      <category term="pacman" scheme="http://xiaofeng.site/tags/pacman/"/>
    
      <category term="swiftype" scheme="http://xiaofeng.site/tags/swiftype/"/>
    
      <category term="Hexo" scheme="http://xiaofeng.site/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[Win10]快捷键之Win组合键]]></title>
    <link href="http://xiaofeng.site/2015/11/25/Win10-%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%B9%8BWin%E7%BB%84%E5%90%88%E9%94%AE/undefined/"/>
    <id>http://xiaofeng.site/2015/11/25/Win10-快捷键之Win组合键/undefined/</id>
    <published>2015-11-25T01:27:42.000Z</published>
    <updated>2015-12-02T06:39:35.675Z</updated>
    <content type="html"><![CDATA[<h4 id="Win组合键">Win组合键</h4><table>
<thead>
<tr>
<th style="text-align:left">Shortcut</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Windows Key <img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey"></td>
<td style="text-align:left">Open and close the Start menu.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+1,<img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+2,etc.</td>
<td style="text-align:left">Switch to the desktop and launch the nth application in the taskbar. For example, <img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey"> +1 launches whichever application is first in the list, numbered from left to right.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+A</td>
<td style="text-align:left">Open the action center.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+B</td>
<td style="text-align:left">Highlight the notification area.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+C</td>
<td style="text-align:left">Launch Cortana into listening mode[注1].  Users can begin to speak to Cortana immediately.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+D</td>
<td style="text-align:left">Switch between <strong>Show Desktop</strong> (hides/shows any applications and other windows) and the previous state.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+E</td>
<td style="text-align:left">Switch to the desktop and launch File Explorer with the <strong>Quick Access</strong> tab displayed.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+H</td>
<td style="text-align:left">Open the action center.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+I</td>
<td style="text-align:left">Open the action center.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+K</td>
<td style="text-align:left">Open the <strong>Connect</strong> pane to connect to wireless displays and audio devices.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+L</td>
<td style="text-align:left">Lock the device and go to the <strong>Lock</strong> screen.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+M</td>
<td style="text-align:left">Switch to the desktop and minimize all open windows.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+O</td>
<td style="text-align:left">Lock device orientation.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+P</td>
<td style="text-align:left">Open the <strong>Project</strong> pane to search and connect to external displays and projectors.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+R</td>
<td style="text-align:left">Display the <strong>Run</strong> dialog box.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+S</td>
<td style="text-align:left">Launch Cortana.[注2]  Users can begin to type a query immediately.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+T</td>
<td style="text-align:left">Cycle through the apps on the taskbar.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+U</td>
<td style="text-align:left">Launch the Ease of Access Center.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+A</td>
<td style="text-align:left">Cycle through notifications.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+V</td>
<td style="text-align:left">Open the action center.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+X</td>
<td style="text-align:left">Open the advanced menu in the lower-left corner of the screen.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+Z</td>
<td style="text-align:left">Open the app-specific command bar.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+Enter</td>
<td style="text-align:left">Launch Narrator.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey"> + Space</td>
<td style="text-align:left">Switch input language and keyboard layout.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+Tab</td>
<td style="text-align:left">Open Task view.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+,</td>
<td style="text-align:left">Peek at the desktop.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+Plus Sign</td>
<td style="text-align:left">Zoom in.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+Minus Sign</td>
<td style="text-align:left">Zoom out.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+ESCAPE</td>
<td style="text-align:left">Close Magnifier.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+LEFT ARROW</td>
<td style="text-align:left">Dock the active window to the left half of the monitor.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+RIGHT ARROW</td>
<td style="text-align:left">Dock the active window to the right half of the monitor.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+UP ARROW</td>
<td style="text-align:left">Maximize the active window vertically and horizontally.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+DOWN ARROW</td>
<td style="text-align:left">Restore or minimize the active window.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+SHIFT UP ARROW</td>
<td style="text-align:left">Maximize the active window vertically, maintaining the current width.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+SHIFT DOWN ARROW</td>
<td style="text-align:left">Restore or minimize the active window vertically, maintaining the current width.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+SHIFT LEFT ARROW</td>
<td style="text-align:left">With multiple monitors, move the active window to the monitor on the left.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+SHIFT RIGHT ARROW</td>
<td style="text-align:left">With multiple monitors, move the active window to the monitor on the right.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+HOME</td>
<td style="text-align:left">Minimize all nonactive windows; restore on second keystroke.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+PRNT SCRN</td>
<td style="text-align:left">Take a picture of the screen and place it in the <strong>Computer&gt;Pictures&gt;Screenshots</strong> folder.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+CTRL+LEFT/RIGHT ARROW</td>
<td style="text-align:left">Switch to the next or previous virtual desktop.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+CTRL+D</td>
<td style="text-align:left">Create a new virtual desktop.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+CTRL_F4</td>
<td style="text-align:left">Close the current virtual desktop.</td>
</tr>
<tr>
<td style="text-align:left"><img src="http://7xod2d.com1.z0.glb.clouddn.com/WinKey.png" alt="WindowsKey">+?</td>
<td style="text-align:left">Launch the Windows Feedback App.</td>
</tr>
</tbody>
</table>
<p>[注1]:  If Cortana is unavailable or disabled, this shortcut has no function.</p>
<p>[注2]: Cortana is only available in certain countries/regions, and some Cortana features might not be available everywhere. If Cortana is unavailable or disabled, this command opens Search.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="Win组合键">Win组合键</h4><table>
<thead>
<tr>
<th style="text-align:left">Shortcut</th>
<th style="text-align:left">Description</th>
</tr>]]>
    </summary>
    
      <category term="Win10" scheme="http://xiaofeng.site/tags/Win10/"/>
    
      <category term="快捷键" scheme="http://xiaofeng.site/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
      <category term="Win10" scheme="http://xiaofeng.site/categories/Win10/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[推荐]Markdown编辑器(PC+手机端)]]></title>
    <link href="http://xiaofeng.site/2015/11/24/%E6%8E%A8%E8%8D%90-Markdown%E7%BC%96%E8%BE%91%E5%99%A8/undefined/"/>
    <id>http://xiaofeng.site/2015/11/24/推荐-Markdown编辑器/undefined/</id>
    <published>2015-11-24T07:14:12.000Z</published>
    <updated>2015-12-23T03:29:32.071Z</updated>
    <content type="html"><![CDATA[<h3 id="开篇">开篇</h3><p>相信大家都有去过Github吧，这是一个大牛集结，学习的好去处，可以说大部分开源项目都托管在这上面，我以AndroidSwipeLayou为例，我们看到的是这样的页面：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/github-readme.png" alt="gitbub-readme"><br>上面是代码目录结构，下面是什么？对，README.md！下面的内容都是README.md来描述的信息，我当时不知道.md是什么文件，也不知道它可以写出这么酷炫的文字和页面效果。md是markdown的简写，markdown提供了非常友好的文字处理能力，在了解到Markdown之后，才知道原来还可以这么玩，使用过了才知道它的强大之处。Github在添加README.md时就相当于是一个在线编辑器，而且还有转换预览，其实你可以在这里编辑，然后copy到任何支持的地方使用，但是离线的时候怎么办？于是开始寻找一款高效的编辑器，没错Sublime text，它已经成为一款程序员必备软件，无奈我没始终没安装上markdown的插件（请自行google安装教程），只好放弃了，但是最后我找到了各种Markdown的编辑器，下面就为大家一一揭晓。</p>
<h3 id="在线编辑器_-_马克飞象">在线编辑器 - 马克飞象</h3><p>官方地址：<a href="http://tool.oschina.net/markdown/" target="_blank" rel="external">点我跳转</a><br>这是oschina提供的一个在线的编辑器，可以实时预览、Html效果预览</p>
<h3 id="Windows_-_MarkdownPad">Windows - MarkdownPad</h3><p>官网地址：<a href="http://markdownpad.com/" target="_blank" rel="external">点我跳转</a><br>官方描述：<strong>MarkdownPad is a full-featured Markdown editor for Windows.</strong><br>这是我现在使用的PC端的Markdown编辑器，这是一款标准的Markdown编辑器，即时预览，谁用谁知道，有图有真相。<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/markdownpad.png" alt="markdownpad"></p>
<h3 id="Gmail_-_Markdown_Here">Gmail - Markdown Here</h3><p>这是一个Chrome的插件，它是用来在编写gmail时提供markdown的语法支持，还可以即时预览，以后你就可以打造属于自己炫酷的邮件了<br>Chrome扩展插件：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/emial-plugin1.png" alt="chromeplugin"><br>编辑gmail邮件：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/email-before.png" alt="gmailediter"><br>gmail的预览，点击图一插件按钮即可看到图二预览效果：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/email-plugin.png" alt="gmailpluginbutton"><br><img src="http://7xod2d.com1.z0.glb.clouddn.com/email-convert.png" alt="gmailpreview"></p>
<h3 id="Android_-_MarkdownX">Android - MarkdownX</h3><p>在这个年代，手机的功能已经强大到无法想象的地步了，Google提供的Android系统就为我们移动办公提供了一个很好的平台。手机端IDE你值得拥有（手机编写代码确实有点蛋疼），这里我要说的是一款Markdown编辑器，必备的功能 - 时时预览，在编辑页面右滑就可以预览，而且还可以同步Dropbox，是不是很强大！哦，果粉用户的你可以忽略这一段。<br>下图来自google play：<br><img src="http://7xod2d.com1.z0.glb.clouddn.com/markdownx.png" alt="markdownx"></p>
<p>这里只是我的个人感觉不错的编辑器，当然还有很多好的编辑器，主要是适合你的才是最好的，如果你有非常好的软件或编辑器可以告诉我，我也可以添加上去。主要是能让我们可以快速高效的编写更优美的代码和页面。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="开篇">开篇</h3><p>相信大家都有去过Github吧，这是一个大牛集结，学习的好去处，可以说大部分开源项目都托管在这上面，我以AndroidSwipeLayou为例，我们看到的是这样的页面：<br><img src="http://7xod2d.com1.z]]>
    </summary>
    
      <category term="Markdown" scheme="http://xiaofeng.site/tags/Markdown/"/>
    
      <category term="MarkdownPad" scheme="http://xiaofeng.site/tags/MarkdownPad/"/>
    
      <category term="MarkdownX" scheme="http://xiaofeng.site/tags/MarkdownX/"/>
    
      <category term="马克飞象" scheme="http://xiaofeng.site/tags/%E9%A9%AC%E5%85%8B%E9%A3%9E%E8%B1%A1/"/>
    
      <category term="Markdown" scheme="http://xiaofeng.site/categories/Markdown/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java之静态绑定和动态绑定]]></title>
    <link href="http://xiaofeng.site/2015/11/24/Java%E4%B9%8B%E9%9D%99%E6%80%81%E7%BB%91%E5%AE%9A%E5%92%8C%E5%8A%A8%E6%80%81%E7%BB%91%E5%AE%9A/undefined/"/>
    <id>http://xiaofeng.site/2015/11/24/Java之静态绑定和动态绑定/undefined/</id>
    <published>2015-11-24T02:07:20.000Z</published>
    <updated>2016-02-19T07:26:51.395Z</updated>
    <content type="html"><![CDATA[<h4 id="概念">概念</h4><ul>
<li>程序绑定：绑定指的是一个方法的调用与方法所在的类(方法主体)关联起来，Java中绑定分为绑定分为 <strong>静态绑定</strong>和<strong>动态绑定</strong></li>
<li>动态绑定：在面向过程中又称为<strong>后期绑定</strong>，在程序<strong>运行期</strong>进行了绑定，根据实际情况有选择的进行绑定</li>
<li>静态绑定：在面向过程中又称为<strong>前期绑定</strong>，在程序<strong>编译期</strong>进行了绑定，即在还没运行时，就已经加载到内存<h4 id="对比">对比</h4></li>
<li>动态绑定<ul>
<li>又称为后期绑定</li>
<li>发生在运行时期</li>
<li>虚方法（可以被子类重写的方法）会根据运行时的对象进行动态绑定</li>
<li>动态绑定使用对象信息来完成</li>
<li>典型应用是方法的重写（Override）</li>
</ul>
</li>
<li><p>静态绑定</p>
<ul>
<li>又称为前期绑定</li>
<li>发生在编译时期</li>
<li>使用private或static或final修饰的变量或者方法（包括构造方法）</li>
<li>静态绑定使用类信息来完成</li>
<li>典型应用是方法重载（Overload）</li>
</ul>
</li>
<li><p>运行期<br>Java的编译过程是将Java源文件编译成字节码（.class文件，JVM可执行代码）的过程，在这个过程中Java是不与内存打交道的，在这个过程中编译器会进行语法的分析，如果语法不正确就会报错</p>
</li>
<li>编译期<br>Java的运行过程是指JVM（Java虚拟机）装载字节码文件并解释执行，在这个过程才是真正的创建内存，执行Java程序</li>
</ul>
<p>Java字节码的执行有两种方式： </p>
<ul>
<li>即时编译方式：解释器先将字节编译成机器码，然后再执行该机器码</li>
<li>解释执行方式：解释器通过每次解释并执行一小段代码来完成java字节码程序的所有操作。</li>
</ul>
<p>Java程序在执行过程中其实是进行了两次转换，先将源文件转成字节码再转换成机器码。这也正是Java能一次编译，到处运行的原因。在不同的平台上装上对应的Java虚拟机，就可以实现相同的字节码转换成不同平台上的机器码，从而在不同的平台上运行</p>
<h4 id="验证">验证</h4><p>关于final、static、private和构造方法是前期绑定的理解：</p>
<ul>
<li><strong>private</strong><br>对于private的方法，首先它对外是不可见的，所以肯定不能被继承，那么就没办法通过子类的对象来调用，而只能通过类自身的对象来调用，因此就可以说private方法和定义这个方法的类绑定在了一起</li>
<li><strong>final</strong><br>final方法虽然可以被继承，但不能被重写（覆盖），虽然子类对象可以调用，但是调用的都是父类中所定义的那个final方法，（由此我们可以知道将方法声明为final类型，一是为了防止方法被覆盖，二是为了有效地关闭java中的动态绑定)</li>
<li><strong>static</strong><br>对于static方法，可以被子类继承，但是不能被子类重写（覆盖），但是可以被子类隐藏<br>就是说如果父类里有一个static方法，它的子类里如果没有对应的方法，那么当子类对象调用这个方法时就会使用父类中的方法。而如果子类中定义了相同的方法，则会调用子类的中定义的方法。唯一的不同就是，当子类对象向上转型为父类对象时，不论子类中有没有定义这个静态方法，该对象都会使用父类中的静态方法。因此这里说静态方法可以被隐藏而不能被覆盖。这与子类隐藏父类中的成员变量是一样的。隐藏和覆盖的区别在于，子类对象转换成父类对象后，能够访问父类被隐藏的变量和方法，而不能访问父类被覆盖的方法<br>由上面我们可以得出结论，如果一个方法不可被继承或者继承后不可被覆盖，那么这个方法就采用的静态绑定。</li>
<li><strong>构造</strong><br>构造方法也是不能被继承的，我们知道子类是通过super()来调用父类的无参构造方法，来完成对父类的初始化，因此编译时也可以知道这个构造方法到底是属于哪个类</li>
</ul>
<p><strong>示例代码</strong><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SuperClass</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> String attribute = <span class="string">"from SuperClass"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getAttribute</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> attribute;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span>(<span class="params">SuperClass superClass</span>) </span>&#123;</span><br><span class="line">		System.<span class="keyword">out</span>.println(<span class="string">" static method "</span> + superClass.attribute);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SubClass</span> <span class="title">extends</span> <span class="title">SuperClass</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> String attribute = <span class="string">"from SubClass"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getAttribute</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> attribute;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span>(<span class="params">SuperClass superClass</span>) </span>&#123;</span><br><span class="line">		System.<span class="keyword">out</span>.println(<span class="string">" static method "</span> + superClass.attribute);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		</span><br><span class="line">		SuperClass superClass = <span class="keyword">new</span> SubClass();</span><br><span class="line">		</span><br><span class="line">		SubClass subClass = <span class="keyword">new</span> SubClass();</span><br><span class="line">		</span><br><span class="line">		superClass.print(superClass);</span><br><span class="line">		</span><br><span class="line">		subClass.print(subClass);</span><br><span class="line">		</span><br><span class="line">		System.<span class="keyword">out</span>.println(<span class="string">" attribute "</span> + superClass.attribute);</span><br><span class="line">		</span><br><span class="line">		System.<span class="keyword">out</span>.println(<span class="string">" method "</span> + superClass.getAttribute());</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>输出结果</strong><br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">method</span> <span class="keyword">from</span> <span class="type">SuperClass</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">method</span> <span class="keyword">from</span> <span class="type">SuperClass</span></span><br><span class="line">attribute <span class="keyword">from</span> <span class="type">SuperClass</span></span><br><span class="line"><span class="keyword">method</span> <span class="keyword">from</span> <span class="type">SubClass</span></span><br></pre></td></tr></table></figure></p>
<h4 id="反编译">反编译</h4><p>使用JDK自带的javap命令反编译看看：<br><code>&gt;javap -c SubClass</code><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">Warning: Binary file SubClass contains com.gogh.bind.SubClass</span><br><span class="line">Compiled from <span class="string">"SubClass.java"</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> com.gogh.bind.SubClass extends com.gogh.bind.SuperClass &#123;</span><br><span class="line">  <span class="keyword">protected</span> java.lang.String attribute;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> com.gogh.bind.SubClass();</span><br><span class="line">    Code:</span><br><span class="line">       <span class="number">0</span>: aload_0</span><br><span class="line">       <span class="number">1</span>: invokespecial <span class="preprocessor">#<span class="number">10</span>                 <span class="comment">// Method com/gogh/bind/SuperClass."&lt;init&gt;":()V</span></span></span><br><span class="line">       <span class="number">4</span>: aload_0</span><br><span class="line">       <span class="number">5</span>: ldc           <span class="preprocessor">#<span class="number">12</span>                 <span class="comment">// String from SubClass</span></span></span><br><span class="line">       <span class="number">7</span>: putfield      <span class="preprocessor">#<span class="number">14</span>                 <span class="comment">// Field attribute:Ljava/lang/String;</span></span></span><br><span class="line">      <span class="number">10</span>: <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> java.lang.<span class="function">String <span class="title">getAttribute</span><span class="params">()</span></span>;</span><br><span class="line">    Code:</span><br><span class="line">       <span class="number">0</span>: aload_0</span><br><span class="line">       <span class="number">1</span>: getfield      <span class="preprocessor">#<span class="number">14</span>                 <span class="comment">// Field attribute:Ljava/lang/String;</span></span></span><br><span class="line">       <span class="number">4</span>: <span class="function">areturn</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(com.gogh.bind.SuperClass)</span></span>;</span><br><span class="line">    Code:</span><br><span class="line">       <span class="number">0</span>: getstatic     <span class="preprocessor">#<span class="number">24</span>                 <span class="comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span></span></span><br><span class="line">       <span class="number">3</span>: <span class="keyword">new</span>           <span class="preprocessor">#<span class="number">30</span>                 <span class="comment">// class java/lang/StringBuilder</span></span></span><br><span class="line">       <span class="number">6</span>: dup</span><br><span class="line">       <span class="number">7</span>: ldc           <span class="preprocessor">#<span class="number">32</span>                 <span class="comment">// String  static method</span></span></span><br><span class="line">       <span class="number">9</span>: invokespecial <span class="preprocessor">#<span class="number">34</span>                 <span class="comment">// Method java/lang/StringBuilder."&lt;init&gt;":(Ljava/lang/String;)V</span></span></span><br><span class="line">      <span class="number">12</span>: aload_0</span><br><span class="line">      <span class="number">13</span>: getfield      <span class="preprocessor">#<span class="number">37</span>                 <span class="comment">// Field com/gogh/bind/SuperClass.attribute:Ljava/lang/String;</span></span></span><br><span class="line">      <span class="number">16</span>: invokevirtual <span class="preprocessor">#<span class="number">38</span>                 <span class="comment">// Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span></span></span><br><span class="line">      <span class="number">19</span>: invokevirtual <span class="preprocessor">#<span class="number">42</span>                 <span class="comment">// Method java/lang/StringBuilder.toString:()Ljava/lang/String;</span></span></span><br><span class="line">      <span class="number">22</span>: invokevirtual <span class="preprocessor">#<span class="number">45</span>                 <span class="comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span></span></span><br><span class="line">      <span class="number">25</span>: <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(java.lang.String[])</span></span>;</span><br><span class="line">    Code:</span><br><span class="line">       <span class="number">0</span>: <span class="keyword">new</span>           <span class="preprocessor">#<span class="number">1</span>                  <span class="comment">// class com/gogh/bind/SubClass</span></span></span><br><span class="line">       <span class="number">3</span>: dup</span><br><span class="line">       <span class="number">4</span>: invokespecial <span class="preprocessor">#<span class="number">54</span>                 <span class="comment">// Method "&lt;init&gt;":()V</span></span></span><br><span class="line">       <span class="number">7</span>: astore_1</span><br><span class="line">       <span class="number">8</span>: <span class="keyword">new</span>           <span class="preprocessor">#<span class="number">1</span>                  <span class="comment">// class com/gogh/bind/SubClass</span></span></span><br><span class="line">      <span class="number">11</span>: dup</span><br><span class="line">      <span class="number">12</span>: invokespecial <span class="preprocessor">#<span class="number">54</span>                 <span class="comment">// Method "&lt;init&gt;":()V</span></span></span><br><span class="line">      <span class="number">15</span>: astore_2</span><br><span class="line">      <span class="number">16</span>: aload_1</span><br><span class="line">      <span class="number">17</span>: invokestatic  <span class="preprocessor">#<span class="number">55</span>                 <span class="comment">// Method com/gogh/bind/SuperClass.print:(Lcom/gogh/bind/SuperClass;)V</span></span></span><br><span class="line">      <span class="number">20</span>: aload_2</span><br><span class="line">      <span class="number">21</span>: invokestatic  <span class="preprocessor">#<span class="number">57</span>                 <span class="comment">// Method print:(Lcom/gogh/bind/SuperClass;)V</span></span></span><br><span class="line">      <span class="number">24</span>: getstatic     <span class="preprocessor">#<span class="number">24</span>                 <span class="comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span></span></span><br><span class="line">      <span class="number">27</span>: <span class="keyword">new</span>           <span class="preprocessor">#<span class="number">30</span>                 <span class="comment">// class java/lang/StringBuilder</span></span></span><br><span class="line">      <span class="number">30</span>: dup</span><br><span class="line">      <span class="number">31</span>: ldc           <span class="preprocessor">#<span class="number">58</span>                 <span class="comment">// String  attribute</span></span></span><br><span class="line">      <span class="number">33</span>: invokespecial <span class="preprocessor">#<span class="number">34</span>                 <span class="comment">// Method java/lang/StringBuilder."&lt;init&gt;":(Ljava/lang/String;)V</span></span></span><br><span class="line">      <span class="number">36</span>: aload_1</span><br><span class="line">      <span class="number">37</span>: getfield      <span class="preprocessor">#<span class="number">37</span>                 <span class="comment">// Field com/gogh/bind/SuperClass.attribute:Ljava/lang/String;</span></span></span><br><span class="line">      <span class="number">40</span>: invokevirtual <span class="preprocessor">#<span class="number">38</span>                 <span class="comment">// Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span></span></span><br><span class="line">      <span class="number">43</span>: invokevirtual <span class="preprocessor">#<span class="number">42</span>                 <span class="comment">// Method java/lang/StringBuilder.toString:()Ljava/lang/String;</span></span></span><br><span class="line">      <span class="number">46</span>: invokevirtual <span class="preprocessor">#<span class="number">45</span>                 <span class="comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span></span></span><br><span class="line">      <span class="number">49</span>: getstatic     <span class="preprocessor">#<span class="number">24</span>                 <span class="comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span></span></span><br><span class="line">      <span class="number">52</span>: <span class="keyword">new</span>           <span class="preprocessor">#<span class="number">30</span>                 <span class="comment">// class java/lang/StringBuilder</span></span></span><br><span class="line">      <span class="number">55</span>: dup</span><br><span class="line">      <span class="number">56</span>: ldc           <span class="preprocessor">#<span class="number">60</span>                 <span class="comment">// String  method</span></span></span><br><span class="line">      <span class="number">58</span>: invokespecial <span class="preprocessor">#<span class="number">34</span>                 <span class="comment">// Method java/lang/StringBuilder."&lt;init&gt;":(Ljava/lang/String;)V</span></span></span><br><span class="line">      <span class="number">61</span>: aload_1</span><br><span class="line">      <span class="number">62</span>: invokevirtual <span class="preprocessor">#<span class="number">62</span>                 <span class="comment">// Method com/gogh/bind/SuperClass.getAttribute:()Ljava/lang/String;</span></span></span><br><span class="line">      <span class="number">65</span>: invokevirtual <span class="preprocessor">#<span class="number">38</span>                 <span class="comment">// Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span></span></span><br><span class="line">      <span class="number">68</span>: invokevirtual <span class="preprocessor">#<span class="number">42</span>                 <span class="comment">// Method java/lang/StringBuilder.toString:()Ljava/lang/String;</span></span></span><br><span class="line">      <span class="number">71</span>: invokevirtual <span class="preprocessor">#<span class="number">45</span>                 <span class="comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span></span></span><br><span class="line">      <span class="number">74</span>: <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>通过javap我们只能看到静态绑定的部分，就是两个print方法的调用和superClass.attribute，直接看main方法里面的内容：</p>
<ul>
<li>17: invokestatic  #55                 // Method com/gogh/bind/SuperClass.print:(Lcom/gogh/bind/SuperClass;)V<br>调用的SuperClass.print方法</li>
<li>21: invokestatic  #57                 // Method print:(Lcom/gogh/bind/SuperClass;)V</li>
<li>37: getfield      #37                 // Field com/gogh/bind/SuperClass.attribute:Ljava/lang/String;<br>这个也是调用的SuperClass.print方法<h4 id="总结">总结</h4>Java中的static方法和final方法属于前期绑定，子类无法重写final方法，除了static方法和final方法之外的其他方法属于后期绑定，运行时能判断对象的类型进行绑定。</li>
</ul>
<p>与方法不同，在处理Java类中的成员变量（静态和非静态）时，并不是采用运行时绑定，而是一般意义上的静态绑定。所以在向上转型的情况下，对象的方法可以找到子类，而对象的属性（成员变量）还是父类的属性（子类对父类成员变量的隐藏）。</p>
<p>Java因为什么对属性要采取静态的绑定方法？这是因为静态绑定是有很多的好处，它可以让我们在编译期就发现程序中的错误，而不是在运行期，这样就可以提高程序的运行效率！由于动态绑定需要在运行时确定执行哪个方法实现或者变量，比起静态绑定起来要耗时。对方法采取动态绑定是为了实现多态，多态是Java的一大特色，多态也是面向对象的关键技术之一，所以Java是以效率为代价来实现多态这是很值得的，所以在不影响整体设计的情况下，我们可以考虑将方法或者变量使用private，static或者final进行修饰。</p>
<p>内容来自互联网+个人见解，如果有哪里有问题，请联系我并指正，我会及时纠正处理。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="概念">概念</h4><ul>
<li>程序绑定：绑定指的是一个方法的调用与方法所在的类(方法主体)关联起来，Java中绑定分为绑定分为 <strong>静态绑定</strong>和<strong>动态绑定</strong></li>
<li>动态绑定：在面向过程]]>
    </summary>
    
      <category term="动态绑定" scheme="http://xiaofeng.site/tags/%E5%8A%A8%E6%80%81%E7%BB%91%E5%AE%9A/"/>
    
      <category term="重写" scheme="http://xiaofeng.site/tags/%E9%87%8D%E5%86%99/"/>
    
      <category term="重载" scheme="http://xiaofeng.site/tags/%E9%87%8D%E8%BD%BD/"/>
    
      <category term="静态绑定" scheme="http://xiaofeng.site/tags/%E9%9D%99%E6%80%81%E7%BB%91%E5%AE%9A/"/>
    
      <category term="Java" scheme="http://xiaofeng.site/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java重载匹配优先级]]></title>
    <link href="http://xiaofeng.site/2015/11/23/Java%E9%87%8D%E8%BD%BD%E5%8C%B9%E9%85%8D%E4%BC%98%E5%85%88%E7%BA%A7/undefined/"/>
    <id>http://xiaofeng.site/2015/11/23/Java重载匹配优先级/undefined/</id>
    <published>2015-11-23T08:31:05.000Z</published>
    <updated>2015-11-24T09:59:07.532Z</updated>
    <content type="html"><![CDATA[<h4 id="前情提要">前情提要</h4><p>Java面向对象的三个基本特征：继承、封装和多态；多态主要体现在重载和重写；</p>
<h4 id="示例代码">示例代码</h4><p>无意间看到这样一个问题，为了方便直观，就用代码来描述问题，有这样一个类：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OverloadPriority</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(Object arg)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"parameter type = Object"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"parameter type = int"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">long</span> arg)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"parameter type = long"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">double</span> arg)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"parameter type = double"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">float</span> arg)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"parameter type = float"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> arg)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"parameter type = char"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(Character arg)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"parameter type = Character"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span>... arg)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"parameter type = char..."</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(Serializable arg)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"parameter type = Serializable"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(Comparable&lt;?&gt; arg)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"parameter type = Comparable"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// int</span></span><br><span class="line">		print(<span class="string">'g'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>可以看到我们这里重载了print(xxx)这个方法，不同类型的参数，那么在调用上会出现什么问题呢？这里就以char类型为例来分析一下。</p>
<p>main方法执行print(‘g’)，输出结果毫无疑问就是：<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">parameter</span> <span class="keyword">type</span> = <span class="built_in">char</span></span><br></pre></td></tr></table></figure></p>
<p>那么注释掉print(char arg)这个方法，会输出什么结果呢？<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">parameter</span> <span class="keyword">type</span> = <span class="built_in">int</span></span><br></pre></td></tr></table></figure></p>
<p>那么注释掉print(int arg)这个方法，会输出什么结果呢？<br><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">parameter</span> <span class="typedef"><span class="keyword">type</span> = long</span></span><br></pre></td></tr></table></figure></p>
<p>这是为什么呢？ 这就是重载当中参数类型的优先级问题。我们都知道’g’除了表示字符g之外，还能表示数字103（g的ASCII码是103），所以会输出为int，发生了类型转换，类型自动提升，结果依次是char -&gt; int -&gt; long -&gt; double -&gt; float -&gt; Character -&gt; Serializable or Comparable -&gt; Object -&gt; char…(变长参数，即char元素数组)</p>
<h4 id="总结">总结</h4><p>遇上重载时，会查找类型最匹配的参数，然后提升类型、封装类型、匹配接口、继承关系型、变长参数类型</p>
<h4 id="注意">注意</h4><ul>
<li>变长参数的重载优先级最低</li>
<li>char到byte或short之间的转换是不安全的</li>
<li>在Serializable和Comparable同时存在的情况下会报异常：<br>  The method print(Object) is ambiguous for the type OverloadPriority （意思是无法确定应该使用哪一个重载方法，<br>  因为Character实现了Serializable和Comparable这两个接口，<br>  而接口匹配的优先级是一样的，编译器无法判断转型为哪种类型，<br>  提示类型模糊，无法正常编译）</li>
<li>接口无法匹配之后，就会开始查找匹配的父类，优先级是顺着继承链，由下往上进行匹配</li>
</ul>
<p>所以在重载方法的时候大家一定要注意这些细节问题，这样可能导致最后输出的结果不是你想要的结果，大家可以编写这样的一段代码测试一下</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="前情提要">前情提要</h4><p>Java面向对象的三个基本特征：继承、封装和多态；多态主要体现在重载和重写；</p>
<h4 id="示例代码">示例代码</h4><p>无意间看到这样一个问题，为了方便直观，就用代码来描述问题，有这样一个类：<br><figu]]>
    </summary>
    
      <category term="java" scheme="http://xiaofeng.site/tags/java/"/>
    
      <category term="重载" scheme="http://xiaofeng.site/tags/%E9%87%8D%E8%BD%BD/"/>
    
      <category term="Java" scheme="http://xiaofeng.site/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android之Log混淆]]></title>
    <link href="http://xiaofeng.site/2015/11/18/Android%E4%B9%8BLog%E6%B7%B7%E6%B7%86/undefined/"/>
    <id>http://xiaofeng.site/2015/11/18/Android之Log混淆/undefined/</id>
    <published>2015-11-18T08:38:59.000Z</published>
    <updated>2016-02-19T07:25:38.238Z</updated>
    <content type="html"><![CDATA[<p>作为Android开发工程师，项目开发的过程中，日志的打印是必不可少的，通过这些日志我们可以很好分析程序运行的状况与正确性，可以使用的日志输出有哪种形式呢？发布release版本应该怎么屏蔽掉这些日志呢？<br><a id="more"></a></p>
<h3 id="日志形式">日志形式</h3><ul>
<li><strong>Java形式</strong><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.<span class="keyword">out</span>.println(<span class="string">" log for test "</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>这个一般不提倡使用</p>
<ul>
<li><strong>Android Log</strong><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Log</span><span class="built_in">.</span>d(<span class="built_in">TAG</span>, <span class="string">" log for test "</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>这个是Android标准的日志输出类：android.util.Log</p>
<h3 id="TAG定义">TAG定义</h3><p>关于TAG的命名简单说一下，基本上有以下几种形式：</p>
<ul>
<li><strong>人名</strong> <figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Log</span>.<span class="literal">d</span>(<span class="string">"gogh"</span> <span class="string">" log for test "</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>与代码无关，无法定位日志的位置</p>
<ul>
<li><strong>类名</strong><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">private static final <span class="type">String</span> <span class="keyword">TAG</span> <span class="title">= LogUtils</span>.class.getSimpleName();</span><br><span class="line">Log.d(<span class="operator">TAG</span>, <span class="string">" log for test "</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>经过混淆的类，类名会改变为a、b这种形式，相应的TAG值也会改变，同样无法定位相关代码域。</p>
<h3 id="TAG定义推荐">TAG定义推荐</h3><p>那么哪种形式的TAG定义相对来说比较规范呢？给大家推荐一种相对规范的定义形式：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class Utils &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> TAG = <span class="string">"Utils"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> setText(<span class="keyword">String</span> <span class="built_in">text</span>)&#123;</span><br><span class="line">        Logger.d(TAG, <span class="string">" setText text = "</span> + <span class="built_in">text</span> );</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>基本的规范是：</p>
<ul>
<li><strong>日志所在类</strong></li>
<li><strong>日志所在的方法</strong></li>
<li><strong>基本的信息</strong><br>这样的log是不是很好了就，对调试程序而言，比较直观，可读性不叫强，容易定位，关键是不会因为代码的混淆改变TAG的值。</li>
</ul>
<h3 id="屏蔽日志">屏蔽日志</h3><p>我们的开发分为很多个阶段，但最终还是要有一个release版本发布，就需要把日志输出屏蔽掉，这一步相信大家都接触过了，那么就简单分析一下这一步。</p>
<p>#####运行时屏蔽<br>这个应该是使用的最多的，那么何为运行时屏蔽呢？就是在我们自定义的log工具类中设置一个值来开关日志，例如：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">class</span> Logger &#123;</span><br><span class="line"></span><br><span class="line">    private static final boolean ENABLE = "true;</span><br><span class="line">    </span><br><span class="line">    public static void <span class="literal">d</span>(String tag, String message)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ENABLE)&#123;</span><br><span class="line">            android.util.<span class="keyword">Log</span>.<span class="literal">d</span>(tag, message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Logger.<span class="literal">d</span>(XXX, <span class="string">"VERSION = "</span> + Build.<span class="keyword">VERSION</span>.SDK_INT);</span><br></pre></td></tr></table></figure></p>
<p>编写代码的过程中我们可以使用Logger.d(xxx, xxx);的形式来打印日志，在发布打包时将ENABLE修改为false就可以关闭日志。程序在运行的过程中就不会显示日志，但是message部分的方法（Build.VERSION.SDK_INT）还是执行到了，稍后解释。</p>
<h5 id="编译期屏蔽">编译期屏蔽</h5><p>这个就很简单了，在打包发布的时候加入代码混淆，如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-assumenosideeffects class com.gogh.Logger&#123;&#10;    public static *** i(...);&#10;&#125;</span><br></pre></td></tr></table></figure></p>
<p>但是为了为了防止还有使用原生log的日志输出，直接混淆原生的log类，如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-assumenosideeffects class android.util.Log &#123;&#10;    public static *** v(...);&#10;    public static *** d(...);&#10;    public static *** i(...);&#10;    public static *** w(...);&#10;    public static *** e(...);&#10;&#125;</span><br></pre></td></tr></table></figure></p>
<p>这样就可以达到平日日志输出的效果了</p>
<h3 id="对比描述">对比描述</h3><p>运行时屏蔽其实很好理解，log中的日志输出是通过一个值控制的，这个输出的操作是在值判断通过之后进行的，而方法的调用需要传递多个参数，参数的传递肯定是在判断之前发生的，所以参数中的字串的拼接是会执行到的，方法同样也会被调用到，只是你看不到日志输出而已</p>
<p>编译期就是在编译过程中，Proguard进行优化，发生了内联操作，将dumpDebugInfo的被调用的方法体实现提取到调用的地方。在log相关的调用做了处理，结果是这里没有任何关于Logger.d(xxx,xxx)的调用，但是字串的拼接还是存在的，只是没有了方法的调用，这个可以通过反编译看看相关的代码片段</p>
<h3 id="总结">总结</h3><p>理论上编译期屏蔽相对于运行期屏蔽更优</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>作为Android开发工程师，项目开发的过程中，日志的打印是必不可少的，通过这些日志我们可以很好分析程序运行的状况与正确性，可以使用的日志输出有哪种形式呢？发布release版本应该怎么屏蔽掉这些日志呢？<br>]]>
    
    </summary>
    
      <category term="Log" scheme="http://xiaofeng.site/tags/Log/"/>
    
      <category term="Android" scheme="http://xiaofeng.site/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[解决Android Studio中Terminal无法输入的问题]]></title>
    <link href="http://xiaofeng.site/2015/11/16/%E8%A7%A3%E5%86%B3Android-Studio%E4%B8%ADTerminal%E6%97%A0%E6%B3%95%E8%BE%93%E5%85%A5%E7%9A%84%E9%97%AE%E9%A2%98/undefined/"/>
    <id>http://xiaofeng.site/2015/11/16/解决Android-Studio中Terminal无法输入的问题/undefined/</id>
    <published>2015-11-16T02:14:09.000Z</published>
    <updated>2015-11-18T07:02:56.617Z</updated>
    <content type="html"><![CDATA[<h3 id="问题描述：">问题描述：</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">Windows</span>系统下<span class="keyword">Android </span>Studio中的Terminal无法获取焦点，不能输入文字。</span><br></pre></td></tr></table></figure>
<h3 id="问题原因：">问题原因：</h3><p>这个是因为系统升级造成的不兼容问题，在Windows环境开发的朋友们估计早早的就升级Win10了吧，UI非<br>常的炫酷。然而AS中的Terminal使用的还是Windows中的cmd控制台，也就是位于<br>C:\Windows\System32\目录下的cmd.exe。Win10下的cmd相对于早期版本的cmd做了一些改进，导<br>致了这里描述的问题。</p>
<h3 id="解决方案：">解决方案：</h3><p>下面给出具体的操作步骤，有图有真相：</p>
<p>1、win+R组合键打开运行窗口，输入cmd ，点击OK</p>
<p><img src="http://7xod2d.com1.z0.glb.clouddn.com/cmd.png" alt="cmd窗口"></p>
<p>2、在出现的cmd窗口中，右键点击标题栏-&gt;Properties，出现如下窗口：</p>
<p><img src="http://7xod2d.com1.z0.glb.clouddn.com/settings.png" alt="Properties窗口"></p>
<p>3、勾选 Use legacy console（requires relaunch）即使用旧版控制台（需要重启生效），就这么简单的操作就可以解决问题了，赶快试试吧！</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="问题描述：">问题描述：</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td c]]>
    </summary>
    
      <category term="Android Studio" scheme="http://xiaofeng.site/tags/Android-Studio/"/>
    
      <category term="Terminal" scheme="http://xiaofeng.site/tags/Terminal/"/>
    
      <category term="Android" scheme="http://xiaofeng.site/categories/Android/"/>
    
  </entry>
  
</feed>
